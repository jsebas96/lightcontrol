

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Dec 13 13:11:29 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4553
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44  0000                     
    45                           	psect	idataCOMRAM
    46  002616                     __pidataCOMRAM:
    47                           	opt stack 0
    48                           
    49                           ;initializer for _tecla
    50  002616  00FF               	dw	255
    51                           
    52                           	psect	smallconst
    53  000800                     __psmallconst:
    54                           	opt stack 0
    55  000800  00                 	db	0
    56  000801                     _dpowers:
    57                           	opt stack 0
    58  000801  0001               	dw	1
    59  000803  000A               	dw	10
    60  000805  0064               	dw	100
    61  000807  03E8               	dw	1000
    62  000809  2710               	dw	10000
    63  00080B                     __end_of_dpowers:
    64                           	opt stack 0
    65  0000                     _TMR0	set	4054
    66  0000                     _ADCON0	set	4034
    67  0000                     _ADCON0bits	set	4034
    68  0000                     _ADCON1	set	4033
    69  0000                     _ADCON2	set	4032
    70  0000                     _ADCON2bits	set	4032
    71  0000                     _ADRESH	set	4036
    72  0000                     _ADRESL	set	4035
    73  0000                     _CCP2CON	set	4026
    74  0000                     _CCP2CONbits	set	4026
    75  0000                     _CCPR2L	set	4027
    76  0000                     _INTCON2bits	set	4081
    77  0000                     _INTCONbits	set	4082
    78  0000                     _PIR1bits	set	3998
    79  0000                     _PORTB	set	3969
    80  0000                     _PORTBbits	set	3969
    81  0000                     _PORTD	set	3971
    82  0000                     _PORTEbits	set	3972
    83  0000                     _PR2	set	4043
    84  0000                     _T0CONbits	set	4053
    85  0000                     _T2CON	set	4042
    86  0000                     _TRISB	set	3987
    87  0000                     _TRISC	set	3988
    88  0000                     _TRISD	set	3989
    89  0000                     _TRISEbits	set	3990
    90  0000                     _RBIF	set	32656
    91  0000                     _TMR0IF	set	32658
    92  00080B                     STR_5:
    93  00080B  54                 	db	84	;'T'
    94  00080C  45                 	db	69	;'E'
    95  00080D  4D                 	db	77	;'M'
    96  00080E  50                 	db	80	;'P'
    97  00080F  20                 	db	32
    98  000810  4F                 	db	79	;'O'
    99  000811  4E                 	db	78	;'N'
   100  000812  3A                 	db	58	;':'
   101  000813  25                 	db	37
   102  000814  32                 	db	50	;'2'
   103  000815  64                 	db	100	;'d'
   104  000816  73                 	db	115	;'s'
   105  000817  20                 	db	32
   106  000818  20                 	db	32
   107  000819  20                 	db	32
   108  00081A  20                 	db	32
   109  00081B  20                 	db	32
   110  00081C  00                 	db	0
   111  00081D                     STR_11:
   112  00081D  54                 	db	84	;'T'
   113  00081E  45                 	db	69	;'E'
   114  00081F  4D                 	db	77	;'M'
   115  000820  50                 	db	80	;'P'
   116  000821  20                 	db	32
   117  000822  4F                 	db	79	;'O'
   118  000823  46                 	db	70	;'F'
   119  000824  46                 	db	70	;'F'
   120  000825  3A                 	db	58	;':'
   121  000826  25                 	db	37
   122  000827  32                 	db	50	;'2'
   123  000828  64                 	db	100	;'d'
   124  000829  73                 	db	115	;'s'
   125  00082A  20                 	db	32
   126  00082B  20                 	db	32
   127  00082C  20                 	db	32
   128  00082D  20                 	db	32
   129  00082E  00                 	db	0
   130  00082F                     STR_2:
   131  00082F  41                 	db	65	;'A'
   132  000830  20                 	db	32
   133  000831  41                 	db	65	;'A'
   134  000832  55                 	db	85	;'U'
   135  000833  54                 	db	84	;'T'
   136  000834  4F                 	db	79	;'O'
   137  000835  20                 	db	32
   138  000836  20                 	db	32
   139  000837  20                 	db	32
   140  000838  20                 	db	32
   141  000839  20                 	db	32
   142  00083A  20                 	db	32
   143  00083B  20                 	db	32
   144  00083C  20                 	db	32
   145  00083D  20                 	db	32
   146  00083E  20                 	db	32
   147  00083F  00                 	db	0
   148  000840                     STR_3:
   149  000840  42                 	db	66	;'B'
   150  000841  20                 	db	32
   151  000842  4D                 	db	77	;'M'
   152  000843  41                 	db	65	;'A'
   153  000844  4E                 	db	78	;'N'
   154  000845  55                 	db	85	;'U'
   155  000846  41                 	db	65	;'A'
   156  000847  4C                 	db	76	;'L'
   157  000848  20                 	db	32
   158  000849  20                 	db	32
   159  00084A  20                 	db	32
   160  00084B  20                 	db	32
   161  00084C  20                 	db	32
   162  00084D  20                 	db	32
   163  00084E  20                 	db	32
   164  00084F  20                 	db	32
   165  000850  00                 	db	0
   166  000851                     STR_4:
   167  000851  43                 	db	67	;'C'
   168  000852  20                 	db	32
   169  000853  54                 	db	84	;'T'
   170  000854  45                 	db	69	;'E'
   171  000855  4D                 	db	77	;'M'
   172  000856  50                 	db	80	;'P'
   173  000857  20                 	db	32
   174  000858  4F                 	db	79	;'O'
   175  000859  4E                 	db	78	;'N'
   176  00085A  20                 	db	32
   177  00085B  20                 	db	32
   178  00085C  20                 	db	32
   179  00085D  20                 	db	32
   180  00085E  20                 	db	32
   181  00085F  20                 	db	32
   182  000860  20                 	db	32
   183  000861  00                 	db	0
   184  000862                     STR_10:
   185  000862  43                 	db	67	;'C'
   186  000863  20                 	db	32
   187  000864  54                 	db	84	;'T'
   188  000865  45                 	db	69	;'E'
   189  000866  4D                 	db	77	;'M'
   190  000867  50                 	db	80	;'P'
   191  000868  20                 	db	32
   192  000869  4F                 	db	79	;'O'
   193  00086A  46                 	db	70	;'F'
   194  00086B  46                 	db	70	;'F'
   195  00086C  20                 	db	32
   196  00086D  20                 	db	32
   197  00086E  20                 	db	32
   198  00086F  20                 	db	32
   199  000870  20                 	db	32
   200  000871  20                 	db	32
   201  000872  00                 	db	0
   202  000873                     STR_7:
   203  000873  43                 	db	67	;'C'
   204  000874  4F                 	db	79	;'O'
   205  000875  4E                 	db	78	;'N'
   206  000876  54                 	db	84	;'T'
   207  000877  52                 	db	82	;'R'
   208  000878  4F                 	db	79	;'O'
   209  000879  4C                 	db	76	;'L'
   210  00087A  20                 	db	32
   211  00087B  4F                 	db	79	;'O'
   212  00087C  4E                 	db	78	;'N'
   213  00087D  20                 	db	32
   214  00087E  20                 	db	32
   215  00087F  20                 	db	32
   216  000880  20                 	db	32
   217  000881  20                 	db	32
   218  000882  20                 	db	32
   219  000883  00                 	db	0
   220  000884                     STR_1:
   221  000884  43                 	db	67	;'C'
   222  000885  4F                 	db	79	;'O'
   223  000886  4E                 	db	78	;'N'
   224  000887  54                 	db	84	;'T'
   225  000888  52                 	db	82	;'R'
   226  000889  4F                 	db	79	;'O'
   227  00088A  4C                 	db	76	;'L'
   228  00088B  20                 	db	32
   229  00088C  4F                 	db	79	;'O'
   230  00088D  46                 	db	70	;'F'
   231  00088E  46                 	db	70	;'F'
   232  00088F  20                 	db	32
   233  000890  20                 	db	32
   234  000891  20                 	db	32
   235  000892  20                 	db	32
   236  000893  20                 	db	32
   237  000894  00                 	db	0
   238  000895                     STR_8:
   239  000895  44                 	db	68	;'D'
   240  000896  20                 	db	32
   241  000897  44                 	db	68	;'D'
   242  000898  45                 	db	69	;'E'
   243  000899  53                 	db	83	;'S'
   244  00089A  41                 	db	65	;'A'
   245  00089B  43                 	db	67	;'C'
   246  00089C  54                 	db	84	;'T'
   247  00089D  49                 	db	73	;'I'
   248  00089E  56                 	db	86	;'V'
   249  00089F  41                 	db	65	;'A'
   250  0008A0  52                 	db	82	;'R'
   251  0008A1  20                 	db	32
   252  0008A2  20                 	db	32
   253  0008A3  20                 	db	32
   254  0008A4  20                 	db	32
   255  0008A5  00                 	db	0
   256  0008A6                     STR_13:
   257  0008A6  43                 	db	67	;'C'
   258  0008A7  4F                 	db	79	;'O'
   259  0008A8  4E                 	db	78	;'N'
   260  0008A9  54                 	db	84	;'T'
   261  0008AA  52                 	db	82	;'R'
   262  0008AB  4F                 	db	79	;'O'
   263  0008AC  4C                 	db	76	;'L'
   264  0008AD  20                 	db	32
   265  0008AE  4D                 	db	77	;'M'
   266  0008AF  41                 	db	65	;'A'
   267  0008B0  4E                 	db	78	;'N'
   268  0008B1  55                 	db	85	;'U'
   269  0008B2  41                 	db	65	;'A'
   270  0008B3  4C                 	db	76	;'L'
   271  0008B4  20                 	db	32
   272  0008B5  20                 	db	32
   273  0008B6  00                 	db	0
   274  0008B7                     STR_16:
   275  0008B7  25                 	db	37
   276  0008B8  33                 	db	51	;'3'
   277  0008B9  64                 	db	100	;'d'
   278  0008BA  25                 	db	37
   279  0008BB  63                 	db	99	;'c'
   280  0008BC  20                 	db	32
   281  0008BD  00                 	db	0
   282  0008BE                     STR_14:
   283  0008BE  25                 	db	37
   284  0008BF  63                 	db	99	;'c'
   285  0008C0  00                 	db	0
   286  0000                     
   287                           ; #config settings
   288  0008C1  00                 	db	0	; dummy byte at the end
   289  0000                     
   290                           	psect	cinit
   291  0024F6                     __pcinit:
   292                           	opt stack 0
   293  0024F6                     start_initialization:
   294                           	opt stack 0
   295  0024F6                     __initialization:
   296                           	opt stack 0
   297                           
   298                           ; Clear objects allocated to BANK0 (4 bytes)
   299  0024F6  0100               	movlb	0
   300  0024F8  6BA6               	clrf	(__pbssBANK0+3)& (0+255),b
   301  0024FA  6BA5               	clrf	(__pbssBANK0+2)& (0+255),b
   302  0024FC  6BA4               	clrf	(__pbssBANK0+1)& (0+255),b
   303  0024FE  6BA3               	clrf	__pbssBANK0& (0+255),b
   304                           
   305                           ; Initialize objects allocated to COMRAM (2 bytes)
   306                           ; load TBLPTR registers with __pidataCOMRAM
   307  002500  0E16               	movlw	low __pidataCOMRAM
   308  002502  6EF6               	movwf	tblptrl,c
   309  002504  0E26               	movlw	high __pidataCOMRAM
   310  002506  6EF7               	movwf	tblptrh,c
   311  002508  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   312  00250A  6EF8               	movwf	tblptru,c
   313  00250C  0009               	tblrd		*+	;fetch initializer
   314  00250E  CFF5 F048          	movff	tablat,__pdataCOMRAM
   315  002512  0009               	tblrd		*+	;fetch initializer
   316  002514  CFF5 F049          	movff	tablat,__pdataCOMRAM+1
   317  002518                     end_of_initialization:
   318                           	opt stack 0
   319  002518                     __end_of__initialization:
   320                           	opt stack 0
   321  002518  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   322  00251A  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   323  00251C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   324  00251E  6EF8               	movwf	tblptru,c
   325  002520  0100               	movlb	0
   326  002522  EF61  F004         	goto	_main	;jump to C main() function
   327                           tblptru	equ	0xFF8
   328                           tblptrh	equ	0xFF7
   329                           tblptrl	equ	0xFF6
   330                           tablat	equ	0xFF5
   331                           
   332                           	psect	dataCOMRAM
   333  000048                     __pdataCOMRAM:
   334                           	opt stack 0
   335  000048                     _tecla:
   336                           	opt stack 0
   337  000048                     	ds	2
   338                           tblptru	equ	0xFF8
   339                           tblptrh	equ	0xFF7
   340                           tblptrl	equ	0xFF6
   341                           tablat	equ	0xFF5
   342                           
   343                           	psect	bssBANK0
   344  0000A3                     __pbssBANK0:
   345                           	opt stack 0
   346  0000A3                     _menu:
   347                           	opt stack 0
   348  0000A3                     	ds	2
   349  0000A5                     _tiempo:
   350                           	opt stack 0
   351  0000A5                     	ds	2
   352                           tblptru	equ	0xFF8
   353                           tblptrh	equ	0xFF7
   354                           tblptrl	equ	0xFF6
   355                           tablat	equ	0xFF5
   356                           
   357                           	psect	cstackBANK0
   358  000060                     __pcstackBANK0:
   359                           	opt stack 0
   360  000060                     ??___fttol:
   361                           
   362                           ; 0 bytes @ 0x0
   363  000060                     	ds	5
   364  000065                     ___fttol@sign1:
   365                           	opt stack 0
   366                           
   367                           ; 1 bytes @ 0x5
   368  000065                     	ds	1
   369  000066                     ___fttol@lval:
   370                           	opt stack 0
   371                           
   372                           ; 4 bytes @ 0x6
   373  000066                     	ds	4
   374  00006A                     ___fttol@exp1:
   375                           	opt stack 0
   376                           
   377                           ; 1 bytes @ 0xA
   378  00006A                     	ds	1
   379  00006B                     duty_cycle_pwm@porc_pwm:
   380                           	opt stack 0
   381                           
   382                           ; 2 bytes @ 0xB
   383  00006B                     	ds	2
   384  00006D                     ??_main:
   385                           
   386                           ; 0 bytes @ 0xD
   387  00006D                     	ds	1
   388  00006E                     main@linea:
   389                           	opt stack 0
   390                           
   391                           ; 16 bytes @ 0xE
   392  00006E                     	ds	16
   393  00007E                     main@linea2:
   394                           	opt stack 0
   395                           
   396                           ; 16 bytes @ 0x1E
   397  00007E                     	ds	16
   398  00008E                     main@pwm:
   399                           	opt stack 0
   400                           
   401                           ; 2 bytes @ 0x2E
   402  00008E                     	ds	2
   403  000090                     main@led:
   404                           	opt stack 0
   405                           
   406                           ; 3 bytes @ 0x30
   407  000090                     	ds	3
   408  000093                     main@decenas:
   409                           	opt stack 0
   410                           
   411                           ; 2 bytes @ 0x33
   412  000093                     	ds	2
   413  000095                     main@k:
   414                           	opt stack 0
   415                           
   416                           ; 2 bytes @ 0x35
   417  000095                     	ds	2
   418  000097                     main@luzext:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0x37
   422  000097                     	ds	2
   423  000099                     main@tecla2:
   424                           	opt stack 0
   425                           
   426                           ; 2 bytes @ 0x39
   427  000099                     	ds	2
   428  00009B                     main@tiempo1:
   429                           	opt stack 0
   430                           
   431                           ; 2 bytes @ 0x3B
   432  00009B                     	ds	2
   433  00009D                     main@j:
   434                           	opt stack 0
   435                           
   436                           ; 2 bytes @ 0x3D
   437  00009D                     	ds	2
   438  00009F                     main@i:
   439                           	opt stack 0
   440                           
   441                           ; 2 bytes @ 0x3F
   442  00009F                     	ds	2
   443  0000A1                     main@unidades:
   444                           	opt stack 0
   445                           
   446                           ; 2 bytes @ 0x41
   447  0000A1                     	ds	2
   448                           tblptru	equ	0xFF8
   449                           tblptrh	equ	0xFF7
   450                           tblptrl	equ	0xFF6
   451                           tablat	equ	0xFF5
   452                           
   453                           	psect	cstackCOMRAM
   454  000001                     __pcstackCOMRAM:
   455                           	opt stack 0
   456  000001                     ?_leer_tecla_d:
   457                           	opt stack 0
   458                           
   459                           ; 2 bytes @ 0x0
   460  000001                     	ds	2
   461  000003                     ??_leer_tecla_d:
   462                           
   463                           ; 0 bytes @ 0x2
   464  000003                     	ds	1
   465  000004                     leer_tecla_d@t:
   466                           	opt stack 0
   467                           
   468                           ; 2 bytes @ 0x3
   469  000004                     	ds	2
   470  000006                     leer_tecla_d@tecla_teclado:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x5
   474  000006                     	ds	2
   475  000008                     ??_isr:
   476                           
   477                           ; 0 bytes @ 0x7
   478  000008                     	ds	14
   479  000016                     ??_isdigit:
   480  000016                     ??_lcd_comando:
   481  000016                     ?_Valor_ADC:
   482                           	opt stack 0
   483  000016                     ?___wmul:
   484                           	opt stack 0
   485  000016                     ?___awdiv:
   486                           	opt stack 0
   487  000016                     ?___awmod:
   488                           	opt stack 0
   489  000016                     ?___lwdiv:
   490                           	opt stack 0
   491  000016                     ?___ftpack:
   492                           	opt stack 0
   493  000016                     ?___ftneg:
   494                           	opt stack 0
   495  000016                     configurar_pwm@b:
   496                           	opt stack 0
   497  000016                     lcd_dato@dato2:
   498                           	opt stack 0
   499  000016                     Config_ADC@TAD:
   500                           	opt stack 0
   501  000016                     ___wmul@multiplier:
   502                           	opt stack 0
   503  000016                     ___awdiv@dividend:
   504                           	opt stack 0
   505  000016                     ___awmod@dividend:
   506                           	opt stack 0
   507  000016                     ___lwdiv@dividend:
   508                           	opt stack 0
   509  000016                     ___ftpack@arg:
   510                           	opt stack 0
   511  000016                     ___ftneg@f1:
   512                           	opt stack 0
   513                           
   514                           ; 3 bytes @ 0x15
   515  000016                     	ds	1
   516  000017                     configurar_pwm@a:
   517                           	opt stack 0
   518  000017                     lcd_comando@dato:
   519                           	opt stack 0
   520  000017                     Config_ADC@CanalesA:
   521                           	opt stack 0
   522  000017                     _isdigit$997:
   523                           	opt stack 0
   524  000017                     lcd_escribir@cadena:
   525                           	opt stack 0
   526                           
   527                           ; 2 bytes @ 0x16
   528  000017                     	ds	1
   529  000018                     ??_lcd_inicializar:
   530  000018                     ??_Config_ADC:
   531  000018                     lcd_posicion@b:
   532                           	opt stack 0
   533  000018                     lcd_cursor@cursor:
   534                           	opt stack 0
   535  000018                     Valor_ADC@canalAdc:
   536                           	opt stack 0
   537  000018                     isdigit@c:
   538                           	opt stack 0
   539  000018                     ___wmul@multiplicand:
   540                           	opt stack 0
   541  000018                     ___awdiv@divisor:
   542                           	opt stack 0
   543  000018                     ___awmod@divisor:
   544                           	opt stack 0
   545  000018                     ___lwdiv@divisor:
   546                           	opt stack 0
   547                           
   548                           ; 2 bytes @ 0x17
   549  000018                     	ds	1
   550  000019                     lcd_posicion@a:
   551                           	opt stack 0
   552  000019                     lcd_cursor@blinking:
   553                           	opt stack 0
   554  000019                     ___ftpack@exp:
   555                           	opt stack 0
   556  000019                     lcd_inicializar@i:
   557                           	opt stack 0
   558  000019                     lcd_escribir@i:
   559                           	opt stack 0
   560  000019                     Valor_ADC@ResultadoAdc:
   561                           	opt stack 0
   562                           
   563                           ; 2 bytes @ 0x18
   564  000019                     	ds	1
   565  00001A                     lcd_posicion@direccion:
   566                           	opt stack 0
   567  00001A                     ___awdiv@counter:
   568                           	opt stack 0
   569  00001A                     ___awmod@counter:
   570                           	opt stack 0
   571  00001A                     ___ftpack@sign:
   572                           	opt stack 0
   573  00001A                     ___wmul@product:
   574                           	opt stack 0
   575  00001A                     ___lwdiv@quotient:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x19
   579  00001A                     	ds	1
   580  00001B                     ??___ftpack:
   581  00001B                     ___awdiv@sign:
   582                           	opt stack 0
   583  00001B                     ___awmod@sign:
   584                           	opt stack 0
   585                           
   586                           ; 1 bytes @ 0x1A
   587  00001B                     	ds	1
   588  00001C                     Config_ADC@Justificacion:
   589                           	opt stack 0
   590  00001C                     ___lwdiv@counter:
   591                           	opt stack 0
   592  00001C                     ___awdiv@quotient:
   593                           	opt stack 0
   594                           
   595                           ; 2 bytes @ 0x1B
   596  00001C                     	ds	1
   597  00001D                     ?___lwmod:
   598                           	opt stack 0
   599  00001D                     ___lwmod@dividend:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x1C
   603  00001D                     	ds	1
   604  00001E                     ?___ftadd:
   605                           	opt stack 0
   606  00001E                     ?___awtoft:
   607                           	opt stack 0
   608  00001E                     ___awtoft@c:
   609                           	opt stack 0
   610  00001E                     ___ftadd@f1:
   611                           	opt stack 0
   612                           
   613                           ; 3 bytes @ 0x1D
   614  00001E                     	ds	1
   615  00001F                     ___lwmod@divisor:
   616                           	opt stack 0
   617                           
   618                           ; 2 bytes @ 0x1E
   619  00001F                     	ds	2
   620  000021                     ___awtoft@sign:
   621                           	opt stack 0
   622  000021                     ___lwmod@counter:
   623                           	opt stack 0
   624  000021                     ___ftadd@f2:
   625                           	opt stack 0
   626                           
   627                           ; 3 bytes @ 0x20
   628  000021                     	ds	1
   629  000022                     ?_sprintf:
   630                           	opt stack 0
   631  000022                     ?___ftdiv:
   632                           	opt stack 0
   633  000022                     sprintf@sp:
   634                           	opt stack 0
   635  000022                     ___ftdiv@f1:
   636                           	opt stack 0
   637                           
   638                           ; 3 bytes @ 0x21
   639  000022                     	ds	2
   640  000024                     ??___ftadd:
   641  000024                     sprintf@f:
   642                           	opt stack 0
   643                           
   644                           ; 2 bytes @ 0x23
   645  000024                     	ds	1
   646  000025                     ___ftdiv@f2:
   647                           	opt stack 0
   648                           
   649                           ; 3 bytes @ 0x24
   650  000025                     	ds	2
   651  000027                     ___ftadd@sign:
   652                           	opt stack 0
   653                           
   654                           ; 1 bytes @ 0x26
   655  000027                     	ds	1
   656  000028                     ??___ftdiv:
   657  000028                     ___ftadd@exp2:
   658                           	opt stack 0
   659                           
   660                           ; 1 bytes @ 0x27
   661  000028                     	ds	1
   662  000029                     ___ftadd@exp1:
   663                           	opt stack 0
   664                           
   665                           ; 1 bytes @ 0x28
   666  000029                     	ds	1
   667  00002A                     ??_sprintf:
   668                           
   669                           ; 0 bytes @ 0x29
   670  00002A                     	ds	1
   671  00002B                     ___ftdiv@cntr:
   672                           	opt stack 0
   673                           
   674                           ; 1 bytes @ 0x2A
   675  00002B                     	ds	1
   676  00002C                     ___ftdiv@f3:
   677                           	opt stack 0
   678                           
   679                           ; 3 bytes @ 0x2B
   680  00002C                     	ds	2
   681  00002E                     sprintf@cp:
   682                           	opt stack 0
   683                           
   684                           ; 2 bytes @ 0x2D
   685  00002E                     	ds	1
   686  00002F                     ___ftdiv@exp:
   687                           	opt stack 0
   688                           
   689                           ; 1 bytes @ 0x2E
   690  00002F                     	ds	1
   691  000030                     sprintf@prec:
   692                           	opt stack 0
   693  000030                     ___ftdiv@sign:
   694                           	opt stack 0
   695                           
   696                           ; 1 bytes @ 0x2F
   697  000030                     	ds	1
   698  000031                     ?___ftmul:
   699                           	opt stack 0
   700  000031                     sprintf@ap:
   701                           	opt stack 0
   702  000031                     ___ftmul@f1:
   703                           	opt stack 0
   704                           
   705                           ; 3 bytes @ 0x30
   706  000031                     	ds	2
   707  000033                     sprintf@flag:
   708                           	opt stack 0
   709                           
   710                           ; 1 bytes @ 0x32
   711  000033                     	ds	1
   712  000034                     sprintf@len:
   713                           	opt stack 0
   714  000034                     ___ftmul@f2:
   715                           	opt stack 0
   716                           
   717                           ; 3 bytes @ 0x33
   718  000034                     	ds	2
   719  000036                     sprintf@val:
   720                           	opt stack 0
   721                           
   722                           ; 2 bytes @ 0x35
   723  000036                     	ds	1
   724  000037                     ??___ftmul:
   725                           
   726                           ; 0 bytes @ 0x36
   727  000037                     	ds	1
   728  000038                     sprintf@width:
   729                           	opt stack 0
   730                           
   731                           ; 2 bytes @ 0x37
   732  000038                     	ds	2
   733  00003A                     sprintf@c:
   734                           	opt stack 0
   735  00003A                     ___ftmul@exp:
   736                           	opt stack 0
   737                           
   738                           ; 1 bytes @ 0x39
   739  00003A                     	ds	1
   740  00003B                     ___ftmul@f3_as_product:
   741                           	opt stack 0
   742                           
   743                           ; 3 bytes @ 0x3A
   744  00003B                     	ds	3
   745  00003E                     ___ftmul@cntr:
   746                           	opt stack 0
   747                           
   748                           ; 1 bytes @ 0x3D
   749  00003E                     	ds	1
   750  00003F                     ___ftmul@sign:
   751                           	opt stack 0
   752                           
   753                           ; 1 bytes @ 0x3E
   754  00003F                     	ds	1
   755  000040                     ?___fttol:
   756                           	opt stack 0
   757  000040                     ___fttol@f1:
   758                           	opt stack 0
   759                           
   760                           ; 3 bytes @ 0x3F
   761  000040                     	ds	4
   762  000044                     ??_duty_cycle_pwm:
   763                           
   764                           ; 0 bytes @ 0x43
   765  000044                     	ds	2
   766  000046                     duty_cycle_pwm@val_pwm:
   767                           	opt stack 0
   768                           
   769                           ; 2 bytes @ 0x45
   770  000046                     	ds	2
   771                           tblptru	equ	0xFF8
   772                           tblptrh	equ	0xFF7
   773                           tblptrl	equ	0xFF6
   774                           tablat	equ	0xFF5
   775                           
   776 ;;
   777 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   778 ;;
   779 ;; *************** function _main *****************
   780 ;; Defined at:
   781 ;;		line 93 in file "proyecto.c"
   782 ;; Parameters:    Size  Location     Type
   783 ;;		None
   784 ;; Auto vars:     Size  Location     Type
   785 ;;  linea2         16   30[BANK0 ] unsigned char [16]
   786 ;;  linea          16   14[BANK0 ] unsigned char [16]
   787 ;;  led             3   48[BANK0 ] float 
   788 ;;  unidades        2   65[BANK0 ] int 
   789 ;;  i               2   63[BANK0 ] int 
   790 ;;  j               2   61[BANK0 ] int 
   791 ;;  tiempo1         2   59[BANK0 ] int 
   792 ;;  tecla2          2   57[BANK0 ] int 
   793 ;;  luzext          2   55[BANK0 ] int 
   794 ;;  k               2   53[BANK0 ] int 
   795 ;;  decenas         2   51[BANK0 ] int 
   796 ;;  pwm             2   46[BANK0 ] int 
   797 ;; Return value:  Size  Location     Type
   798 ;;		None               void
   799 ;; Registers used:
   800 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   806 ;;      Params:         0       0       0       0       0       0       0       0       0
   807 ;;      Locals:         0      53       0       0       0       0       0       0       0
   808 ;;      Temps:          0       1       0       0       0       0       0       0       0
   809 ;;      Totals:         0      54       0       0       0       0       0       0       0
   810 ;;Total ram usage:       54 bytes
   811 ;; Hardware stack levels required when called:    5
   812 ;; This function calls:
   813 ;;		_Config_ADC
   814 ;;		_Valor_ADC
   815 ;;		___awdiv
   816 ;;		___awmod
   817 ;;		___awtoft
   818 ;;		___ftadd
   819 ;;		___ftdiv
   820 ;;		___ftmul
   821 ;;		___ftneg
   822 ;;		___fttol
   823 ;;		___wmul
   824 ;;		_configurar_pwm
   825 ;;		_duty_cycle_pwm
   826 ;;		_lcd_borrar
   827 ;;		_lcd_cursor
   828 ;;		_lcd_escribir
   829 ;;		_lcd_inicializar
   830 ;;		_lcd_posicion
   831 ;;		_sprintf
   832 ;; This function is called by:
   833 ;;		Startup code after reset
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           	psect	text0
   838  0008C2                     __ptext0:
   839                           	opt stack 0
   840  0008C2                     _main:
   841                           	opt stack 26
   842                           
   843                           ;proyecto.c: 94: ADCON1=0X0F;
   844                           
   845                           ;incstack = 0
   846  0008C2  0E0F               	movlw	15
   847  0008C4  6EC1               	movwf	4033,c	;volatile
   848                           
   849                           ;proyecto.c: 95: Config_ADC('R',20,0);
   850  0008C6  0E14               	movlw	20
   851  0008C8  6E16               	movwf	Config_ADC@TAD,c
   852  0008CA  0E00               	movlw	0
   853  0008CC  6E17               	movwf	Config_ADC@CanalesA,c
   854  0008CE  0E52               	movlw	82
   855  0008D0  EC67  F00C         	call	_Config_ADC
   856                           
   857                           ;proyecto.c: 96: TRISC=0;
   858  0008D4  0E00               	movlw	0
   859  0008D6  6E94               	movwf	3988,c	;volatile
   860                           
   861                           ;proyecto.c: 97: TRISB=0XF0;
   862  0008D8  0EF0               	movlw	240
   863  0008DA  6E93               	movwf	3987,c	;volatile
   864                           
   865                           ;proyecto.c: 98: INTCONbits.TMR0IE=1;
   866  0008DC  8AF2               	bsf	intcon,5,c	;volatile
   867                           
   868                           ;proyecto.c: 99: INTCONbits.TMR0IF=0;
   869  0008DE  94F2               	bcf	intcon,2,c	;volatile
   870                           
   871                           ;proyecto.c: 100: TMR0=46005;
   872  0008E0  0EB3               	movlw	179
   873  0008E2  6ED7               	movwf	4055,c	;volatile
   874  0008E4  0EB5               	movlw	181
   875  0008E6  6ED6               	movwf	4054,c	;volatile
   876                           
   877                           ;proyecto.c: 101: T0CONbits.TMR0ON=1;
   878  0008E8  8ED5               	bsf	4053,7,c	;volatile
   879                           
   880                           ;proyecto.c: 102: T0CONbits.T08BIT=0;
   881  0008EA  9CD5               	bcf	4053,6,c	;volatile
   882                           
   883                           ;proyecto.c: 103: T0CONbits.T0CS=0;
   884  0008EC  9AD5               	bcf	4053,5,c	;volatile
   885                           
   886                           ;proyecto.c: 104: T0CONbits.PSA=0;
   887  0008EE  96D5               	bcf	4053,3,c	;volatile
   888                           
   889                           ;proyecto.c: 105: T0CONbits.T0PS2=1;
   890  0008F0  84D5               	bsf	4053,2,c	;volatile
   891                           
   892                           ;proyecto.c: 106: T0CONbits.T0PS1=1;
   893  0008F2  82D5               	bsf	4053,1,c	;volatile
   894                           
   895                           ;proyecto.c: 107: T0CONbits.T0PS0=1;
   896  0008F4  80D5               	bsf	4053,0,c	;volatile
   897                           
   898                           ;proyecto.c: 108: INTCON2bits.RBPU=0;
   899  0008F6  9EF1               	bcf	intcon2,7,c	;volatile
   900                           
   901                           ;proyecto.c: 109: INTCONbits.RBIE=1;
   902  0008F8  86F2               	bsf	intcon,3,c	;volatile
   903                           
   904                           ;proyecto.c: 110: INTCONbits.RBIF=0;
   905  0008FA  90F2               	bcf	intcon,0,c	;volatile
   906                           
   907                           ;proyecto.c: 111: INTCONbits.GIE=1;
   908  0008FC  8EF2               	bsf	intcon,7,c	;volatile
   909                           
   910                           ;proyecto.c: 112: int luzext,pwm,tecla2,i=50,unidades=0,decenas=0,j=0,tiempo1=0,k=0;
   911  0008FE  0E00               	movlw	0
   912  000900  0100               	movlb	0	; () banked
   913  000902  6FA0               	movwf	(main@i+1)& (0+255),b
   914  000904  0E32               	movlw	50
   915  000906  6F9F               	movwf	main@i& (0+255),b
   916                           
   917                           ; BSR set to: 0
   918  000908  0E00               	movlw	0
   919  00090A  0100               	movlb	0	; () banked
   920  00090C  6FA2               	movwf	(main@unidades+1)& (0+255),b
   921  00090E  0E00               	movlw	0
   922  000910  6FA1               	movwf	main@unidades& (0+255),b
   923                           
   924                           ; BSR set to: 0
   925  000912  0E00               	movlw	0
   926  000914  0100               	movlb	0	; () banked
   927  000916  6F94               	movwf	(main@decenas+1)& (0+255),b
   928  000918  0E00               	movlw	0
   929  00091A  6F93               	movwf	main@decenas& (0+255),b
   930                           
   931                           ; BSR set to: 0
   932  00091C  0E00               	movlw	0
   933  00091E  0100               	movlb	0	; () banked
   934  000920  6F9E               	movwf	(main@j+1)& (0+255),b
   935  000922  0E00               	movlw	0
   936  000924  6F9D               	movwf	main@j& (0+255),b
   937                           
   938                           ; BSR set to: 0
   939  000926  0E00               	movlw	0
   940  000928  0100               	movlb	0	; () banked
   941  00092A  6F9C               	movwf	(main@tiempo1+1)& (0+255),b
   942  00092C  0E00               	movlw	0
   943  00092E  6F9B               	movwf	main@tiempo1& (0+255),b
   944                           
   945                           ; BSR set to: 0
   946  000930  0E00               	movlw	0
   947  000932  0100               	movlb	0	; () banked
   948  000934  6F96               	movwf	(main@k+1)& (0+255),b
   949  000936  0E00               	movlw	0
   950  000938  6F95               	movwf	main@k& (0+255),b
   951                           
   952                           ; BSR set to: 0
   953                           ;proyecto.c: 113: float led=0;
   954  00093A  0E00               	movlw	0
   955  00093C  0100               	movlb	0	; () banked
   956  00093E  6F90               	movwf	main@led& (0+255),b
   957  000940  0E00               	movlw	0
   958  000942  0100               	movlb	0	; () banked
   959  000944  6F91               	movwf	(main@led+1)& (0+255),b
   960  000946  0E00               	movlw	0
   961  000948  0100               	movlb	0	; () banked
   962  00094A  6F92               	movwf	(main@led+2)& (0+255),b
   963                           
   964                           ; BSR set to: 0
   965                           ;proyecto.c: 114: char linea[16],linea2[16];
   966                           ;proyecto.c: 115: configurar_pwm( 155, 16);
   967  00094C  0E10               	movlw	16
   968  00094E  6E16               	movwf	configurar_pwm@b,c
   969  000950  0E9B               	movlw	155
   970  000952  EC93  F012         	call	_configurar_pwm
   971                           
   972                           ;proyecto.c: 116: lcd_inicializar();
   973  000956  EC19  F011         	call	_lcd_inicializar	;wreg free
   974  00095A                     l4776:
   975                           
   976                           ;proyecto.c: 118: duty_cycle_pwm(0);
   977  00095A  0E00               	movlw	0
   978  00095C  0100               	movlb	0	; () banked
   979  00095E  6F6C               	movwf	(duty_cycle_pwm@porc_pwm+1)& (0+255),b
   980  000960  0E00               	movlw	0
   981  000962  6F6B               	movwf	duty_cycle_pwm@porc_pwm& (0+255),b
   982  000964  EC91  F011         	call	_duty_cycle_pwm	;wreg free
   983                           
   984                           ;proyecto.c: 119: PORTB=0;
   985  000968  0E00               	movlw	0
   986  00096A  6E81               	movwf	3969,c	;volatile
   987                           
   988                           ;proyecto.c: 120: lcd_posicion(0,0);
   989  00096C  0E00               	movlw	0
   990  00096E  6E18               	movwf	lcd_posicion@b,c
   991  000970  0E00               	movlw	0
   992  000972  ECA8  F012         	call	_lcd_posicion
   993                           
   994                           ;proyecto.c: 121: sprintf(linea,"CONTROL OFF     ");
   995  000976  0E6E               	movlw	low main@linea
   996  000978  6E22               	movwf	sprintf@sp,c
   997  00097A  0E00               	movlw	high main@linea
   998  00097C  6E23               	movwf	sprintf@sp+1,c
   999  00097E  0E84               	movlw	low STR_1
  1000  000980  6E24               	movwf	sprintf@f,c
  1001  000982  0E08               	movlw	high STR_1
  1002  000984  6E25               	movwf	sprintf@f+1,c
  1003  000986  ECFE  F00A         	call	_sprintf	;wreg free
  1004                           
  1005                           ;proyecto.c: 122: lcd_escribir(linea);
  1006  00098A  0E6E               	movlw	low main@linea
  1007  00098C  6E17               	movwf	lcd_escribir@cadena,c
  1008  00098E  0E00               	movlw	high main@linea
  1009  000990  6E18               	movwf	lcd_escribir@cadena+1,c
  1010  000992  EC62  F012         	call	_lcd_escribir	;wreg free
  1011                           
  1012                           ;proyecto.c: 123: if(menu<=1){
  1013  000996  0100               	movlb	0	; () banked
  1014  000998  BFA4               	btfsc	(_menu+1)& (0+255),7,b
  1015  00099A  D008               	goto	l4786
  1016  00099C  0100               	movlb	0	; () banked
  1017  00099E  51A4               	movf	(_menu+1)& (0+255),w,b
  1018  0009A0  E11A               	bnz	l4792
  1019  0009A2  0E02               	movlw	2
  1020  0009A4  0100               	movlb	0	; () banked
  1021  0009A6  5DA3               	subwf	_menu& (0+255),w,b
  1022  0009A8  B0D8               	btfsc	status,0,c
  1023  0009AA  D015               	goto	l4792
  1024  0009AC                     l4786:
  1025                           
  1026                           ; BSR set to: 0
  1027                           ;proyecto.c: 124: lcd_posicion(1,0);
  1028  0009AC  0E00               	movlw	0
  1029  0009AE  6E18               	movwf	lcd_posicion@b,c
  1030  0009B0  0E01               	movlw	1
  1031  0009B2  ECA8  F012         	call	_lcd_posicion
  1032                           
  1033                           ;proyecto.c: 125: sprintf(linea2,"A AUTO          ");
  1034  0009B6  0E7E               	movlw	low main@linea2
  1035  0009B8  6E22               	movwf	sprintf@sp,c
  1036  0009BA  0E00               	movlw	high main@linea2
  1037  0009BC  6E23               	movwf	sprintf@sp+1,c
  1038  0009BE  0E2F               	movlw	low STR_2
  1039  0009C0  6E24               	movwf	sprintf@f,c
  1040  0009C2  0E08               	movlw	high STR_2
  1041  0009C4  6E25               	movwf	sprintf@f+1,c
  1042  0009C6  ECFE  F00A         	call	_sprintf	;wreg free
  1043                           
  1044                           ;proyecto.c: 126: lcd_escribir(linea2);
  1045  0009CA  0E7E               	movlw	low main@linea2
  1046  0009CC  6E17               	movwf	lcd_escribir@cadena,c
  1047  0009CE  0E00               	movlw	high main@linea2
  1048  0009D0  6E18               	movwf	lcd_escribir@cadena+1,c
  1049  0009D2  EC62  F012         	call	_lcd_escribir	;wreg free
  1050  0009D6                     l4792:
  1051                           
  1052                           ;proyecto.c: 127: }
  1053                           ;proyecto.c: 128: if(menu>1&&menu<=3){
  1054  0009D6  0100               	movlb	0	; () banked
  1055  0009D8  BFA4               	btfsc	(_menu+1)& (0+255),7,b
  1056  0009DA  D028               	goto	l4802
  1057  0009DC  0100               	movlb	0	; () banked
  1058  0009DE  51A4               	movf	(_menu+1)& (0+255),w,b
  1059  0009E0  E105               	bnz	u4230
  1060  0009E2  0E02               	movlw	2
  1061  0009E4  0100               	movlb	0	; () banked
  1062  0009E6  5DA3               	subwf	_menu& (0+255),w,b
  1063  0009E8  A0D8               	btfss	status,0,c
  1064  0009EA  D020               	goto	l4802
  1065  0009EC                     u4230:
  1066                           
  1067                           ; BSR set to: 0
  1068  0009EC  0100               	movlb	0	; () banked
  1069  0009EE  BFA4               	btfsc	(_menu+1)& (0+255),7,b
  1070  0009F0  D008               	goto	l4796
  1071  0009F2  0100               	movlb	0	; () banked
  1072  0009F4  51A4               	movf	(_menu+1)& (0+255),w,b
  1073  0009F6  E11A               	bnz	l4802
  1074  0009F8  0E04               	movlw	4
  1075  0009FA  0100               	movlb	0	; () banked
  1076  0009FC  5DA3               	subwf	_menu& (0+255),w,b
  1077  0009FE  B0D8               	btfsc	status,0,c
  1078  000A00  D015               	goto	l4802
  1079  000A02                     l4796:
  1080                           
  1081                           ; BSR set to: 0
  1082                           ;proyecto.c: 129: lcd_posicion(1,0);
  1083  000A02  0E00               	movlw	0
  1084  000A04  6E18               	movwf	lcd_posicion@b,c
  1085  000A06  0E01               	movlw	1
  1086  000A08  ECA8  F012         	call	_lcd_posicion
  1087                           
  1088                           ;proyecto.c: 130: sprintf(linea2,"B MANUAL        ");
  1089  000A0C  0E7E               	movlw	low main@linea2
  1090  000A0E  6E22               	movwf	sprintf@sp,c
  1091  000A10  0E00               	movlw	high main@linea2
  1092  000A12  6E23               	movwf	sprintf@sp+1,c
  1093  000A14  0E40               	movlw	low STR_3
  1094  000A16  6E24               	movwf	sprintf@f,c
  1095  000A18  0E08               	movlw	high STR_3
  1096  000A1A  6E25               	movwf	sprintf@f+1,c
  1097  000A1C  ECFE  F00A         	call	_sprintf	;wreg free
  1098                           
  1099                           ;proyecto.c: 131: lcd_escribir(linea2);
  1100  000A20  0E7E               	movlw	low main@linea2
  1101  000A22  6E17               	movwf	lcd_escribir@cadena,c
  1102  000A24  0E00               	movlw	high main@linea2
  1103  000A26  6E18               	movwf	lcd_escribir@cadena+1,c
  1104  000A28  EC62  F012         	call	_lcd_escribir	;wreg free
  1105  000A2C                     l4802:
  1106                           
  1107                           ;proyecto.c: 132: }
  1108                           ;proyecto.c: 133: if(menu>3&&menu<=5){
  1109  000A2C  0100               	movlb	0	; () banked
  1110  000A2E  BFA4               	btfsc	(_menu+1)& (0+255),7,b
  1111  000A30  D034               	goto	l4816
  1112  000A32  0100               	movlb	0	; () banked
  1113  000A34  51A4               	movf	(_menu+1)& (0+255),w,b
  1114  000A36  E105               	bnz	u4250
  1115  000A38  0E04               	movlw	4
  1116  000A3A  0100               	movlb	0	; () banked
  1117  000A3C  5DA3               	subwf	_menu& (0+255),w,b
  1118  000A3E  A0D8               	btfss	status,0,c
  1119  000A40  D02C               	goto	l4816
  1120  000A42                     u4250:
  1121                           
  1122                           ; BSR set to: 0
  1123  000A42  0100               	movlb	0	; () banked
  1124  000A44  BFA4               	btfsc	(_menu+1)& (0+255),7,b
  1125  000A46  D008               	goto	l4806
  1126  000A48  0100               	movlb	0	; () banked
  1127  000A4A  51A4               	movf	(_menu+1)& (0+255),w,b
  1128  000A4C  E126               	bnz	l4816
  1129  000A4E  0E06               	movlw	6
  1130  000A50  0100               	movlb	0	; () banked
  1131  000A52  5DA3               	subwf	_menu& (0+255),w,b
  1132  000A54  B0D8               	btfsc	status,0,c
  1133  000A56  D021               	goto	l4816
  1134  000A58                     l4806:
  1135                           
  1136                           ; BSR set to: 0
  1137                           ;proyecto.c: 134: lcd_posicion(1,0);
  1138  000A58  0E00               	movlw	0
  1139  000A5A  6E18               	movwf	lcd_posicion@b,c
  1140  000A5C  0E01               	movlw	1
  1141  000A5E  ECA8  F012         	call	_lcd_posicion
  1142                           
  1143                           ;proyecto.c: 135: sprintf(linea2,"C TEMP ON       ");
  1144  000A62  0E7E               	movlw	low main@linea2
  1145  000A64  6E22               	movwf	sprintf@sp,c
  1146  000A66  0E00               	movlw	high main@linea2
  1147  000A68  6E23               	movwf	sprintf@sp+1,c
  1148  000A6A  0E51               	movlw	low STR_4
  1149  000A6C  6E24               	movwf	sprintf@f,c
  1150  000A6E  0E08               	movlw	high STR_4
  1151  000A70  6E25               	movwf	sprintf@f+1,c
  1152  000A72  ECFE  F00A         	call	_sprintf	;wreg free
  1153                           
  1154                           ;proyecto.c: 136: lcd_escribir(linea2);
  1155  000A76  0E7E               	movlw	low main@linea2
  1156  000A78  6E17               	movwf	lcd_escribir@cadena,c
  1157  000A7A  0E00               	movlw	high main@linea2
  1158  000A7C  6E18               	movwf	lcd_escribir@cadena+1,c
  1159  000A7E  EC62  F012         	call	_lcd_escribir	;wreg free
  1160                           
  1161                           ;proyecto.c: 137: if(menu==5)
  1162  000A82  0E05               	movlw	5
  1163  000A84  0100               	movlb	0	; () banked
  1164  000A86  19A3               	xorwf	_menu& (0+255),w,b
  1165  000A88  0100               	movlb	0	; () banked
  1166  000A8A  11A4               	iorwf	(_menu+1)& (0+255),w,b
  1167  000A8C  A4D8               	btfss	status,2,c
  1168  000A8E  D005               	goto	l4816
  1169                           
  1170                           ; BSR set to: 0
  1171                           ;proyecto.c: 138: menu=0;
  1172  000A90  0E00               	movlw	0
  1173  000A92  0100               	movlb	0	; () banked
  1174  000A94  6FA4               	movwf	(_menu+1)& (0+255),b
  1175  000A96  0E00               	movlw	0
  1176  000A98  6FA3               	movwf	_menu& (0+255),b
  1177  000A9A                     l4816:
  1178                           
  1179                           ; BSR set to: 0
  1180                           ;proyecto.c: 139: }
  1181                           ;proyecto.c: 140: if(tecla==12){
  1182  000A9A  0E0C               	movlw	12
  1183  000A9C  1848               	xorwf	_tecla,w,c
  1184  000A9E  1049               	iorwf	_tecla+1,w,c
  1185  000AA0  A4D8               	btfss	status,2,c
  1186  000AA2  D10B               	goto	l4894
  1187                           
  1188                           ; BSR set to: 0
  1189                           ;proyecto.c: 141: T0CONbits.TMR0ON=0;
  1190  000AA4  9ED5               	bcf	4053,7,c	;volatile
  1191                           
  1192                           ; BSR set to: 0
  1193                           ;proyecto.c: 142: tecla=tecla2=255;
  1194  000AA6  0E00               	movlw	0
  1195  000AA8  0100               	movlb	0	; () banked
  1196  000AAA  6F9A               	movwf	(main@tecla2+1)& (0+255),b
  1197  000AAC  6999               	setf	main@tecla2& (0+255),b
  1198  000AAE  C099  F048         	movff	main@tecla2,_tecla
  1199  000AB2  C09A  F049         	movff	main@tecla2+1,_tecla+1
  1200                           
  1201                           ;proyecto.c: 143: decenas=unidades=0;
  1202  000AB6  0E00               	movlw	0
  1203  000AB8  0100               	movlb	0	; () banked
  1204  000ABA  6FA2               	movwf	(main@unidades+1)& (0+255),b
  1205  000ABC  0E00               	movlw	0
  1206  000ABE  6FA1               	movwf	main@unidades& (0+255),b
  1207  000AC0  C0A1  F093         	movff	main@unidades,main@decenas
  1208  000AC4  C0A2  F094         	movff	main@unidades+1,main@decenas+1
  1209  000AC8                     l4822:
  1210                           
  1211                           ; BSR set to: 0
  1212                           ;proyecto.c: 145: lcd_posicion(1,0);
  1213  000AC8  0E00               	movlw	0
  1214  000ACA  6E18               	movwf	lcd_posicion@b,c
  1215  000ACC  0E01               	movlw	1
  1216  000ACE  ECA8  F012         	call	_lcd_posicion
  1217                           
  1218                           ;proyecto.c: 146: sprintf(linea2,"TEMP ON:%2ds     ",tiempo1);
  1219  000AD2  0E7E               	movlw	low main@linea2
  1220  000AD4  6E22               	movwf	sprintf@sp,c
  1221  000AD6  0E00               	movlw	high main@linea2
  1222  000AD8  6E23               	movwf	sprintf@sp+1,c
  1223  000ADA  0E0B               	movlw	low STR_5
  1224  000ADC  6E24               	movwf	sprintf@f,c
  1225  000ADE  0E08               	movlw	high STR_5
  1226  000AE0  6E25               	movwf	sprintf@f+1,c
  1227  000AE2  C09B  F026         	movff	main@tiempo1,?_sprintf+4
  1228  000AE6  C09C  F027         	movff	main@tiempo1+1,?_sprintf+5
  1229  000AEA  ECFE  F00A         	call	_sprintf	;wreg free
  1230                           
  1231                           ;proyecto.c: 147: lcd_escribir(linea2);
  1232  000AEE  0E7E               	movlw	low main@linea2
  1233  000AF0  6E17               	movwf	lcd_escribir@cadena,c
  1234  000AF2  0E00               	movlw	high main@linea2
  1235  000AF4  6E18               	movwf	lcd_escribir@cadena+1,c
  1236  000AF6  EC62  F012         	call	_lcd_escribir	;wreg free
  1237                           
  1238                           ;proyecto.c: 148: lcd_posicion(1,9);
  1239  000AFA  0E09               	movlw	9
  1240  000AFC  6E18               	movwf	lcd_posicion@b,c
  1241  000AFE  0E01               	movlw	1
  1242  000B00  ECA8  F012         	call	_lcd_posicion
  1243                           
  1244                           ;proyecto.c: 149: lcd_cursor(0X0D,0X00);
  1245  000B04  0E00               	movlw	0
  1246  000B06  6E18               	movwf	lcd_cursor@cursor,c
  1247  000B08  0E0D               	movlw	13
  1248  000B0A  EC00  F013         	call	_lcd_cursor
  1249                           
  1250                           ;proyecto.c: 150: _delay((unsigned long)((30)*(20000000/4000.0)));
  1251  000B0E  0EC3               	movlw	195
  1252  000B10  0100               	movlb	0	; () banked
  1253  000B12  6F6D               	movwf	??_main& (0+255),b
  1254  000B14  0ECD               	movlw	205
  1255  000B16                     u4867:
  1256  000B16  2EE8               	decfsz	wreg,f,c
  1257  000B18  D7FE               	goto	u4867
  1258  000B1A  2F6D               	decfsz	??_main& (0+255),f,b
  1259  000B1C  D7FC               	goto	u4867
  1260  000B1E  F000               	nop	
  1261                           
  1262                           ;proyecto.c: 151: lcd_cursor(0X0C,0X00);
  1263  000B20  0E00               	movlw	0
  1264  000B22  6E18               	movwf	lcd_cursor@cursor,c
  1265  000B24  0E0C               	movlw	12
  1266  000B26  EC00  F013         	call	_lcd_cursor
  1267                           
  1268                           ;proyecto.c: 152: if(j==0&&tecla>=0&&tecla<=9){
  1269  000B2A  0100               	movlb	0	; () banked
  1270  000B2C  519D               	movf	main@j& (0+255),w,b
  1271  000B2E  0100               	movlb	0	; () banked
  1272  000B30  119E               	iorwf	(main@j+1)& (0+255),w,b
  1273  000B32  B4D8               	btfsc	status,2,c
  1274                           
  1275                           ; BSR set to: 0
  1276  000B34  BE49               	btfsc	_tecla+1,7,c
  1277  000B36  D016               	goto	l4848
  1278                           
  1279                           ; BSR set to: 0
  1280  000B38  BE49               	btfsc	_tecla+1,7,c
  1281  000B3A  D006               	goto	l4842
  1282  000B3C  5049               	movf	_tecla+1,w,c
  1283  000B3E  E112               	bnz	l4848
  1284  000B40  0E0A               	movlw	10
  1285  000B42  5C48               	subwf	_tecla,w,c
  1286  000B44  B0D8               	btfsc	status,0,c
  1287  000B46  D00E               	goto	l4848
  1288  000B48                     l4842:
  1289                           
  1290                           ; BSR set to: 0
  1291                           ;proyecto.c: 153: unidades=tecla;
  1292  000B48  C048  F0A1         	movff	_tecla,main@unidades
  1293  000B4C  C049  F0A2         	movff	_tecla+1,main@unidades+1
  1294                           
  1295                           ;proyecto.c: 154: tiempo1=unidades;
  1296  000B50  C0A1  F09B         	movff	main@unidades,main@tiempo1
  1297  000B54  C0A2  F09C         	movff	main@unidades+1,main@tiempo1+1
  1298                           
  1299                           ; BSR set to: 0
  1300                           ;proyecto.c: 155: tecla=255;
  1301  000B58  0E00               	movlw	0
  1302  000B5A  6E49               	movwf	_tecla+1,c
  1303  000B5C  6848               	setf	_tecla,c
  1304                           
  1305                           ; BSR set to: 0
  1306                           ;proyecto.c: 156: j++;
  1307  000B5E  0100               	movlb	0	; () banked
  1308  000B60  4B9D               	infsnz	main@j& (0+255),f,b
  1309  000B62  2B9E               	incf	(main@j+1)& (0+255),f,b
  1310  000B64                     l4848:
  1311                           
  1312                           ; BSR set to: 0
  1313                           ;proyecto.c: 157: }
  1314                           ;proyecto.c: 158: if(j==1&&unidades<6&&tecla>=0&&tecla<=9){
  1315  000B64  0100               	movlb	0	; () banked
  1316  000B66  059D               	decf	main@j& (0+255),w,b
  1317  000B68  0100               	movlb	0	; () banked
  1318  000B6A  119E               	iorwf	(main@j+1)& (0+255),w,b
  1319  000B6C  A4D8               	btfss	status,2,c
  1320  000B6E  D039               	goto	l4864
  1321                           
  1322                           ; BSR set to: 0
  1323  000B70  0100               	movlb	0	; () banked
  1324  000B72  BFA2               	btfsc	(main@unidades+1)& (0+255),7,b
  1325  000B74  D008               	goto	l4852
  1326  000B76  0100               	movlb	0	; () banked
  1327  000B78  51A2               	movf	(main@unidades+1)& (0+255),w,b
  1328  000B7A  E133               	bnz	l4864
  1329  000B7C  0E06               	movlw	6
  1330  000B7E  0100               	movlb	0	; () banked
  1331  000B80  5DA1               	subwf	main@unidades& (0+255),w,b
  1332  000B82  B0D8               	btfsc	status,0,c
  1333  000B84  D02E               	goto	l4864
  1334  000B86                     l4852:
  1335                           
  1336                           ; BSR set to: 0
  1337  000B86  BE49               	btfsc	_tecla+1,7,c
  1338  000B88  D02C               	goto	l4864
  1339                           
  1340                           ; BSR set to: 0
  1341  000B8A  BE49               	btfsc	_tecla+1,7,c
  1342  000B8C  D006               	goto	l4856
  1343  000B8E  5049               	movf	_tecla+1,w,c
  1344  000B90  E128               	bnz	l4864
  1345  000B92  0E0A               	movlw	10
  1346  000B94  5C48               	subwf	_tecla,w,c
  1347  000B96  B0D8               	btfsc	status,0,c
  1348  000B98  D024               	goto	l4864
  1349  000B9A                     l4856:
  1350                           
  1351                           ; BSR set to: 0
  1352                           ;proyecto.c: 159: decenas=unidades;
  1353  000B9A  C0A1  F093         	movff	main@unidades,main@decenas
  1354  000B9E  C0A2  F094         	movff	main@unidades+1,main@decenas+1
  1355                           
  1356                           ;proyecto.c: 160: unidades=tecla;
  1357  000BA2  C048  F0A1         	movff	_tecla,main@unidades
  1358  000BA6  C049  F0A2         	movff	_tecla+1,main@unidades+1
  1359                           
  1360                           ; BSR set to: 0
  1361                           ;proyecto.c: 161: tiempo1=decenas*10+unidades;
  1362  000BAA  C093  F016         	movff	main@decenas,___wmul@multiplier
  1363  000BAE  C094  F017         	movff	main@decenas+1,___wmul@multiplier+1
  1364  000BB2  0E00               	movlw	0
  1365  000BB4  6E19               	movwf	___wmul@multiplicand+1,c
  1366  000BB6  0E0A               	movlw	10
  1367  000BB8  6E18               	movwf	___wmul@multiplicand,c
  1368  000BBA  ECBC  F012         	call	___wmul	;wreg free
  1369  000BBE  0100               	movlb	0	; () banked
  1370  000BC0  51A1               	movf	main@unidades& (0+255),w,b
  1371  000BC2  2416               	addwf	?___wmul,w,c
  1372  000BC4  0100               	movlb	0	; () banked
  1373  000BC6  6F9B               	movwf	main@tiempo1& (0+255),b
  1374  000BC8  0100               	movlb	0	; () banked
  1375  000BCA  51A2               	movf	(main@unidades+1)& (0+255),w,b
  1376  000BCC  2017               	addwfc	?___wmul+1,w,c
  1377  000BCE  0100               	movlb	0	; () banked
  1378  000BD0  6F9C               	movwf	(main@tiempo1+1)& (0+255),b
  1379                           
  1380                           ; BSR set to: 0
  1381                           ;proyecto.c: 162: tecla=255;
  1382  000BD2  0E00               	movlw	0
  1383  000BD4  6E49               	movwf	_tecla+1,c
  1384  000BD6  6848               	setf	_tecla,c
  1385                           
  1386                           ; BSR set to: 0
  1387                           ;proyecto.c: 163: j=0;
  1388  000BD8  0E00               	movlw	0
  1389  000BDA  0100               	movlb	0	; () banked
  1390  000BDC  6F9E               	movwf	(main@j+1)& (0+255),b
  1391  000BDE  0E00               	movlw	0
  1392  000BE0  6F9D               	movwf	main@j& (0+255),b
  1393  000BE2                     l4864:
  1394                           
  1395                           ; BSR set to: 0
  1396                           ;proyecto.c: 164: }
  1397                           ;proyecto.c: 165: if(j==1&&unidades==6&&tecla==0){
  1398  000BE2  0100               	movlb	0	; () banked
  1399  000BE4  059D               	decf	main@j& (0+255),w,b
  1400  000BE6  0100               	movlb	0	; () banked
  1401  000BE8  119E               	iorwf	(main@j+1)& (0+255),w,b
  1402  000BEA  A4D8               	btfss	status,2,c
  1403  000BEC  D02F               	goto	l4878
  1404                           
  1405                           ; BSR set to: 0
  1406  000BEE  0E06               	movlw	6
  1407  000BF0  0100               	movlb	0	; () banked
  1408  000BF2  19A1               	xorwf	main@unidades& (0+255),w,b
  1409  000BF4  0100               	movlb	0	; () banked
  1410  000BF6  11A2               	iorwf	(main@unidades+1)& (0+255),w,b
  1411  000BF8  A4D8               	btfss	status,2,c
  1412  000BFA  D028               	goto	l4878
  1413                           
  1414                           ; BSR set to: 0
  1415  000BFC  5048               	movf	_tecla,w,c
  1416  000BFE  1049               	iorwf	_tecla+1,w,c
  1417  000C00  A4D8               	btfss	status,2,c
  1418  000C02  D024               	goto	l4878
  1419                           
  1420                           ; BSR set to: 0
  1421                           ;proyecto.c: 166: decenas=unidades;
  1422  000C04  C0A1  F093         	movff	main@unidades,main@decenas
  1423  000C08  C0A2  F094         	movff	main@unidades+1,main@decenas+1
  1424                           
  1425                           ;proyecto.c: 167: unidades=tecla;
  1426  000C0C  C048  F0A1         	movff	_tecla,main@unidades
  1427  000C10  C049  F0A2         	movff	_tecla+1,main@unidades+1
  1428                           
  1429                           ; BSR set to: 0
  1430                           ;proyecto.c: 168: tiempo1=decenas*10+unidades;
  1431  000C14  C093  F016         	movff	main@decenas,___wmul@multiplier
  1432  000C18  C094  F017         	movff	main@decenas+1,___wmul@multiplier+1
  1433  000C1C  0E00               	movlw	0
  1434  000C1E  6E19               	movwf	___wmul@multiplicand+1,c
  1435  000C20  0E0A               	movlw	10
  1436  000C22  6E18               	movwf	___wmul@multiplicand,c
  1437  000C24  ECBC  F012         	call	___wmul	;wreg free
  1438  000C28  0100               	movlb	0	; () banked
  1439  000C2A  51A1               	movf	main@unidades& (0+255),w,b
  1440  000C2C  2416               	addwf	?___wmul,w,c
  1441  000C2E  0100               	movlb	0	; () banked
  1442  000C30  6F9B               	movwf	main@tiempo1& (0+255),b
  1443  000C32  0100               	movlb	0	; () banked
  1444  000C34  51A2               	movf	(main@unidades+1)& (0+255),w,b
  1445  000C36  2017               	addwfc	?___wmul+1,w,c
  1446  000C38  0100               	movlb	0	; () banked
  1447  000C3A  6F9C               	movwf	(main@tiempo1+1)& (0+255),b
  1448                           
  1449                           ; BSR set to: 0
  1450                           ;proyecto.c: 169: tecla=255;
  1451  000C3C  0E00               	movlw	0
  1452  000C3E  6E49               	movwf	_tecla+1,c
  1453  000C40  6848               	setf	_tecla,c
  1454                           
  1455                           ; BSR set to: 0
  1456                           ;proyecto.c: 170: j=0;
  1457  000C42  0E00               	movlw	0
  1458  000C44  0100               	movlb	0	; () banked
  1459  000C46  6F9E               	movwf	(main@j+1)& (0+255),b
  1460  000C48  0E00               	movlw	0
  1461  000C4A  6F9D               	movwf	main@j& (0+255),b
  1462  000C4C                     l4878:
  1463                           
  1464                           ; BSR set to: 0
  1465                           ;proyecto.c: 171: }
  1466                           ;proyecto.c: 172: if(tecla==12){
  1467  000C4C  0E0C               	movlw	12
  1468  000C4E  1848               	xorwf	_tecla,w,c
  1469  000C50  1049               	iorwf	_tecla+1,w,c
  1470  000C52  A4D8               	btfss	status,2,c
  1471  000C54  D013               	goto	l4886
  1472                           
  1473                           ; BSR set to: 0
  1474                           ;proyecto.c: 173: tiempo=tiempo1;
  1475  000C56  C09B  F0A5         	movff	main@tiempo1,_tiempo
  1476  000C5A  C09C  F0A6         	movff	main@tiempo1+1,_tiempo+1
  1477                           
  1478                           ; BSR set to: 0
  1479                           ;proyecto.c: 174: tiempo1=0;
  1480  000C5E  0E00               	movlw	0
  1481  000C60  0100               	movlb	0	; () banked
  1482  000C62  6F9C               	movwf	(main@tiempo1+1)& (0+255),b
  1483  000C64  0E00               	movlw	0
  1484  000C66  6F9B               	movwf	main@tiempo1& (0+255),b
  1485                           
  1486                           ; BSR set to: 0
  1487                           ;proyecto.c: 175: T0CONbits.TMR0ON=1;
  1488  000C68  8ED5               	bsf	4053,7,c	;volatile
  1489                           
  1490                           ;proyecto.c: 176: tecla2=13;
  1491  000C6A  0E00               	movlw	0
  1492  000C6C  0100               	movlb	0	; () banked
  1493  000C6E  6F9A               	movwf	(main@tecla2+1)& (0+255),b
  1494  000C70  0E0D               	movlw	13
  1495  000C72  6F99               	movwf	main@tecla2& (0+255),b
  1496                           
  1497                           ;proyecto.c: 177: tecla=16;
  1498  000C74  0E00               	movlw	0
  1499  000C76  6E49               	movwf	_tecla+1,c
  1500  000C78  0E10               	movlw	16
  1501  000C7A  6E48               	movwf	_tecla,c
  1502  000C7C                     l4886:
  1503                           
  1504                           ; BSR set to: 0
  1505                           ;proyecto.c: 178: }
  1506                           ;proyecto.c: 179: if(tecla==15){
  1507  000C7C  0E0F               	movlw	15
  1508  000C7E  1848               	xorwf	_tecla,w,c
  1509  000C80  1049               	iorwf	_tecla+1,w,c
  1510  000C82  A4D8               	btfss	status,2,c
  1511  000C84  D013               	goto	l4892
  1512                           
  1513                           ; BSR set to: 0
  1514                           ;proyecto.c: 180: tiempo1=0;
  1515  000C86  0E00               	movlw	0
  1516  000C88  0100               	movlb	0	; () banked
  1517  000C8A  6F9C               	movwf	(main@tiempo1+1)& (0+255),b
  1518  000C8C  0E00               	movlw	0
  1519  000C8E  6F9B               	movwf	main@tiempo1& (0+255),b
  1520                           
  1521                           ; BSR set to: 0
  1522                           ;proyecto.c: 181: T0CONbits.TMR0ON=1;
  1523  000C90  8ED5               	bsf	4053,7,c	;volatile
  1524                           
  1525                           ;proyecto.c: 182: tecla2=13;
  1526  000C92  0E00               	movlw	0
  1527  000C94  0100               	movlb	0	; () banked
  1528  000C96  6F9A               	movwf	(main@tecla2+1)& (0+255),b
  1529  000C98  0E0D               	movlw	13
  1530  000C9A  6F99               	movwf	main@tecla2& (0+255),b
  1531                           
  1532                           ;proyecto.c: 183: tecla=255;
  1533  000C9C  0E00               	movlw	0
  1534  000C9E  6E49               	movwf	_tecla+1,c
  1535  000CA0  6848               	setf	_tecla,c
  1536                           
  1537                           ;proyecto.c: 184: menu=0;
  1538  000CA2  0E00               	movlw	0
  1539  000CA4  0100               	movlb	0	; () banked
  1540  000CA6  6FA4               	movwf	(_menu+1)& (0+255),b
  1541  000CA8  0E00               	movlw	0
  1542  000CAA  6FA3               	movwf	_menu& (0+255),b
  1543  000CAC                     l4892:
  1544                           
  1545                           ; BSR set to: 0
  1546                           ;proyecto.c: 185: }
  1547                           ;proyecto.c: 186: }while(tecla2!=13);
  1548  000CAC  0E0D               	movlw	13
  1549  000CAE  0100               	movlb	0	; () banked
  1550  000CB0  1999               	xorwf	main@tecla2& (0+255),w,b
  1551  000CB2  0100               	movlb	0	; () banked
  1552  000CB4  119A               	iorwf	(main@tecla2+1)& (0+255),w,b
  1553  000CB6  A4D8               	btfss	status,2,c
  1554  000CB8  D707               	goto	l4822
  1555  000CBA                     l4894:
  1556                           
  1557                           ; BSR set to: 0
  1558                           ;proyecto.c: 187: }
  1559                           ;proyecto.c: 188: if(tecla==16){
  1560  000CBA  0E10               	movlw	16
  1561  000CBC  1848               	xorwf	_tecla,w,c
  1562  000CBE  1049               	iorwf	_tecla+1,w,c
  1563  000CC0  A4D8               	btfss	status,2,c
  1564  000CC2  D028               	goto	l4906
  1565  000CC4                     l4896:
  1566                           
  1567                           ; BSR set to: 0
  1568                           ;proyecto.c: 190: lcd_posicion(1,0);
  1569  000CC4  0E00               	movlw	0
  1570  000CC6  6E18               	movwf	lcd_posicion@b,c
  1571  000CC8  0E01               	movlw	1
  1572  000CCA  ECA8  F012         	call	_lcd_posicion
  1573                           
  1574                           ;proyecto.c: 191: sprintf(linea2,"TEMP ON:%2ds     ",tiempo);
  1575  000CCE  0E7E               	movlw	low main@linea2
  1576  000CD0  6E22               	movwf	sprintf@sp,c
  1577  000CD2  0E00               	movlw	high main@linea2
  1578  000CD4  6E23               	movwf	sprintf@sp+1,c
  1579  000CD6  0E0B               	movlw	low STR_5
  1580  000CD8  6E24               	movwf	sprintf@f,c
  1581  000CDA  0E08               	movlw	high STR_5
  1582  000CDC  6E25               	movwf	sprintf@f+1,c
  1583  000CDE  C0A5  F026         	movff	_tiempo,?_sprintf+4
  1584  000CE2  C0A6  F027         	movff	_tiempo+1,?_sprintf+5
  1585  000CE6  ECFE  F00A         	call	_sprintf	;wreg free
  1586                           
  1587                           ;proyecto.c: 192: lcd_escribir(linea2);
  1588  000CEA  0E7E               	movlw	low main@linea2
  1589  000CEC  6E17               	movwf	lcd_escribir@cadena,c
  1590  000CEE  0E00               	movlw	high main@linea2
  1591  000CF0  6E18               	movwf	lcd_escribir@cadena+1,c
  1592  000CF2  EC62  F012         	call	_lcd_escribir	;wreg free
  1593                           
  1594                           ;proyecto.c: 193: }while(tiempo!=0);
  1595  000CF6  0100               	movlb	0	; () banked
  1596  000CF8  51A5               	movf	_tiempo& (0+255),w,b
  1597  000CFA  0100               	movlb	0	; () banked
  1598  000CFC  11A6               	iorwf	(_tiempo+1)& (0+255),w,b
  1599  000CFE  A4D8               	btfss	status,2,c
  1600  000D00  D7E1               	goto	l4896
  1601                           
  1602                           ; BSR set to: 0
  1603                           ;proyecto.c: 194: tecla=10;
  1604                           
  1605                           ; BSR set to: 0
  1606  000D02  0E00               	movlw	0
  1607  000D04  6E49               	movwf	_tecla+1,c
  1608  000D06  0E0A               	movlw	10
  1609  000D08  6E48               	movwf	_tecla,c
  1610                           
  1611                           ;proyecto.c: 195: menu=0;
  1612  000D0A  0E00               	movlw	0
  1613  000D0C  0100               	movlb	0	; () banked
  1614  000D0E  6FA4               	movwf	(_menu+1)& (0+255),b
  1615  000D10  0E00               	movlw	0
  1616  000D12  6FA3               	movwf	_menu& (0+255),b
  1617  000D14                     l4906:
  1618                           
  1619                           ; BSR set to: 0
  1620                           ;proyecto.c: 196: }
  1621                           ;proyecto.c: 197: if(tecla==10){
  1622  000D14  0E0A               	movlw	10
  1623  000D16  1848               	xorwf	_tecla,w,c
  1624  000D18  1049               	iorwf	_tecla+1,w,c
  1625  000D1A  A4D8               	btfss	status,2,c
  1626  000D1C  D336               	goto	l5070
  1627                           
  1628                           ; BSR set to: 0
  1629                           ;proyecto.c: 198: tecla=tecla2=255;
  1630  000D1E  0E00               	movlw	0
  1631  000D20  0100               	movlb	0	; () banked
  1632  000D22  6F9A               	movwf	(main@tecla2+1)& (0+255),b
  1633  000D24  6999               	setf	main@tecla2& (0+255),b
  1634  000D26  C099  F048         	movff	main@tecla2,_tecla
  1635  000D2A  C09A  F049         	movff	main@tecla2+1,_tecla+1
  1636                           
  1637                           ; BSR set to: 0
  1638                           ;proyecto.c: 199: lcd_borrar();
  1639  000D2E  EC07  F013         	call	_lcd_borrar	;wreg free
  1640  000D32                     l4912:
  1641                           
  1642                           ;proyecto.c: 201: luzext=Valor_ADC(0);
  1643  000D32  0E00               	movlw	0
  1644  000D34  ECE9  F011         	call	_Valor_ADC
  1645  000D38  C016  F097         	movff	?_Valor_ADC,main@luzext
  1646  000D3C  C017  F098         	movff	?_Valor_ADC+1,main@luzext+1
  1647                           
  1648                           ;proyecto.c: 202: if(luzext>=3998)
  1649  000D40  0100               	movlb	0	; () banked
  1650  000D42  BF98               	btfsc	(main@luzext+1)& (0+255),7,b
  1651  000D44  D012               	goto	l4918
  1652  000D46  0E9E               	movlw	158
  1653  000D48  0100               	movlb	0	; () banked
  1654  000D4A  5D97               	subwf	main@luzext& (0+255),w,b
  1655  000D4C  0E0F               	movlw	15
  1656  000D4E  0100               	movlb	0	; () banked
  1657  000D50  5998               	subwfb	(main@luzext+1)& (0+255),w,b
  1658  000D52  A0D8               	btfss	status,0,c
  1659  000D54  D00A               	goto	l4918
  1660                           
  1661                           ; BSR set to: 0
  1662                           ;proyecto.c: 203: led=100;
  1663  000D56  0E00               	movlw	0
  1664  000D58  0100               	movlb	0	; () banked
  1665  000D5A  6F90               	movwf	main@led& (0+255),b
  1666  000D5C  0EC8               	movlw	200
  1667  000D5E  0100               	movlb	0	; () banked
  1668  000D60  6F91               	movwf	(main@led+1)& (0+255),b
  1669  000D62  0E42               	movlw	66
  1670  000D64  0100               	movlb	0	; () banked
  1671  000D66  6F92               	movwf	(main@led+2)& (0+255),b
  1672  000D68  D028               	goto	l190
  1673  000D6A                     l4918:
  1674                           
  1675                           ; BSR set to: 0
  1676                           ;proyecto.c: 204: else
  1677                           ;proyecto.c: 205: led=(luzext/4095.00)*100;
  1678  000D6A  0EF0               	movlw	240
  1679  000D6C  6E25               	movwf	___ftdiv@f2,c
  1680  000D6E  0E7F               	movlw	127
  1681  000D70  6E26               	movwf	___ftdiv@f2+1,c
  1682  000D72  0E45               	movlw	69
  1683  000D74  6E27               	movwf	___ftdiv@f2+2,c
  1684  000D76  C097  F01E         	movff	main@luzext,___awtoft@c
  1685  000D7A  C098  F01F         	movff	main@luzext+1,___awtoft@c+1
  1686  000D7E  EC2C  F012         	call	___awtoft	;wreg free
  1687  000D82  C01E  F022         	movff	?___awtoft,___ftdiv@f1
  1688  000D86  C01F  F023         	movff	?___awtoft+1,___ftdiv@f1+1
  1689  000D8A  C020  F024         	movff	?___awtoft+2,___ftdiv@f1+2
  1690  000D8E  ECB6  F00F         	call	___ftdiv	;wreg free
  1691  000D92  C022  F031         	movff	?___ftdiv,___ftmul@f1
  1692  000D96  C023  F032         	movff	?___ftdiv+1,___ftmul@f1+1
  1693  000D9A  C024  F033         	movff	?___ftdiv+2,___ftmul@f1+2
  1694  000D9E  0E00               	movlw	0
  1695  000DA0  6E34               	movwf	___ftmul@f2,c
  1696  000DA2  0EC8               	movlw	200
  1697  000DA4  6E35               	movwf	___ftmul@f2+1,c
  1698  000DA6  0E42               	movlw	66
  1699  000DA8  6E36               	movwf	___ftmul@f2+2,c
  1700  000DAA  EC3C  F00F         	call	___ftmul	;wreg free
  1701  000DAE  C031  F090         	movff	?___ftmul,main@led
  1702  000DB2  C032  F091         	movff	?___ftmul+1,main@led+1
  1703  000DB6  C033  F092         	movff	?___ftmul+2,main@led+2
  1704  000DBA                     l190:
  1705                           
  1706                           ;proyecto.c: 206: pwm=100-led;
  1707  000DBA  0E00               	movlw	0
  1708  000DBC  6E21               	movwf	___ftadd@f2,c
  1709  000DBE  0EC8               	movlw	200
  1710  000DC0  6E22               	movwf	___ftadd@f2+1,c
  1711  000DC2  0E42               	movlw	66
  1712  000DC4  6E23               	movwf	___ftadd@f2+2,c
  1713  000DC6  C090  F016         	movff	main@led,___ftneg@f1
  1714  000DCA  C091  F017         	movff	main@led+1,___ftneg@f1+1
  1715  000DCE  C092  F018         	movff	main@led+2,___ftneg@f1+2
  1716  000DD2  ECCF  F012         	call	___ftneg	;wreg free
  1717  000DD6  C016  F01E         	movff	?___ftneg,___ftadd@f1
  1718  000DDA  C017  F01F         	movff	?___ftneg+1,___ftadd@f1+1
  1719  000DDE  C018  F020         	movff	?___ftneg+2,___ftadd@f1+2
  1720  000DE2  EC44  F00D         	call	___ftadd	;wreg free
  1721  000DE6  C01E  F040         	movff	?___ftadd,___fttol@f1
  1722  000DEA  C01F  F041         	movff	?___ftadd+1,___fttol@f1+1
  1723  000DEE  C020  F042         	movff	?___ftadd+2,___fttol@f1+2
  1724  000DF2  EC1A  F00E         	call	___fttol	;wreg free
  1725  000DF6  C040  F08E         	movff	?___fttol,main@pwm
  1726  000DFA  C041  F08F         	movff	?___fttol+1,main@pwm+1
  1727                           
  1728                           ;proyecto.c: 207: duty_cycle_pwm(pwm);
  1729  000DFE  C08E  F06B         	movff	main@pwm,duty_cycle_pwm@porc_pwm
  1730  000E02  C08F  F06C         	movff	main@pwm+1,duty_cycle_pwm@porc_pwm+1
  1731  000E06  EC91  F011         	call	_duty_cycle_pwm	;wreg free
  1732                           
  1733                           ;proyecto.c: 208: lcd_posicion(0,0);
  1734  000E0A  0E00               	movlw	0
  1735  000E0C  6E18               	movwf	lcd_posicion@b,c
  1736  000E0E  0E00               	movlw	0
  1737  000E10  ECA8  F012         	call	_lcd_posicion
  1738                           
  1739                           ;proyecto.c: 209: sprintf(linea,"CONTROL ON      ");
  1740  000E14  0E6E               	movlw	low main@linea
  1741  000E16  6E22               	movwf	sprintf@sp,c
  1742  000E18  0E00               	movlw	high main@linea
  1743  000E1A  6E23               	movwf	sprintf@sp+1,c
  1744  000E1C  0E73               	movlw	low STR_7
  1745  000E1E  6E24               	movwf	sprintf@f,c
  1746  000E20  0E08               	movlw	high STR_7
  1747  000E22  6E25               	movwf	sprintf@f+1,c
  1748  000E24  ECFE  F00A         	call	_sprintf	;wreg free
  1749                           
  1750                           ;proyecto.c: 210: lcd_escribir(linea);
  1751  000E28  0E6E               	movlw	low main@linea
  1752  000E2A  6E17               	movwf	lcd_escribir@cadena,c
  1753  000E2C  0E00               	movlw	high main@linea
  1754  000E2E  6E18               	movwf	lcd_escribir@cadena+1,c
  1755  000E30  EC62  F012         	call	_lcd_escribir	;wreg free
  1756                           
  1757                           ;proyecto.c: 211: if(menu<=1){
  1758  000E34  0100               	movlb	0	; () banked
  1759  000E36  BFA4               	btfsc	(_menu+1)& (0+255),7,b
  1760  000E38  D008               	goto	l4926
  1761  000E3A  0100               	movlb	0	; () banked
  1762  000E3C  51A4               	movf	(_menu+1)& (0+255),w,b
  1763  000E3E  E11A               	bnz	l4932
  1764  000E40  0E02               	movlw	2
  1765  000E42  0100               	movlb	0	; () banked
  1766  000E44  5DA3               	subwf	_menu& (0+255),w,b
  1767  000E46  B0D8               	btfsc	status,0,c
  1768  000E48  D015               	goto	l4932
  1769  000E4A                     l4926:
  1770                           
  1771                           ; BSR set to: 0
  1772                           ;proyecto.c: 212: lcd_posicion(1,0);
  1773  000E4A  0E00               	movlw	0
  1774  000E4C  6E18               	movwf	lcd_posicion@b,c
  1775  000E4E  0E01               	movlw	1
  1776  000E50  ECA8  F012         	call	_lcd_posicion
  1777                           
  1778                           ;proyecto.c: 213: sprintf(linea2,"D DESACTIVAR    ");
  1779  000E54  0E7E               	movlw	low main@linea2
  1780  000E56  6E22               	movwf	sprintf@sp,c
  1781  000E58  0E00               	movlw	high main@linea2
  1782  000E5A  6E23               	movwf	sprintf@sp+1,c
  1783  000E5C  0E95               	movlw	low STR_8
  1784  000E5E  6E24               	movwf	sprintf@f,c
  1785  000E60  0E08               	movlw	high STR_8
  1786  000E62  6E25               	movwf	sprintf@f+1,c
  1787  000E64  ECFE  F00A         	call	_sprintf	;wreg free
  1788                           
  1789                           ;proyecto.c: 214: lcd_escribir(linea2);
  1790  000E68  0E7E               	movlw	low main@linea2
  1791  000E6A  6E17               	movwf	lcd_escribir@cadena,c
  1792  000E6C  0E00               	movlw	high main@linea2
  1793  000E6E  6E18               	movwf	lcd_escribir@cadena+1,c
  1794  000E70  EC62  F012         	call	_lcd_escribir	;wreg free
  1795  000E74                     l4932:
  1796                           
  1797                           ;proyecto.c: 215: }
  1798                           ;proyecto.c: 216: if(menu>1&&menu<=3){
  1799  000E74  0100               	movlb	0	; () banked
  1800  000E76  BFA4               	btfsc	(_menu+1)& (0+255),7,b
  1801  000E78  D028               	goto	l4942
  1802  000E7A  0100               	movlb	0	; () banked
  1803  000E7C  51A4               	movf	(_menu+1)& (0+255),w,b
  1804  000E7E  E105               	bnz	u4470
  1805  000E80  0E02               	movlw	2
  1806  000E82  0100               	movlb	0	; () banked
  1807  000E84  5DA3               	subwf	_menu& (0+255),w,b
  1808  000E86  A0D8               	btfss	status,0,c
  1809  000E88  D020               	goto	l4942
  1810  000E8A                     u4470:
  1811                           
  1812                           ; BSR set to: 0
  1813  000E8A  0100               	movlb	0	; () banked
  1814  000E8C  BFA4               	btfsc	(_menu+1)& (0+255),7,b
  1815  000E8E  D008               	goto	l4936
  1816  000E90  0100               	movlb	0	; () banked
  1817  000E92  51A4               	movf	(_menu+1)& (0+255),w,b
  1818  000E94  E11A               	bnz	l4942
  1819  000E96  0E04               	movlw	4
  1820  000E98  0100               	movlb	0	; () banked
  1821  000E9A  5DA3               	subwf	_menu& (0+255),w,b
  1822  000E9C  B0D8               	btfsc	status,0,c
  1823  000E9E  D015               	goto	l4942
  1824  000EA0                     l4936:
  1825                           
  1826                           ; BSR set to: 0
  1827                           ;proyecto.c: 217: lcd_posicion(1,0);
  1828  000EA0  0E00               	movlw	0
  1829  000EA2  6E18               	movwf	lcd_posicion@b,c
  1830  000EA4  0E01               	movlw	1
  1831  000EA6  ECA8  F012         	call	_lcd_posicion
  1832                           
  1833                           ;proyecto.c: 218: sprintf(linea2,"B MANUAL        ");
  1834  000EAA  0E7E               	movlw	low main@linea2
  1835  000EAC  6E22               	movwf	sprintf@sp,c
  1836  000EAE  0E00               	movlw	high main@linea2
  1837  000EB0  6E23               	movwf	sprintf@sp+1,c
  1838  000EB2  0E40               	movlw	low STR_3
  1839  000EB4  6E24               	movwf	sprintf@f,c
  1840  000EB6  0E08               	movlw	high STR_3
  1841  000EB8  6E25               	movwf	sprintf@f+1,c
  1842  000EBA  ECFE  F00A         	call	_sprintf	;wreg free
  1843                           
  1844                           ;proyecto.c: 219: lcd_escribir(linea2);
  1845  000EBE  0E7E               	movlw	low main@linea2
  1846  000EC0  6E17               	movwf	lcd_escribir@cadena,c
  1847  000EC2  0E00               	movlw	high main@linea2
  1848  000EC4  6E18               	movwf	lcd_escribir@cadena+1,c
  1849  000EC6  EC62  F012         	call	_lcd_escribir	;wreg free
  1850  000ECA                     l4942:
  1851                           
  1852                           ;proyecto.c: 220: }
  1853                           ;proyecto.c: 221: if(menu>3&&menu<=5){
  1854  000ECA  0100               	movlb	0	; () banked
  1855  000ECC  BFA4               	btfsc	(_menu+1)& (0+255),7,b
  1856  000ECE  D034               	goto	l4956
  1857  000ED0  0100               	movlb	0	; () banked
  1858  000ED2  51A4               	movf	(_menu+1)& (0+255),w,b
  1859  000ED4  E105               	bnz	u4490
  1860  000ED6  0E04               	movlw	4
  1861  000ED8  0100               	movlb	0	; () banked
  1862  000EDA  5DA3               	subwf	_menu& (0+255),w,b
  1863  000EDC  A0D8               	btfss	status,0,c
  1864  000EDE  D02C               	goto	l4956
  1865  000EE0                     u4490:
  1866                           
  1867                           ; BSR set to: 0
  1868  000EE0  0100               	movlb	0	; () banked
  1869  000EE2  BFA4               	btfsc	(_menu+1)& (0+255),7,b
  1870  000EE4  D008               	goto	l4946
  1871  000EE6  0100               	movlb	0	; () banked
  1872  000EE8  51A4               	movf	(_menu+1)& (0+255),w,b
  1873  000EEA  E126               	bnz	l4956
  1874  000EEC  0E06               	movlw	6
  1875  000EEE  0100               	movlb	0	; () banked
  1876  000EF0  5DA3               	subwf	_menu& (0+255),w,b
  1877  000EF2  B0D8               	btfsc	status,0,c
  1878  000EF4  D021               	goto	l4956
  1879  000EF6                     l4946:
  1880                           
  1881                           ; BSR set to: 0
  1882                           ;proyecto.c: 222: lcd_posicion(1,0);
  1883  000EF6  0E00               	movlw	0
  1884  000EF8  6E18               	movwf	lcd_posicion@b,c
  1885  000EFA  0E01               	movlw	1
  1886  000EFC  ECA8  F012         	call	_lcd_posicion
  1887                           
  1888                           ;proyecto.c: 223: sprintf(linea2,"C TEMP OFF      ");
  1889  000F00  0E7E               	movlw	low main@linea2
  1890  000F02  6E22               	movwf	sprintf@sp,c
  1891  000F04  0E00               	movlw	high main@linea2
  1892  000F06  6E23               	movwf	sprintf@sp+1,c
  1893  000F08  0E62               	movlw	low STR_10
  1894  000F0A  6E24               	movwf	sprintf@f,c
  1895  000F0C  0E08               	movlw	high STR_10
  1896  000F0E  6E25               	movwf	sprintf@f+1,c
  1897  000F10  ECFE  F00A         	call	_sprintf	;wreg free
  1898                           
  1899                           ;proyecto.c: 224: lcd_escribir(linea2);
  1900  000F14  0E7E               	movlw	low main@linea2
  1901  000F16  6E17               	movwf	lcd_escribir@cadena,c
  1902  000F18  0E00               	movlw	high main@linea2
  1903  000F1A  6E18               	movwf	lcd_escribir@cadena+1,c
  1904  000F1C  EC62  F012         	call	_lcd_escribir	;wreg free
  1905                           
  1906                           ;proyecto.c: 225: if(menu==5)
  1907  000F20  0E05               	movlw	5
  1908  000F22  0100               	movlb	0	; () banked
  1909  000F24  19A3               	xorwf	_menu& (0+255),w,b
  1910  000F26  0100               	movlb	0	; () banked
  1911  000F28  11A4               	iorwf	(_menu+1)& (0+255),w,b
  1912  000F2A  A4D8               	btfss	status,2,c
  1913  000F2C  D005               	goto	l4956
  1914                           
  1915                           ; BSR set to: 0
  1916                           ;proyecto.c: 226: menu=0;
  1917  000F2E  0E00               	movlw	0
  1918  000F30  0100               	movlb	0	; () banked
  1919  000F32  6FA4               	movwf	(_menu+1)& (0+255),b
  1920  000F34  0E00               	movlw	0
  1921  000F36  6FA3               	movwf	_menu& (0+255),b
  1922  000F38                     l4956:
  1923                           
  1924                           ; BSR set to: 0
  1925                           ;proyecto.c: 227: }
  1926                           ;proyecto.c: 228: if(tecla==12){
  1927  000F38  0E0C               	movlw	12
  1928  000F3A  1848               	xorwf	_tecla,w,c
  1929  000F3C  1049               	iorwf	_tecla+1,w,c
  1930  000F3E  A4D8               	btfss	status,2,c
  1931  000F40  D171               	goto	l5042
  1932                           
  1933                           ; BSR set to: 0
  1934                           ;proyecto.c: 229: T0CONbits.TMR0ON=0;
  1935  000F42  9ED5               	bcf	4053,7,c	;volatile
  1936                           
  1937                           ; BSR set to: 0
  1938                           ;proyecto.c: 230: tecla=255;
  1939  000F44  0E00               	movlw	0
  1940  000F46  6E49               	movwf	_tecla+1,c
  1941  000F48  6848               	setf	_tecla,c
  1942                           
  1943                           ;proyecto.c: 231: decenas=unidades=0;
  1944  000F4A  0E00               	movlw	0
  1945  000F4C  0100               	movlb	0	; () banked
  1946  000F4E  6FA2               	movwf	(main@unidades+1)& (0+255),b
  1947  000F50  0E00               	movlw	0
  1948  000F52  6FA1               	movwf	main@unidades& (0+255),b
  1949  000F54  C0A1  F093         	movff	main@unidades,main@decenas
  1950  000F58  C0A2  F094         	movff	main@unidades+1,main@decenas+1
  1951  000F5C                     l4962:
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;proyecto.c: 233: luzext=Valor_ADC(0);
  1955  000F5C  0E00               	movlw	0
  1956  000F5E  ECE9  F011         	call	_Valor_ADC
  1957  000F62  C016  F097         	movff	?_Valor_ADC,main@luzext
  1958  000F66  C017  F098         	movff	?_Valor_ADC+1,main@luzext+1
  1959                           
  1960                           ;proyecto.c: 234: if(luzext>=3998)
  1961  000F6A  0100               	movlb	0	; () banked
  1962  000F6C  BF98               	btfsc	(main@luzext+1)& (0+255),7,b
  1963  000F6E  D012               	goto	l4968
  1964  000F70  0E9E               	movlw	158
  1965  000F72  0100               	movlb	0	; () banked
  1966  000F74  5D97               	subwf	main@luzext& (0+255),w,b
  1967  000F76  0E0F               	movlw	15
  1968  000F78  0100               	movlb	0	; () banked
  1969  000F7A  5998               	subwfb	(main@luzext+1)& (0+255),w,b
  1970  000F7C  A0D8               	btfss	status,0,c
  1971  000F7E  D00A               	goto	l4968
  1972                           
  1973                           ; BSR set to: 0
  1974                           ;proyecto.c: 235: led=100;
  1975  000F80  0E00               	movlw	0
  1976  000F82  0100               	movlb	0	; () banked
  1977  000F84  6F90               	movwf	main@led& (0+255),b
  1978  000F86  0EC8               	movlw	200
  1979  000F88  0100               	movlb	0	; () banked
  1980  000F8A  6F91               	movwf	(main@led+1)& (0+255),b
  1981  000F8C  0E42               	movlw	66
  1982  000F8E  0100               	movlb	0	; () banked
  1983  000F90  6F92               	movwf	(main@led+2)& (0+255),b
  1984  000F92  D028               	goto	l198
  1985  000F94                     l4968:
  1986                           
  1987                           ; BSR set to: 0
  1988                           ;proyecto.c: 236: else
  1989                           ;proyecto.c: 237: led=(luzext/4095.00)*100;
  1990  000F94  0EF0               	movlw	240
  1991  000F96  6E25               	movwf	___ftdiv@f2,c
  1992  000F98  0E7F               	movlw	127
  1993  000F9A  6E26               	movwf	___ftdiv@f2+1,c
  1994  000F9C  0E45               	movlw	69
  1995  000F9E  6E27               	movwf	___ftdiv@f2+2,c
  1996  000FA0  C097  F01E         	movff	main@luzext,___awtoft@c
  1997  000FA4  C098  F01F         	movff	main@luzext+1,___awtoft@c+1
  1998  000FA8  EC2C  F012         	call	___awtoft	;wreg free
  1999  000FAC  C01E  F022         	movff	?___awtoft,___ftdiv@f1
  2000  000FB0  C01F  F023         	movff	?___awtoft+1,___ftdiv@f1+1
  2001  000FB4  C020  F024         	movff	?___awtoft+2,___ftdiv@f1+2
  2002  000FB8  ECB6  F00F         	call	___ftdiv	;wreg free
  2003  000FBC  C022  F031         	movff	?___ftdiv,___ftmul@f1
  2004  000FC0  C023  F032         	movff	?___ftdiv+1,___ftmul@f1+1
  2005  000FC4  C024  F033         	movff	?___ftdiv+2,___ftmul@f1+2
  2006  000FC8  0E00               	movlw	0
  2007  000FCA  6E34               	movwf	___ftmul@f2,c
  2008  000FCC  0EC8               	movlw	200
  2009  000FCE  6E35               	movwf	___ftmul@f2+1,c
  2010  000FD0  0E42               	movlw	66
  2011  000FD2  6E36               	movwf	___ftmul@f2+2,c
  2012  000FD4  EC3C  F00F         	call	___ftmul	;wreg free
  2013  000FD8  C031  F090         	movff	?___ftmul,main@led
  2014  000FDC  C032  F091         	movff	?___ftmul+1,main@led+1
  2015  000FE0  C033  F092         	movff	?___ftmul+2,main@led+2
  2016  000FE4                     l198:
  2017                           
  2018                           ;proyecto.c: 238: pwm=100-led;
  2019  000FE4  0E00               	movlw	0
  2020  000FE6  6E21               	movwf	___ftadd@f2,c
  2021  000FE8  0EC8               	movlw	200
  2022  000FEA  6E22               	movwf	___ftadd@f2+1,c
  2023  000FEC  0E42               	movlw	66
  2024  000FEE  6E23               	movwf	___ftadd@f2+2,c
  2025  000FF0  C090  F016         	movff	main@led,___ftneg@f1
  2026  000FF4  C091  F017         	movff	main@led+1,___ftneg@f1+1
  2027  000FF8  C092  F018         	movff	main@led+2,___ftneg@f1+2
  2028  000FFC  ECCF  F012         	call	___ftneg	;wreg free
  2029  001000  C016  F01E         	movff	?___ftneg,___ftadd@f1
  2030  001004  C017  F01F         	movff	?___ftneg+1,___ftadd@f1+1
  2031  001008  C018  F020         	movff	?___ftneg+2,___ftadd@f1+2
  2032  00100C  EC44  F00D         	call	___ftadd	;wreg free
  2033  001010  C01E  F040         	movff	?___ftadd,___fttol@f1
  2034  001014  C01F  F041         	movff	?___ftadd+1,___fttol@f1+1
  2035  001018  C020  F042         	movff	?___ftadd+2,___fttol@f1+2
  2036  00101C  EC1A  F00E         	call	___fttol	;wreg free
  2037  001020  C040  F08E         	movff	?___fttol,main@pwm
  2038  001024  C041  F08F         	movff	?___fttol+1,main@pwm+1
  2039                           
  2040                           ;proyecto.c: 239: duty_cycle_pwm(pwm);
  2041  001028  C08E  F06B         	movff	main@pwm,duty_cycle_pwm@porc_pwm
  2042  00102C  C08F  F06C         	movff	main@pwm+1,duty_cycle_pwm@porc_pwm+1
  2043  001030  EC91  F011         	call	_duty_cycle_pwm	;wreg free
  2044                           
  2045                           ;proyecto.c: 240: lcd_posicion(1,0);
  2046  001034  0E00               	movlw	0
  2047  001036  6E18               	movwf	lcd_posicion@b,c
  2048  001038  0E01               	movlw	1
  2049  00103A  ECA8  F012         	call	_lcd_posicion
  2050                           
  2051                           ;proyecto.c: 241: sprintf(linea2,"TEMP OFF:%2ds    ",tiempo1);
  2052  00103E  0E7E               	movlw	low main@linea2
  2053  001040  6E22               	movwf	sprintf@sp,c
  2054  001042  0E00               	movlw	high main@linea2
  2055  001044  6E23               	movwf	sprintf@sp+1,c
  2056  001046  0E1D               	movlw	low STR_11
  2057  001048  6E24               	movwf	sprintf@f,c
  2058  00104A  0E08               	movlw	high STR_11
  2059  00104C  6E25               	movwf	sprintf@f+1,c
  2060  00104E  C09B  F026         	movff	main@tiempo1,?_sprintf+4
  2061  001052  C09C  F027         	movff	main@tiempo1+1,?_sprintf+5
  2062  001056  ECFE  F00A         	call	_sprintf	;wreg free
  2063                           
  2064                           ;proyecto.c: 242: lcd_escribir(linea2);
  2065  00105A  0E7E               	movlw	low main@linea2
  2066  00105C  6E17               	movwf	lcd_escribir@cadena,c
  2067  00105E  0E00               	movlw	high main@linea2
  2068  001060  6E18               	movwf	lcd_escribir@cadena+1,c
  2069  001062  EC62  F012         	call	_lcd_escribir	;wreg free
  2070                           
  2071                           ;proyecto.c: 243: lcd_posicion(1,10);
  2072  001066  0E0A               	movlw	10
  2073  001068  6E18               	movwf	lcd_posicion@b,c
  2074  00106A  0E01               	movlw	1
  2075  00106C  ECA8  F012         	call	_lcd_posicion
  2076                           
  2077                           ;proyecto.c: 244: lcd_cursor(0X0D,0X00);
  2078  001070  0E00               	movlw	0
  2079  001072  6E18               	movwf	lcd_cursor@cursor,c
  2080  001074  0E0D               	movlw	13
  2081  001076  EC00  F013         	call	_lcd_cursor
  2082                           
  2083                           ;proyecto.c: 245: _delay((unsigned long)((30)*(20000000/4000.0)));
  2084  00107A  0EC3               	movlw	195
  2085  00107C  0100               	movlb	0	; () banked
  2086  00107E  6F6D               	movwf	??_main& (0+255),b
  2087  001080  0ECD               	movlw	205
  2088  001082                     u4877:
  2089  001082  2EE8               	decfsz	wreg,f,c
  2090  001084  D7FE               	goto	u4877
  2091  001086  2F6D               	decfsz	??_main& (0+255),f,b
  2092  001088  D7FC               	goto	u4877
  2093  00108A  F000               	nop	
  2094                           
  2095                           ;proyecto.c: 246: lcd_cursor(0X0C,0X00);
  2096  00108C  0E00               	movlw	0
  2097  00108E  6E18               	movwf	lcd_cursor@cursor,c
  2098  001090  0E0C               	movlw	12
  2099  001092  EC00  F013         	call	_lcd_cursor
  2100                           
  2101                           ;proyecto.c: 247: if(j==0&&tecla>=0&&tecla<=9){
  2102  001096  0100               	movlb	0	; () banked
  2103  001098  519D               	movf	main@j& (0+255),w,b
  2104  00109A  0100               	movlb	0	; () banked
  2105  00109C  119E               	iorwf	(main@j+1)& (0+255),w,b
  2106  00109E  B4D8               	btfsc	status,2,c
  2107                           
  2108                           ; BSR set to: 0
  2109  0010A0  BE49               	btfsc	_tecla+1,7,c
  2110  0010A2  D016               	goto	l4994
  2111                           
  2112                           ; BSR set to: 0
  2113  0010A4  BE49               	btfsc	_tecla+1,7,c
  2114  0010A6  D006               	goto	l4988
  2115  0010A8  5049               	movf	_tecla+1,w,c
  2116  0010AA  E112               	bnz	l4994
  2117  0010AC  0E0A               	movlw	10
  2118  0010AE  5C48               	subwf	_tecla,w,c
  2119  0010B0  B0D8               	btfsc	status,0,c
  2120  0010B2  D00E               	goto	l4994
  2121  0010B4                     l4988:
  2122                           
  2123                           ; BSR set to: 0
  2124                           ;proyecto.c: 248: unidades=tecla;
  2125  0010B4  C048  F0A1         	movff	_tecla,main@unidades
  2126  0010B8  C049  F0A2         	movff	_tecla+1,main@unidades+1
  2127                           
  2128                           ;proyecto.c: 249: tiempo1=unidades;
  2129  0010BC  C0A1  F09B         	movff	main@unidades,main@tiempo1
  2130  0010C0  C0A2  F09C         	movff	main@unidades+1,main@tiempo1+1
  2131                           
  2132                           ; BSR set to: 0
  2133                           ;proyecto.c: 250: tecla=255;
  2134  0010C4  0E00               	movlw	0
  2135  0010C6  6E49               	movwf	_tecla+1,c
  2136  0010C8  6848               	setf	_tecla,c
  2137                           
  2138                           ; BSR set to: 0
  2139                           ;proyecto.c: 251: j++;
  2140  0010CA  0100               	movlb	0	; () banked
  2141  0010CC  4B9D               	infsnz	main@j& (0+255),f,b
  2142  0010CE  2B9E               	incf	(main@j+1)& (0+255),f,b
  2143  0010D0                     l4994:
  2144                           
  2145                           ; BSR set to: 0
  2146                           ;proyecto.c: 252: }
  2147                           ;proyecto.c: 253: if(j==1&&unidades<6&&tecla>=0&&tecla<=9){
  2148  0010D0  0100               	movlb	0	; () banked
  2149  0010D2  059D               	decf	main@j& (0+255),w,b
  2150  0010D4  0100               	movlb	0	; () banked
  2151  0010D6  119E               	iorwf	(main@j+1)& (0+255),w,b
  2152  0010D8  A4D8               	btfss	status,2,c
  2153  0010DA  D039               	goto	l5010
  2154                           
  2155                           ; BSR set to: 0
  2156  0010DC  0100               	movlb	0	; () banked
  2157  0010DE  BFA2               	btfsc	(main@unidades+1)& (0+255),7,b
  2158  0010E0  D008               	goto	l4998
  2159  0010E2  0100               	movlb	0	; () banked
  2160  0010E4  51A2               	movf	(main@unidades+1)& (0+255),w,b
  2161  0010E6  E133               	bnz	l5010
  2162  0010E8  0E06               	movlw	6
  2163  0010EA  0100               	movlb	0	; () banked
  2164  0010EC  5DA1               	subwf	main@unidades& (0+255),w,b
  2165  0010EE  B0D8               	btfsc	status,0,c
  2166  0010F0  D02E               	goto	l5010
  2167  0010F2                     l4998:
  2168                           
  2169                           ; BSR set to: 0
  2170  0010F2  BE49               	btfsc	_tecla+1,7,c
  2171  0010F4  D02C               	goto	l5010
  2172                           
  2173                           ; BSR set to: 0
  2174  0010F6  BE49               	btfsc	_tecla+1,7,c
  2175  0010F8  D006               	goto	l5002
  2176  0010FA  5049               	movf	_tecla+1,w,c
  2177  0010FC  E128               	bnz	l5010
  2178  0010FE  0E0A               	movlw	10
  2179  001100  5C48               	subwf	_tecla,w,c
  2180  001102  B0D8               	btfsc	status,0,c
  2181  001104  D024               	goto	l5010
  2182  001106                     l5002:
  2183                           
  2184                           ; BSR set to: 0
  2185                           ;proyecto.c: 254: decenas=unidades;
  2186  001106  C0A1  F093         	movff	main@unidades,main@decenas
  2187  00110A  C0A2  F094         	movff	main@unidades+1,main@decenas+1
  2188                           
  2189                           ;proyecto.c: 255: unidades=tecla;
  2190  00110E  C048  F0A1         	movff	_tecla,main@unidades
  2191  001112  C049  F0A2         	movff	_tecla+1,main@unidades+1
  2192                           
  2193                           ; BSR set to: 0
  2194                           ;proyecto.c: 256: tiempo1=decenas*10+unidades;
  2195  001116  C093  F016         	movff	main@decenas,___wmul@multiplier
  2196  00111A  C094  F017         	movff	main@decenas+1,___wmul@multiplier+1
  2197  00111E  0E00               	movlw	0
  2198  001120  6E19               	movwf	___wmul@multiplicand+1,c
  2199  001122  0E0A               	movlw	10
  2200  001124  6E18               	movwf	___wmul@multiplicand,c
  2201  001126  ECBC  F012         	call	___wmul	;wreg free
  2202  00112A  0100               	movlb	0	; () banked
  2203  00112C  51A1               	movf	main@unidades& (0+255),w,b
  2204  00112E  2416               	addwf	?___wmul,w,c
  2205  001130  0100               	movlb	0	; () banked
  2206  001132  6F9B               	movwf	main@tiempo1& (0+255),b
  2207  001134  0100               	movlb	0	; () banked
  2208  001136  51A2               	movf	(main@unidades+1)& (0+255),w,b
  2209  001138  2017               	addwfc	?___wmul+1,w,c
  2210  00113A  0100               	movlb	0	; () banked
  2211  00113C  6F9C               	movwf	(main@tiempo1+1)& (0+255),b
  2212                           
  2213                           ; BSR set to: 0
  2214                           ;proyecto.c: 257: tecla=255;
  2215  00113E  0E00               	movlw	0
  2216  001140  6E49               	movwf	_tecla+1,c
  2217  001142  6848               	setf	_tecla,c
  2218                           
  2219                           ; BSR set to: 0
  2220                           ;proyecto.c: 258: j=0;
  2221  001144  0E00               	movlw	0
  2222  001146  0100               	movlb	0	; () banked
  2223  001148  6F9E               	movwf	(main@j+1)& (0+255),b
  2224  00114A  0E00               	movlw	0
  2225  00114C  6F9D               	movwf	main@j& (0+255),b
  2226  00114E                     l5010:
  2227                           
  2228                           ; BSR set to: 0
  2229                           ;proyecto.c: 259: }
  2230                           ;proyecto.c: 260: if(j==1&&unidades==6&&tecla==0){
  2231  00114E  0100               	movlb	0	; () banked
  2232  001150  059D               	decf	main@j& (0+255),w,b
  2233  001152  0100               	movlb	0	; () banked
  2234  001154  119E               	iorwf	(main@j+1)& (0+255),w,b
  2235  001156  A4D8               	btfss	status,2,c
  2236  001158  D02F               	goto	l5024
  2237                           
  2238                           ; BSR set to: 0
  2239  00115A  0E06               	movlw	6
  2240  00115C  0100               	movlb	0	; () banked
  2241  00115E  19A1               	xorwf	main@unidades& (0+255),w,b
  2242  001160  0100               	movlb	0	; () banked
  2243  001162  11A2               	iorwf	(main@unidades+1)& (0+255),w,b
  2244  001164  A4D8               	btfss	status,2,c
  2245  001166  D028               	goto	l5024
  2246                           
  2247                           ; BSR set to: 0
  2248  001168  5048               	movf	_tecla,w,c
  2249  00116A  1049               	iorwf	_tecla+1,w,c
  2250  00116C  A4D8               	btfss	status,2,c
  2251  00116E  D024               	goto	l5024
  2252                           
  2253                           ; BSR set to: 0
  2254                           ;proyecto.c: 261: decenas=unidades;
  2255  001170  C0A1  F093         	movff	main@unidades,main@decenas
  2256  001174  C0A2  F094         	movff	main@unidades+1,main@decenas+1
  2257                           
  2258                           ;proyecto.c: 262: unidades=tecla;
  2259  001178  C048  F0A1         	movff	_tecla,main@unidades
  2260  00117C  C049  F0A2         	movff	_tecla+1,main@unidades+1
  2261                           
  2262                           ; BSR set to: 0
  2263                           ;proyecto.c: 263: tiempo1=decenas*10+unidades;
  2264  001180  C093  F016         	movff	main@decenas,___wmul@multiplier
  2265  001184  C094  F017         	movff	main@decenas+1,___wmul@multiplier+1
  2266  001188  0E00               	movlw	0
  2267  00118A  6E19               	movwf	___wmul@multiplicand+1,c
  2268  00118C  0E0A               	movlw	10
  2269  00118E  6E18               	movwf	___wmul@multiplicand,c
  2270  001190  ECBC  F012         	call	___wmul	;wreg free
  2271  001194  0100               	movlb	0	; () banked
  2272  001196  51A1               	movf	main@unidades& (0+255),w,b
  2273  001198  2416               	addwf	?___wmul,w,c
  2274  00119A  0100               	movlb	0	; () banked
  2275  00119C  6F9B               	movwf	main@tiempo1& (0+255),b
  2276  00119E  0100               	movlb	0	; () banked
  2277  0011A0  51A2               	movf	(main@unidades+1)& (0+255),w,b
  2278  0011A2  2017               	addwfc	?___wmul+1,w,c
  2279  0011A4  0100               	movlb	0	; () banked
  2280  0011A6  6F9C               	movwf	(main@tiempo1+1)& (0+255),b
  2281                           
  2282                           ; BSR set to: 0
  2283                           ;proyecto.c: 264: tecla=255;
  2284  0011A8  0E00               	movlw	0
  2285  0011AA  6E49               	movwf	_tecla+1,c
  2286  0011AC  6848               	setf	_tecla,c
  2287                           
  2288                           ; BSR set to: 0
  2289                           ;proyecto.c: 265: j=0;
  2290  0011AE  0E00               	movlw	0
  2291  0011B0  0100               	movlb	0	; () banked
  2292  0011B2  6F9E               	movwf	(main@j+1)& (0+255),b
  2293  0011B4  0E00               	movlw	0
  2294  0011B6  6F9D               	movwf	main@j& (0+255),b
  2295  0011B8                     l5024:
  2296                           
  2297                           ; BSR set to: 0
  2298                           ;proyecto.c: 266: }
  2299                           ;proyecto.c: 267: if(tecla==12){
  2300  0011B8  0E0C               	movlw	12
  2301  0011BA  1848               	xorwf	_tecla,w,c
  2302  0011BC  1049               	iorwf	_tecla+1,w,c
  2303  0011BE  A4D8               	btfss	status,2,c
  2304  0011C0  D013               	goto	l5032
  2305                           
  2306                           ; BSR set to: 0
  2307                           ;proyecto.c: 268: tiempo=tiempo1;
  2308  0011C2  C09B  F0A5         	movff	main@tiempo1,_tiempo
  2309  0011C6  C09C  F0A6         	movff	main@tiempo1+1,_tiempo+1
  2310                           
  2311                           ; BSR set to: 0
  2312                           ;proyecto.c: 269: tiempo1=0;
  2313  0011CA  0E00               	movlw	0
  2314  0011CC  0100               	movlb	0	; () banked
  2315  0011CE  6F9C               	movwf	(main@tiempo1+1)& (0+255),b
  2316  0011D0  0E00               	movlw	0
  2317  0011D2  6F9B               	movwf	main@tiempo1& (0+255),b
  2318                           
  2319                           ; BSR set to: 0
  2320                           ;proyecto.c: 270: T0CONbits.TMR0ON=1;
  2321  0011D4  8ED5               	bsf	4053,7,c	;volatile
  2322                           
  2323                           ;proyecto.c: 271: tecla2=13;
  2324  0011D6  0E00               	movlw	0
  2325  0011D8  0100               	movlb	0	; () banked
  2326  0011DA  6F9A               	movwf	(main@tecla2+1)& (0+255),b
  2327  0011DC  0E0D               	movlw	13
  2328  0011DE  6F99               	movwf	main@tecla2& (0+255),b
  2329                           
  2330                           ;proyecto.c: 272: tecla=16;
  2331  0011E0  0E00               	movlw	0
  2332  0011E2  6E49               	movwf	_tecla+1,c
  2333  0011E4  0E10               	movlw	16
  2334  0011E6  6E48               	movwf	_tecla,c
  2335  0011E8                     l5032:
  2336                           
  2337                           ; BSR set to: 0
  2338                           ;proyecto.c: 273: }
  2339                           ;proyecto.c: 274: if(tecla==15){
  2340  0011E8  0E0F               	movlw	15
  2341  0011EA  1848               	xorwf	_tecla,w,c
  2342  0011EC  1049               	iorwf	_tecla+1,w,c
  2343  0011EE  A4D8               	btfss	status,2,c
  2344  0011F0  D00E               	goto	l5038
  2345                           
  2346                           ; BSR set to: 0
  2347                           ;proyecto.c: 275: tiempo1=0;
  2348  0011F2  0E00               	movlw	0
  2349  0011F4  0100               	movlb	0	; () banked
  2350  0011F6  6F9C               	movwf	(main@tiempo1+1)& (0+255),b
  2351  0011F8  0E00               	movlw	0
  2352  0011FA  6F9B               	movwf	main@tiempo1& (0+255),b
  2353                           
  2354                           ; BSR set to: 0
  2355                           ;proyecto.c: 276: T0CONbits.TMR0ON=1;
  2356  0011FC  8ED5               	bsf	4053,7,c	;volatile
  2357                           
  2358                           ;proyecto.c: 277: tecla2=13;
  2359  0011FE  0E00               	movlw	0
  2360  001200  0100               	movlb	0	; () banked
  2361  001202  6F9A               	movwf	(main@tecla2+1)& (0+255),b
  2362  001204  0E0D               	movlw	13
  2363  001206  6F99               	movwf	main@tecla2& (0+255),b
  2364                           
  2365                           ;proyecto.c: 278: tecla=255;
  2366  001208  0E00               	movlw	0
  2367  00120A  6E49               	movwf	_tecla+1,c
  2368  00120C  6848               	setf	_tecla,c
  2369  00120E                     l5038:
  2370                           
  2371                           ; BSR set to: 0
  2372                           ;proyecto.c: 279: }
  2373                           ;proyecto.c: 280: }while(tecla2!=13);
  2374  00120E  0E0D               	movlw	13
  2375  001210  0100               	movlb	0	; () banked
  2376  001212  1999               	xorwf	main@tecla2& (0+255),w,b
  2377  001214  0100               	movlb	0	; () banked
  2378  001216  119A               	iorwf	(main@tecla2+1)& (0+255),w,b
  2379  001218  A4D8               	btfss	status,2,c
  2380  00121A  D6A0               	goto	l4962
  2381                           
  2382                           ; BSR set to: 0
  2383                           ;proyecto.c: 281: tecla2=255;
  2384                           
  2385                           ; BSR set to: 0
  2386  00121C  0E00               	movlw	0
  2387  00121E  0100               	movlb	0	; () banked
  2388  001220  6F9A               	movwf	(main@tecla2+1)& (0+255),b
  2389  001222  6999               	setf	main@tecla2& (0+255),b
  2390  001224                     l5042:
  2391                           
  2392                           ; BSR set to: 0
  2393                           ;proyecto.c: 282: }
  2394                           ;proyecto.c: 283: if(tecla==16){
  2395  001224  0E10               	movlw	16
  2396  001226  1848               	xorwf	_tecla,w,c
  2397  001228  1049               	iorwf	_tecla+1,w,c
  2398  00122A  A4D8               	btfss	status,2,c
  2399  00122C  D098               	goto	l5062
  2400  00122E                     l5044:
  2401                           
  2402                           ; BSR set to: 0
  2403                           ;proyecto.c: 285: lcd_posicion(1,0);
  2404  00122E  0E00               	movlw	0
  2405  001230  6E18               	movwf	lcd_posicion@b,c
  2406  001232  0E01               	movlw	1
  2407  001234  ECA8  F012         	call	_lcd_posicion
  2408                           
  2409                           ;proyecto.c: 286: sprintf(linea2,"TEMP OFF:%2ds    ",tiempo);
  2410  001238  0E7E               	movlw	low main@linea2
  2411  00123A  6E22               	movwf	sprintf@sp,c
  2412  00123C  0E00               	movlw	high main@linea2
  2413  00123E  6E23               	movwf	sprintf@sp+1,c
  2414  001240  0E1D               	movlw	low STR_11
  2415  001242  6E24               	movwf	sprintf@f,c
  2416  001244  0E08               	movlw	high STR_11
  2417  001246  6E25               	movwf	sprintf@f+1,c
  2418  001248  C0A5  F026         	movff	_tiempo,?_sprintf+4
  2419  00124C  C0A6  F027         	movff	_tiempo+1,?_sprintf+5
  2420  001250  ECFE  F00A         	call	_sprintf	;wreg free
  2421                           
  2422                           ;proyecto.c: 287: lcd_escribir(linea2);
  2423  001254  0E7E               	movlw	low main@linea2
  2424  001256  6E17               	movwf	lcd_escribir@cadena,c
  2425  001258  0E00               	movlw	high main@linea2
  2426  00125A  6E18               	movwf	lcd_escribir@cadena+1,c
  2427  00125C  EC62  F012         	call	_lcd_escribir	;wreg free
  2428                           
  2429                           ;proyecto.c: 288: luzext=Valor_ADC(0);
  2430  001260  0E00               	movlw	0
  2431  001262  ECE9  F011         	call	_Valor_ADC
  2432  001266  C016  F097         	movff	?_Valor_ADC,main@luzext
  2433  00126A  C017  F098         	movff	?_Valor_ADC+1,main@luzext+1
  2434                           
  2435                           ;proyecto.c: 289: if(luzext>=3998)
  2436  00126E  0100               	movlb	0	; () banked
  2437  001270  BF98               	btfsc	(main@luzext+1)& (0+255),7,b
  2438  001272  D012               	goto	l5056
  2439  001274  0E9E               	movlw	158
  2440  001276  0100               	movlb	0	; () banked
  2441  001278  5D97               	subwf	main@luzext& (0+255),w,b
  2442  00127A  0E0F               	movlw	15
  2443  00127C  0100               	movlb	0	; () banked
  2444  00127E  5998               	subwfb	(main@luzext+1)& (0+255),w,b
  2445  001280  A0D8               	btfss	status,0,c
  2446  001282  D00A               	goto	l5056
  2447                           
  2448                           ; BSR set to: 0
  2449                           ;proyecto.c: 290: led=100;
  2450  001284  0E00               	movlw	0
  2451  001286  0100               	movlb	0	; () banked
  2452  001288  6F90               	movwf	main@led& (0+255),b
  2453  00128A  0EC8               	movlw	200
  2454  00128C  0100               	movlb	0	; () banked
  2455  00128E  6F91               	movwf	(main@led+1)& (0+255),b
  2456  001290  0E42               	movlw	66
  2457  001292  0100               	movlb	0	; () banked
  2458  001294  6F92               	movwf	(main@led+2)& (0+255),b
  2459  001296  D028               	goto	l208
  2460  001298                     l5056:
  2461                           
  2462                           ; BSR set to: 0
  2463                           ;proyecto.c: 291: else
  2464                           ;proyecto.c: 292: led=(luzext/4095.00)*100;
  2465  001298  0EF0               	movlw	240
  2466  00129A  6E25               	movwf	___ftdiv@f2,c
  2467  00129C  0E7F               	movlw	127
  2468  00129E  6E26               	movwf	___ftdiv@f2+1,c
  2469  0012A0  0E45               	movlw	69
  2470  0012A2  6E27               	movwf	___ftdiv@f2+2,c
  2471  0012A4  C097  F01E         	movff	main@luzext,___awtoft@c
  2472  0012A8  C098  F01F         	movff	main@luzext+1,___awtoft@c+1
  2473  0012AC  EC2C  F012         	call	___awtoft	;wreg free
  2474  0012B0  C01E  F022         	movff	?___awtoft,___ftdiv@f1
  2475  0012B4  C01F  F023         	movff	?___awtoft+1,___ftdiv@f1+1
  2476  0012B8  C020  F024         	movff	?___awtoft+2,___ftdiv@f1+2
  2477  0012BC  ECB6  F00F         	call	___ftdiv	;wreg free
  2478  0012C0  C022  F031         	movff	?___ftdiv,___ftmul@f1
  2479  0012C4  C023  F032         	movff	?___ftdiv+1,___ftmul@f1+1
  2480  0012C8  C024  F033         	movff	?___ftdiv+2,___ftmul@f1+2
  2481  0012CC  0E00               	movlw	0
  2482  0012CE  6E34               	movwf	___ftmul@f2,c
  2483  0012D0  0EC8               	movlw	200
  2484  0012D2  6E35               	movwf	___ftmul@f2+1,c
  2485  0012D4  0E42               	movlw	66
  2486  0012D6  6E36               	movwf	___ftmul@f2+2,c
  2487  0012D8  EC3C  F00F         	call	___ftmul	;wreg free
  2488  0012DC  C031  F090         	movff	?___ftmul,main@led
  2489  0012E0  C032  F091         	movff	?___ftmul+1,main@led+1
  2490  0012E4  C033  F092         	movff	?___ftmul+2,main@led+2
  2491  0012E8                     l208:
  2492                           
  2493                           ;proyecto.c: 293: pwm=100-led;
  2494  0012E8  0E00               	movlw	0
  2495  0012EA  6E21               	movwf	___ftadd@f2,c
  2496  0012EC  0EC8               	movlw	200
  2497  0012EE  6E22               	movwf	___ftadd@f2+1,c
  2498  0012F0  0E42               	movlw	66
  2499  0012F2  6E23               	movwf	___ftadd@f2+2,c
  2500  0012F4  C090  F016         	movff	main@led,___ftneg@f1
  2501  0012F8  C091  F017         	movff	main@led+1,___ftneg@f1+1
  2502  0012FC  C092  F018         	movff	main@led+2,___ftneg@f1+2
  2503  001300  ECCF  F012         	call	___ftneg	;wreg free
  2504  001304  C016  F01E         	movff	?___ftneg,___ftadd@f1
  2505  001308  C017  F01F         	movff	?___ftneg+1,___ftadd@f1+1
  2506  00130C  C018  F020         	movff	?___ftneg+2,___ftadd@f1+2
  2507  001310  EC44  F00D         	call	___ftadd	;wreg free
  2508  001314  C01E  F040         	movff	?___ftadd,___fttol@f1
  2509  001318  C01F  F041         	movff	?___ftadd+1,___fttol@f1+1
  2510  00131C  C020  F042         	movff	?___ftadd+2,___fttol@f1+2
  2511  001320  EC1A  F00E         	call	___fttol	;wreg free
  2512  001324  C040  F08E         	movff	?___fttol,main@pwm
  2513  001328  C041  F08F         	movff	?___fttol+1,main@pwm+1
  2514                           
  2515                           ;proyecto.c: 294: duty_cycle_pwm(pwm);
  2516  00132C  C08E  F06B         	movff	main@pwm,duty_cycle_pwm@porc_pwm
  2517  001330  C08F  F06C         	movff	main@pwm+1,duty_cycle_pwm@porc_pwm+1
  2518  001334  EC91  F011         	call	_duty_cycle_pwm	;wreg free
  2519                           
  2520                           ;proyecto.c: 295: }while(tiempo!=0);
  2521  001338  0100               	movlb	0	; () banked
  2522  00133A  51A5               	movf	_tiempo& (0+255),w,b
  2523  00133C  0100               	movlb	0	; () banked
  2524  00133E  11A6               	iorwf	(_tiempo+1)& (0+255),w,b
  2525  001340  A4D8               	btfss	status,2,c
  2526  001342  D775               	goto	l5044
  2527                           
  2528                           ; BSR set to: 0
  2529                           ;proyecto.c: 296: tecla=255;
  2530                           
  2531                           ; BSR set to: 0
  2532  001344  0E00               	movlw	0
  2533  001346  6E49               	movwf	_tecla+1,c
  2534  001348  6848               	setf	_tecla,c
  2535                           
  2536                           ;proyecto.c: 297: tecla2=13;
  2537  00134A  0E00               	movlw	0
  2538  00134C  0100               	movlb	0	; () banked
  2539  00134E  6F9A               	movwf	(main@tecla2+1)& (0+255),b
  2540  001350  0E0D               	movlw	13
  2541  001352  6F99               	movwf	main@tecla2& (0+255),b
  2542                           
  2543                           ;proyecto.c: 298: menu=0;
  2544  001354  0E00               	movlw	0
  2545  001356  0100               	movlb	0	; () banked
  2546  001358  6FA4               	movwf	(_menu+1)& (0+255),b
  2547  00135A  0E00               	movlw	0
  2548  00135C  6FA3               	movwf	_menu& (0+255),b
  2549  00135E                     l5062:
  2550                           
  2551                           ; BSR set to: 0
  2552                           ;proyecto.c: 299: }
  2553                           ;proyecto.c: 300: if(tecla==11||tecla==13)
  2554  00135E  0E0B               	movlw	11
  2555  001360  1848               	xorwf	_tecla,w,c
  2556  001362  1049               	iorwf	_tecla+1,w,c
  2557  001364  B4D8               	btfsc	status,2,c
  2558  001366  D005               	goto	l5066
  2559                           
  2560                           ; BSR set to: 0
  2561  001368  0E0D               	movlw	13
  2562  00136A  1848               	xorwf	_tecla,w,c
  2563  00136C  1049               	iorwf	_tecla+1,w,c
  2564  00136E  A4D8               	btfss	status,2,c
  2565  001370  D005               	goto	l5068
  2566  001372                     l5066:
  2567                           
  2568                           ; BSR set to: 0
  2569                           ;proyecto.c: 301: tecla2=13;
  2570  001372  0E00               	movlw	0
  2571  001374  0100               	movlb	0	; () banked
  2572  001376  6F9A               	movwf	(main@tecla2+1)& (0+255),b
  2573  001378  0E0D               	movlw	13
  2574  00137A  6F99               	movwf	main@tecla2& (0+255),b
  2575  00137C                     l5068:
  2576                           
  2577                           ; BSR set to: 0
  2578                           ;proyecto.c: 302: }while(tecla2!=13);
  2579  00137C  0E0D               	movlw	13
  2580  00137E  0100               	movlb	0	; () banked
  2581  001380  1999               	xorwf	main@tecla2& (0+255),w,b
  2582  001382  0100               	movlb	0	; () banked
  2583  001384  119A               	iorwf	(main@tecla2+1)& (0+255),w,b
  2584  001386  A4D8               	btfss	status,2,c
  2585  001388  D4D4               	goto	l4912
  2586  00138A                     l5070:
  2587                           
  2588                           ; BSR set to: 0
  2589                           ;proyecto.c: 303: }
  2590                           ;proyecto.c: 304: if(tecla==11){
  2591  00138A  0E0B               	movlw	11
  2592  00138C  1848               	xorwf	_tecla,w,c
  2593  00138E  1049               	iorwf	_tecla+1,w,c
  2594  001390  A4D8               	btfss	status,2,c
  2595  001392  EFAD  F004         	goto	l4776
  2596                           
  2597                           ; BSR set to: 0
  2598                           ;proyecto.c: 305: tecla=tecla2=255;
  2599  001396  0E00               	movlw	0
  2600  001398  0100               	movlb	0	; () banked
  2601  00139A  6F9A               	movwf	(main@tecla2+1)& (0+255),b
  2602  00139C  6999               	setf	main@tecla2& (0+255),b
  2603  00139E  C099  F048         	movff	main@tecla2,_tecla
  2604  0013A2  C09A  F049         	movff	main@tecla2+1,_tecla+1
  2605                           
  2606                           ; BSR set to: 0
  2607                           ;proyecto.c: 306: lcd_borrar();
  2608  0013A6  EC07  F013         	call	_lcd_borrar	;wreg free
  2609  0013AA                     l5076:
  2610                           
  2611                           ;proyecto.c: 308: duty_cycle_pwm(i);
  2612  0013AA  C09F  F06B         	movff	main@i,duty_cycle_pwm@porc_pwm
  2613  0013AE  C0A0  F06C         	movff	main@i+1,duty_cycle_pwm@porc_pwm+1
  2614  0013B2  EC91  F011         	call	_duty_cycle_pwm	;wreg free
  2615                           
  2616                           ;proyecto.c: 309: lcd_posicion(0,0);
  2617  0013B6  0E00               	movlw	0
  2618  0013B8  6E18               	movwf	lcd_posicion@b,c
  2619  0013BA  0E00               	movlw	0
  2620  0013BC  ECA8  F012         	call	_lcd_posicion
  2621                           
  2622                           ;proyecto.c: 310: sprintf(linea,"CONTROL MANUAL  ");
  2623  0013C0  0E6E               	movlw	low main@linea
  2624  0013C2  6E22               	movwf	sprintf@sp,c
  2625  0013C4  0E00               	movlw	high main@linea
  2626  0013C6  6E23               	movwf	sprintf@sp+1,c
  2627  0013C8  0EA6               	movlw	low STR_13
  2628  0013CA  6E24               	movwf	sprintf@f,c
  2629  0013CC  0E08               	movlw	high STR_13
  2630  0013CE  6E25               	movwf	sprintf@f+1,c
  2631  0013D0  ECFE  F00A         	call	_sprintf	;wreg free
  2632                           
  2633                           ;proyecto.c: 311: lcd_escribir(linea);
  2634  0013D4  0E6E               	movlw	low main@linea
  2635  0013D6  6E17               	movwf	lcd_escribir@cadena,c
  2636  0013D8  0E00               	movlw	high main@linea
  2637  0013DA  6E18               	movwf	lcd_escribir@cadena+1,c
  2638  0013DC  EC62  F012         	call	_lcd_escribir	;wreg free
  2639                           
  2640                           ;proyecto.c: 312: if(i%10==0&&(int)i/10>k){
  2641  0013E0  C09F  F016         	movff	main@i,___awmod@dividend
  2642  0013E4  C0A0  F017         	movff	main@i+1,___awmod@dividend+1
  2643  0013E8  0E00               	movlw	0
  2644  0013EA  6E19               	movwf	___awmod@divisor+1,c
  2645  0013EC  0E0A               	movlw	10
  2646  0013EE  6E18               	movwf	___awmod@divisor,c
  2647  0013F0  EC59  F011         	call	___awmod	;wreg free
  2648  0013F4  5016               	movf	?___awmod,w,c
  2649  0013F6  1017               	iorwf	?___awmod+1,w,c
  2650  0013F8  A4D8               	btfss	status,2,c
  2651  0013FA  D033               	goto	l5096
  2652  0013FC  C09F  F016         	movff	main@i,___awdiv@dividend
  2653  001400  C0A0  F017         	movff	main@i+1,___awdiv@dividend+1
  2654  001404  0E00               	movlw	0
  2655  001406  6E19               	movwf	___awdiv@divisor+1,c
  2656  001408  0E0A               	movlw	10
  2657  00140A  6E18               	movwf	___awdiv@divisor,c
  2658  00140C  ECD7  F010         	call	___awdiv	;wreg free
  2659  001410  5016               	movf	?___awdiv,w,c
  2660  001412  0100               	movlb	0	; () banked
  2661  001414  5D95               	subwf	main@k& (0+255),w,b
  2662  001416  0100               	movlb	0	; () banked
  2663  001418  5196               	movf	(main@k+1)& (0+255),w,b
  2664  00141A  0A80               	xorlw	128
  2665  00141C  0100               	movlb	0	; () banked
  2666  00141E  6F6D               	movwf	??_main& (0+255),b
  2667  001420  5017               	movf	?___awdiv+1,w,c
  2668  001422  0A80               	xorlw	128
  2669  001424  0100               	movlb	0	; () banked
  2670  001426  596D               	subwfb	??_main& (0+255),w,b
  2671  001428  B0D8               	btfsc	status,0,c
  2672  00142A  D01B               	goto	l5096
  2673                           
  2674                           ; BSR set to: 0
  2675                           ;proyecto.c: 313: lcd_posicion(1,k);
  2676  00142C  C095  F018         	movff	main@k,lcd_posicion@b
  2677  001430  0E01               	movlw	1
  2678  001432  ECA8  F012         	call	_lcd_posicion
  2679                           
  2680                           ;proyecto.c: 314: sprintf(linea2,"%c",255);
  2681  001436  0E7E               	movlw	low main@linea2
  2682  001438  6E22               	movwf	sprintf@sp,c
  2683  00143A  0E00               	movlw	high main@linea2
  2684  00143C  6E23               	movwf	sprintf@sp+1,c
  2685  00143E  0EBE               	movlw	low STR_14
  2686  001440  6E24               	movwf	sprintf@f,c
  2687  001442  0E08               	movlw	high STR_14
  2688  001444  6E25               	movwf	sprintf@f+1,c
  2689  001446  0E00               	movlw	0
  2690  001448  6E27               	movwf	?_sprintf+5,c
  2691  00144A  6826               	setf	?_sprintf+4,c
  2692  00144C  ECFE  F00A         	call	_sprintf	;wreg free
  2693                           
  2694                           ;proyecto.c: 315: lcd_escribir(linea2);
  2695  001450  0E7E               	movlw	low main@linea2
  2696  001452  6E17               	movwf	lcd_escribir@cadena,c
  2697  001454  0E00               	movlw	high main@linea2
  2698  001456  6E18               	movwf	lcd_escribir@cadena+1,c
  2699  001458  EC62  F012         	call	_lcd_escribir	;wreg free
  2700                           
  2701                           ;proyecto.c: 316: k++;
  2702  00145C  0100               	movlb	0	; () banked
  2703  00145E  4B95               	infsnz	main@k& (0+255),f,b
  2704  001460  2B96               	incf	(main@k+1)& (0+255),f,b
  2705  001462                     l5096:
  2706                           
  2707                           ;proyecto.c: 317: }
  2708                           ;proyecto.c: 318: if(i%10==0&&(int)i/10<=k&&k<10){
  2709  001462  C09F  F016         	movff	main@i,___awmod@dividend
  2710  001466  C0A0  F017         	movff	main@i+1,___awmod@dividend+1
  2711  00146A  0E00               	movlw	0
  2712  00146C  6E19               	movwf	___awmod@divisor+1,c
  2713  00146E  0E0A               	movlw	10
  2714  001470  6E18               	movwf	___awmod@divisor,c
  2715  001472  EC59  F011         	call	___awmod	;wreg free
  2716  001476  5016               	movf	?___awmod,w,c
  2717  001478  1017               	iorwf	?___awmod+1,w,c
  2718  00147A  A4D8               	btfss	status,2,c
  2719  00147C  D03F               	goto	l5110
  2720  00147E  C09F  F016         	movff	main@i,___awdiv@dividend
  2721  001482  C0A0  F017         	movff	main@i+1,___awdiv@dividend+1
  2722  001486  0E00               	movlw	0
  2723  001488  6E19               	movwf	___awdiv@divisor+1,c
  2724  00148A  0E0A               	movlw	10
  2725  00148C  6E18               	movwf	___awdiv@divisor,c
  2726  00148E  ECD7  F010         	call	___awdiv	;wreg free
  2727  001492  5016               	movf	?___awdiv,w,c
  2728  001494  0100               	movlb	0	; () banked
  2729  001496  5D95               	subwf	main@k& (0+255),w,b
  2730  001498  0100               	movlb	0	; () banked
  2731  00149A  5196               	movf	(main@k+1)& (0+255),w,b
  2732  00149C  0A80               	xorlw	128
  2733  00149E  0100               	movlb	0	; () banked
  2734  0014A0  6F6D               	movwf	??_main& (0+255),b
  2735  0014A2  5017               	movf	?___awdiv+1,w,c
  2736  0014A4  0A80               	xorlw	128
  2737  0014A6  0100               	movlb	0	; () banked
  2738  0014A8  596D               	subwfb	??_main& (0+255),w,b
  2739  0014AA  A0D8               	btfss	status,0,c
  2740  0014AC  D027               	goto	l5110
  2741                           
  2742                           ; BSR set to: 0
  2743  0014AE  0100               	movlb	0	; () banked
  2744  0014B0  BF96               	btfsc	(main@k+1)& (0+255),7,b
  2745  0014B2  D008               	goto	l5102
  2746  0014B4  0100               	movlb	0	; () banked
  2747  0014B6  5196               	movf	(main@k+1)& (0+255),w,b
  2748  0014B8  E121               	bnz	l5110
  2749  0014BA  0E0A               	movlw	10
  2750  0014BC  0100               	movlb	0	; () banked
  2751  0014BE  5D95               	subwf	main@k& (0+255),w,b
  2752  0014C0  B0D8               	btfsc	status,0,c
  2753  0014C2  D01C               	goto	l5110
  2754  0014C4                     l5102:
  2755                           
  2756                           ; BSR set to: 0
  2757                           ;proyecto.c: 319: lcd_posicion(1,k);
  2758  0014C4  C095  F018         	movff	main@k,lcd_posicion@b
  2759  0014C8  0E01               	movlw	1
  2760  0014CA  ECA8  F012         	call	_lcd_posicion
  2761                           
  2762                           ;proyecto.c: 320: sprintf(linea2,"%c",219);
  2763  0014CE  0E7E               	movlw	low main@linea2
  2764  0014D0  6E22               	movwf	sprintf@sp,c
  2765  0014D2  0E00               	movlw	high main@linea2
  2766  0014D4  6E23               	movwf	sprintf@sp+1,c
  2767  0014D6  0EBE               	movlw	low STR_14
  2768  0014D8  6E24               	movwf	sprintf@f,c
  2769  0014DA  0E08               	movlw	high STR_14
  2770  0014DC  6E25               	movwf	sprintf@f+1,c
  2771  0014DE  0E00               	movlw	0
  2772  0014E0  6E27               	movwf	?_sprintf+5,c
  2773  0014E2  0EDB               	movlw	219
  2774  0014E4  6E26               	movwf	?_sprintf+4,c
  2775  0014E6  ECFE  F00A         	call	_sprintf	;wreg free
  2776                           
  2777                           ;proyecto.c: 321: lcd_escribir(linea2);
  2778  0014EA  0E7E               	movlw	low main@linea2
  2779  0014EC  6E17               	movwf	lcd_escribir@cadena,c
  2780  0014EE  0E00               	movlw	high main@linea2
  2781  0014F0  6E18               	movwf	lcd_escribir@cadena+1,c
  2782  0014F2  EC62  F012         	call	_lcd_escribir	;wreg free
  2783                           
  2784                           ;proyecto.c: 322: k++;
  2785  0014F6  0100               	movlb	0	; () banked
  2786  0014F8  4B95               	infsnz	main@k& (0+255),f,b
  2787  0014FA  2B96               	incf	(main@k+1)& (0+255),f,b
  2788  0014FC                     l5110:
  2789                           
  2790                           ;proyecto.c: 323: }
  2791                           ;proyecto.c: 324: lcd_posicion(1,11);
  2792  0014FC  0E0B               	movlw	11
  2793  0014FE  6E18               	movwf	lcd_posicion@b,c
  2794  001500  0E01               	movlw	1
  2795  001502  ECA8  F012         	call	_lcd_posicion
  2796                           
  2797                           ;proyecto.c: 325: sprintf(linea2,"%3d%c ",i,37);
  2798  001506  0E7E               	movlw	low main@linea2
  2799  001508  6E22               	movwf	sprintf@sp,c
  2800  00150A  0E00               	movlw	high main@linea2
  2801  00150C  6E23               	movwf	sprintf@sp+1,c
  2802  00150E  0EB7               	movlw	low STR_16
  2803  001510  6E24               	movwf	sprintf@f,c
  2804  001512  0E08               	movlw	high STR_16
  2805  001514  6E25               	movwf	sprintf@f+1,c
  2806  001516  C09F  F026         	movff	main@i,?_sprintf+4
  2807  00151A  C0A0  F027         	movff	main@i+1,?_sprintf+5
  2808  00151E  0E00               	movlw	0
  2809  001520  6E29               	movwf	?_sprintf+7,c
  2810  001522  0E25               	movlw	37
  2811  001524  6E28               	movwf	?_sprintf+6,c
  2812  001526  ECFE  F00A         	call	_sprintf	;wreg free
  2813                           
  2814                           ;proyecto.c: 326: lcd_escribir(linea2);
  2815  00152A  0E7E               	movlw	low main@linea2
  2816  00152C  6E17               	movwf	lcd_escribir@cadena,c
  2817  00152E  0E00               	movlw	high main@linea2
  2818  001530  6E18               	movwf	lcd_escribir@cadena+1,c
  2819  001532  EC62  F012         	call	_lcd_escribir	;wreg free
  2820                           
  2821                           ;proyecto.c: 327: if(tecla==14){
  2822  001536  0E0E               	movlw	14
  2823  001538  1848               	xorwf	_tecla,w,c
  2824  00153A  1049               	iorwf	_tecla+1,w,c
  2825  00153C  A4D8               	btfss	status,2,c
  2826  00153E  D01A               	goto	l5122
  2827                           
  2828                           ;proyecto.c: 328: i=i-5;
  2829  001540  0EFB               	movlw	251
  2830  001542  0100               	movlb	0	; () banked
  2831  001544  259F               	addwf	main@i& (0+255),w,b
  2832  001546  0100               	movlb	0	; () banked
  2833  001548  6F9F               	movwf	main@i& (0+255),b
  2834  00154A  0EFF               	movlw	255
  2835  00154C  0100               	movlb	0	; () banked
  2836  00154E  21A0               	addwfc	(main@i+1)& (0+255),w,b
  2837  001550  0100               	movlb	0	; () banked
  2838  001552  6FA0               	movwf	(main@i+1)& (0+255),b
  2839                           
  2840                           ;proyecto.c: 329: if(i<0)
  2841  001554  0100               	movlb	0	; () banked
  2842  001556  AFA0               	btfss	(main@i+1)& (0+255),7,b
  2843  001558  D005               	goto	l219
  2844                           
  2845                           ; BSR set to: 0
  2846                           ;proyecto.c: 330: i=0;
  2847  00155A  0E00               	movlw	0
  2848  00155C  0100               	movlb	0	; () banked
  2849  00155E  6FA0               	movwf	(main@i+1)& (0+255),b
  2850  001560  0E00               	movlw	0
  2851  001562  6F9F               	movwf	main@i& (0+255),b
  2852  001564                     l219:
  2853                           
  2854                           ; BSR set to: 0
  2855                           ;proyecto.c: 331: k=0;
  2856  001564  0E00               	movlw	0
  2857  001566  0100               	movlb	0	; () banked
  2858  001568  6F96               	movwf	(main@k+1)& (0+255),b
  2859  00156A  0E00               	movlw	0
  2860  00156C  6F95               	movwf	main@k& (0+255),b
  2861                           
  2862                           ;proyecto.c: 332: tecla=255;
  2863  00156E  0E00               	movlw	0
  2864  001570  6E49               	movwf	_tecla+1,c
  2865  001572  6848               	setf	_tecla,c
  2866  001574                     l5122:
  2867                           
  2868                           ;proyecto.c: 333: }
  2869                           ;proyecto.c: 334: if(tecla==15){
  2870  001574  0E0F               	movlw	15
  2871  001576  1848               	xorwf	_tecla,w,c
  2872  001578  1049               	iorwf	_tecla+1,w,c
  2873  00157A  A4D8               	btfss	status,2,c
  2874  00157C  D022               	goto	l5128
  2875                           
  2876                           ;proyecto.c: 335: i=i+5;
  2877  00157E  0E05               	movlw	5
  2878  001580  0100               	movlb	0	; () banked
  2879  001582  259F               	addwf	main@i& (0+255),w,b
  2880  001584  0100               	movlb	0	; () banked
  2881  001586  6F9F               	movwf	main@i& (0+255),b
  2882  001588  0E00               	movlw	0
  2883  00158A  0100               	movlb	0	; () banked
  2884  00158C  21A0               	addwfc	(main@i+1)& (0+255),w,b
  2885  00158E  0100               	movlb	0	; () banked
  2886  001590  6FA0               	movwf	(main@i+1)& (0+255),b
  2887                           
  2888                           ;proyecto.c: 336: if(i>100)
  2889  001592  0100               	movlb	0	; () banked
  2890  001594  BFA0               	btfsc	(main@i+1)& (0+255),7,b
  2891  001596  D00D               	goto	l221
  2892  001598  0100               	movlb	0	; () banked
  2893  00159A  51A0               	movf	(main@i+1)& (0+255),w,b
  2894  00159C  E105               	bnz	u4820
  2895  00159E  0E65               	movlw	101
  2896  0015A0  0100               	movlb	0	; () banked
  2897  0015A2  5D9F               	subwf	main@i& (0+255),w,b
  2898  0015A4  A0D8               	btfss	status,0,c
  2899  0015A6  D005               	goto	l221
  2900  0015A8                     u4820:
  2901                           
  2902                           ; BSR set to: 0
  2903                           ;proyecto.c: 337: i=100;
  2904  0015A8  0E00               	movlw	0
  2905  0015AA  0100               	movlb	0	; () banked
  2906  0015AC  6FA0               	movwf	(main@i+1)& (0+255),b
  2907  0015AE  0E64               	movlw	100
  2908  0015B0  6F9F               	movwf	main@i& (0+255),b
  2909  0015B2                     l221:
  2910                           
  2911                           ; BSR set to: 0
  2912                           ;proyecto.c: 338: k=0;
  2913  0015B2  0E00               	movlw	0
  2914  0015B4  0100               	movlb	0	; () banked
  2915  0015B6  6F96               	movwf	(main@k+1)& (0+255),b
  2916  0015B8  0E00               	movlw	0
  2917  0015BA  6F95               	movwf	main@k& (0+255),b
  2918                           
  2919                           ;proyecto.c: 339: tecla=255;
  2920  0015BC  0E00               	movlw	0
  2921  0015BE  6E49               	movwf	_tecla+1,c
  2922  0015C0  6848               	setf	_tecla,c
  2923  0015C2                     l5128:
  2924                           
  2925                           ;proyecto.c: 340: }
  2926                           ;proyecto.c: 341: if(tecla==13||tecla==10)
  2927  0015C2  0E0D               	movlw	13
  2928  0015C4  1848               	xorwf	_tecla,w,c
  2929  0015C6  1049               	iorwf	_tecla+1,w,c
  2930  0015C8  B4D8               	btfsc	status,2,c
  2931  0015CA  D005               	goto	l5132
  2932  0015CC  0E0A               	movlw	10
  2933  0015CE  1848               	xorwf	_tecla,w,c
  2934  0015D0  1049               	iorwf	_tecla+1,w,c
  2935  0015D2  A4D8               	btfss	status,2,c
  2936  0015D4  D005               	goto	l5134
  2937  0015D6                     l5132:
  2938                           
  2939                           ;proyecto.c: 342: tecla2=13;
  2940  0015D6  0E00               	movlw	0
  2941  0015D8  0100               	movlb	0	; () banked
  2942  0015DA  6F9A               	movwf	(main@tecla2+1)& (0+255),b
  2943  0015DC  0E0D               	movlw	13
  2944  0015DE  6F99               	movwf	main@tecla2& (0+255),b
  2945  0015E0                     l5134:
  2946                           
  2947                           ;proyecto.c: 343: }while(tecla2!=13);
  2948  0015E0  0E0D               	movlw	13
  2949  0015E2  0100               	movlb	0	; () banked
  2950  0015E4  1999               	xorwf	main@tecla2& (0+255),w,b
  2951  0015E6  0100               	movlb	0	; () banked
  2952  0015E8  119A               	iorwf	(main@tecla2+1)& (0+255),w,b
  2953  0015EA  A4D8               	btfss	status,2,c
  2954  0015EC  D6DE               	goto	l5076
  2955                           
  2956                           ; BSR set to: 0
  2957                           ;proyecto.c: 344: menu=0;
  2958                           
  2959                           ; BSR set to: 0
  2960  0015EE  0E00               	movlw	0
  2961  0015F0  0100               	movlb	0	; () banked
  2962  0015F2  6FA4               	movwf	(_menu+1)& (0+255),b
  2963  0015F4  0E00               	movlw	0
  2964  0015F6  6FA3               	movwf	_menu& (0+255),b
  2965                           
  2966                           ; BSR set to: 0
  2967                           
  2968                           ; BSR set to: 0
  2969  0015F8  EFAD  F004         	goto	l4776
  2970  0015FC                     __end_of_main:
  2971                           	opt stack 0
  2972                           tblptru	equ	0xFF8
  2973                           tblptrh	equ	0xFF7
  2974                           tblptrl	equ	0xFF6
  2975                           tablat	equ	0xFF5
  2976                           intcon	equ	0xFF2
  2977                           intcon2	equ	0xFF1
  2978                           wreg	equ	0xFE8
  2979                           status	equ	0xFD8
  2980                           
  2981 ;; *************** function _sprintf *****************
  2982 ;; Defined at:
  2983 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;  sp              2   33[COMRAM] PTR unsigned char 
  2986 ;;		 -> main@linea2(16), main@linea(16), 
  2987 ;;  f               2   35[COMRAM] PTR const unsigned char 
  2988 ;;		 -> STR_16(7), STR_15(3), STR_14(3), STR_13(17), 
  2989 ;;		 -> STR_12(18), STR_11(18), STR_10(17), STR_9(17), 
  2990 ;;		 -> STR_8(17), STR_7(17), STR_6(18), STR_5(18), 
  2991 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;  tmpval          4    0        struct .
  2994 ;;  width           2   55[COMRAM] int 
  2995 ;;  val             2   53[COMRAM] unsigned int 
  2996 ;;  len             2   51[COMRAM] unsigned int 
  2997 ;;  ap              2   48[COMRAM] PTR void [1]
  2998 ;;		 -> ?_sprintf(2), 
  2999 ;;  cp              2   45[COMRAM] PTR const unsigned char 
  3000 ;;		 -> sprintf@c(1), 
  3001 ;;  c               1   57[COMRAM] char 
  3002 ;;  flag            1   50[COMRAM] unsigned char 
  3003 ;;  prec            1   47[COMRAM] char 
  3004 ;; Return value:  Size  Location     Type
  3005 ;;                  2   33[COMRAM] int 
  3006 ;; Registers used:
  3007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3013 ;;      Params:         8       0       0       0       0       0       0       0       0
  3014 ;;      Locals:        13       0       0       0       0       0       0       0       0
  3015 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3016 ;;      Totals:        25       0       0       0       0       0       0       0       0
  3017 ;;Total ram usage:       25 bytes
  3018 ;; Hardware stack levels used:    1
  3019 ;; Hardware stack levels required when called:    3
  3020 ;; This function calls:
  3021 ;;		___lwdiv
  3022 ;;		___lwmod
  3023 ;;		___wmul
  3024 ;;		_isdigit
  3025 ;; This function is called by:
  3026 ;;		_main
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           	psect	text1
  3031  0015FC                     __ptext1:
  3032                           	opt stack 0
  3033  0015FC                     _sprintf:
  3034                           	opt stack 27
  3035                           
  3036                           ;doprnt.c: 494: va_list ap;
  3037                           ;doprnt.c: 499: signed char c;
  3038                           ;doprnt.c: 501: int width;
  3039                           ;doprnt.c: 506: signed char prec;
  3040                           ;doprnt.c: 508: unsigned char flag;
  3041                           ;doprnt.c: 523: union {
  3042                           ;doprnt.c: 524: unsigned long vd;
  3043                           ;doprnt.c: 525: double integ;
  3044                           ;doprnt.c: 526: } tmpval;
  3045                           ;doprnt.c: 528: unsigned int val;
  3046                           ;doprnt.c: 529: unsigned len;
  3047                           ;doprnt.c: 530: const char * cp;
  3048                           ;doprnt.c: 533: *ap = __va_start();
  3049                           
  3050                           ; BSR set to: 0
  3051                           ;incstack = 0
  3052  0015FC  0E26               	movlw	low (?_sprintf+4)
  3053  0015FE  6E31               	movwf	sprintf@ap,c
  3054  001600  0E00               	movlw	high (?_sprintf+4)
  3055  001602  6E32               	movwf	sprintf@ap+1,c
  3056                           
  3057                           ;doprnt.c: 536: while(c = *f++) {
  3058  001604  D151               	goto	l3352
  3059  001606                     l3240:
  3060                           
  3061                           ;doprnt.c: 538: if(c != '%')
  3062  001606  0E25               	movlw	37
  3063  001608  183A               	xorwf	sprintf@c,w,c
  3064  00160A  B4D8               	btfsc	status,2,c
  3065  00160C  D009               	goto	l3246
  3066                           
  3067                           ;doprnt.c: 540: {
  3068                           ;doprnt.c: 541: ((*sp++ = (c)));
  3069  00160E  C022  FFD9         	movff	sprintf@sp,fsr2l
  3070  001612  C023  FFDA         	movff	sprintf@sp+1,fsr2h
  3071  001616  C03A  FFDF         	movff	sprintf@c,indf2
  3072  00161A  4A22               	infsnz	sprintf@sp,f,c
  3073  00161C  2A23               	incf	sprintf@sp+1,f,c
  3074                           
  3075                           ;doprnt.c: 542: continue;
  3076  00161E  D144               	goto	l3352
  3077  001620                     l3246:
  3078                           
  3079                           ;doprnt.c: 543: }
  3080                           ;doprnt.c: 546: width = 0;
  3081  001620  0E00               	movlw	0
  3082  001622  6E39               	movwf	sprintf@width+1,c
  3083  001624  0E00               	movlw	0
  3084  001626  6E38               	movwf	sprintf@width,c
  3085                           
  3086                           ;doprnt.c: 548: flag = 0;
  3087  001628  0E00               	movlw	0
  3088  00162A  6E33               	movwf	sprintf@flag,c
  3089                           
  3090                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3091  00162C  C024  FFF6         	movff	sprintf@f,tblptrl
  3092  001630  C025  FFF7         	movff	sprintf@f+1,tblptrh
  3093  001634                     	if	0	;tblptru may be non-zero
  3094  001634                     	endif
  3095  001634                     	if	0	;tblptru may be non-zero
  3096  001634                     	endif
  3097  001634  0008               	tblrd		*
  3098  001636  50F5               	movf	tablat,w,c
  3099  001638  ECF1  F012         	call	_isdigit
  3100  00163C  A0D8               	btfss	status,0,c
  3101  00163E  D07E               	goto	l3290
  3102                           
  3103                           ;doprnt.c: 598: width = 0;
  3104  001640  0E00               	movlw	0
  3105  001642  6E39               	movwf	sprintf@width+1,c
  3106  001644  0E00               	movlw	0
  3107  001646  6E38               	movwf	sprintf@width,c
  3108  001648                     l3252:
  3109                           
  3110                           ;doprnt.c: 600: width *= 10;
  3111  001648  C038  F016         	movff	sprintf@width,___wmul@multiplier
  3112  00164C  C039  F017         	movff	sprintf@width+1,___wmul@multiplier+1
  3113  001650  0E00               	movlw	0
  3114  001652  6E19               	movwf	___wmul@multiplicand+1,c
  3115  001654  0E0A               	movlw	10
  3116  001656  6E18               	movwf	___wmul@multiplicand,c
  3117  001658  ECBC  F012         	call	___wmul	;wreg free
  3118  00165C  C016  F038         	movff	?___wmul,sprintf@width
  3119  001660  C017  F039         	movff	?___wmul+1,sprintf@width+1
  3120                           
  3121                           ;doprnt.c: 601: width += *f++ - '0';
  3122  001664  0ED0               	movlw	208
  3123  001666  6E2A               	movwf	??_sprintf& (0+255),c
  3124  001668  0EFF               	movlw	255
  3125  00166A  6E2B               	movwf	(??_sprintf+1)& (0+255),c
  3126  00166C  C024  FFF6         	movff	sprintf@f,tblptrl
  3127  001670  C025  FFF7         	movff	sprintf@f+1,tblptrh
  3128  001674                     	if	0	;tblptru may be non-zero
  3129  001674                     	endif
  3130  001674                     	if	0	;tblptru may be non-zero
  3131  001674                     	endif
  3132  001674  0008               	tblrd		*
  3133  001676  50F5               	movf	tablat,w,c
  3134  001678  6E2C               	movwf	(??_sprintf+2)& (0+255),c
  3135  00167A  6A2D               	clrf	(??_sprintf+3)& (0+255),c
  3136  00167C  502A               	movf	??_sprintf,w,c
  3137  00167E  262C               	addwf	??_sprintf+2,f,c
  3138  001680  502B               	movf	??_sprintf+1,w,c
  3139  001682  222D               	addwfc	??_sprintf+3,f,c
  3140  001684  502C               	movf	??_sprintf+2,w,c
  3141  001686  2638               	addwf	sprintf@width,f,c
  3142  001688  502D               	movf	??_sprintf+3,w,c
  3143  00168A  2239               	addwfc	sprintf@width+1,f,c
  3144  00168C  4A24               	infsnz	sprintf@f,f,c
  3145  00168E  2A25               	incf	sprintf@f+1,f,c
  3146                           
  3147                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  3148  001690  C024  FFF6         	movff	sprintf@f,tblptrl
  3149  001694  C025  FFF7         	movff	sprintf@f+1,tblptrh
  3150  001698                     	if	0	;tblptru may be non-zero
  3151  001698                     	endif
  3152  001698                     	if	0	;tblptru may be non-zero
  3153  001698                     	endif
  3154  001698  0008               	tblrd		*
  3155  00169A  50F5               	movf	tablat,w,c
  3156  00169C  ECF1  F012         	call	_isdigit
  3157  0016A0  A0D8               	btfss	status,0,c
  3158  0016A2  D04C               	goto	l3290
  3159  0016A4  D7D1               	goto	l3252
  3160  0016A6                     l3260:
  3161                           
  3162                           ;doprnt.c: 757: if(width > len)
  3163  0016A6  5038               	movf	sprintf@width,w,c
  3164  0016A8  5C34               	subwf	sprintf@len,w,c
  3165  0016AA  5039               	movf	sprintf@width+1,w,c
  3166  0016AC  5835               	subwfb	sprintf@len+1,w,c
  3167  0016AE  B0D8               	btfsc	status,0,c
  3168  0016B0  D005               	goto	l3264
  3169                           
  3170                           ;doprnt.c: 758: width -= len;
  3171  0016B2  5034               	movf	sprintf@len,w,c
  3172  0016B4  5E38               	subwf	sprintf@width,f,c
  3173  0016B6  5035               	movf	sprintf@len+1,w,c
  3174  0016B8  5A39               	subwfb	sprintf@width+1,f,c
  3175  0016BA  D00D               	goto	l3270
  3176  0016BC                     l3264:
  3177                           
  3178                           ;doprnt.c: 759: else
  3179                           ;doprnt.c: 760: width = 0;
  3180  0016BC  0E00               	movlw	0
  3181  0016BE  6E39               	movwf	sprintf@width+1,c
  3182  0016C0  0E00               	movlw	0
  3183  0016C2  6E38               	movwf	sprintf@width,c
  3184                           
  3185                           ;doprnt.c: 764: while(width--)
  3186  0016C4  D008               	goto	l3270
  3187  0016C6                     l3266:
  3188                           
  3189                           ;doprnt.c: 765: ((*sp++ = (' ')));
  3190  0016C6  C022  FFD9         	movff	sprintf@sp,fsr2l
  3191  0016CA  C023  FFDA         	movff	sprintf@sp+1,fsr2h
  3192  0016CE  0E20               	movlw	32
  3193  0016D0  6EDF               	movwf	indf2,c
  3194  0016D2  4A22               	infsnz	sprintf@sp,f,c
  3195  0016D4  2A23               	incf	sprintf@sp+1,f,c
  3196  0016D6                     l3270:
  3197  0016D6  0638               	decf	sprintf@width,f,c
  3198  0016D8  A0D8               	btfss	status,0,c
  3199  0016DA  0639               	decf	sprintf@width+1,f,c
  3200  0016DC  2838               	incf	sprintf@width,w,c
  3201  0016DE  E1F3               	bnz	l3266
  3202  0016E0  2839               	incf	sprintf@width+1,w,c
  3203  0016E2  B4D8               	btfsc	status,2,c
  3204  0016E4  D00F               	goto	l3278
  3205  0016E6  D7EF               	goto	l3266
  3206  0016E8                     l3272:
  3207                           
  3208                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  3209  0016E8  C02E  FFD9         	movff	sprintf@cp,fsr2l
  3210  0016EC  C02F  FFDA         	movff	sprintf@cp+1,fsr2h
  3211  0016F0  C022  FFE1         	movff	sprintf@sp,fsr1l
  3212  0016F4  C023  FFE2         	movff	sprintf@sp+1,fsr1h
  3213  0016F8  CFDF FFE7          	movff	indf2,indf1
  3214  0016FC  4A2E               	infsnz	sprintf@cp,f,c
  3215  0016FE  2A2F               	incf	sprintf@cp+1,f,c
  3216  001700  4A22               	infsnz	sprintf@sp,f,c
  3217  001702  2A23               	incf	sprintf@sp+1,f,c
  3218  001704                     l3278:
  3219  001704  0634               	decf	sprintf@len,f,c
  3220  001706  A0D8               	btfss	status,0,c
  3221  001708  0635               	decf	sprintf@len+1,f,c
  3222  00170A  2834               	incf	sprintf@len,w,c
  3223  00170C  E1ED               	bnz	l3272
  3224  00170E  2835               	incf	sprintf@len+1,w,c
  3225  001710  B4D8               	btfsc	status,2,c
  3226  001712  D0CA               	goto	l3352
  3227  001714  D7E9               	goto	l3272
  3228  001716                     l3280:
  3229                           
  3230                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  3231  001716  C031  FFD9         	movff	sprintf@ap,fsr2l
  3232  00171A  C032  FFDA         	movff	sprintf@ap+1,fsr2h
  3233  00171E  50DF               	movf	indf2,w,c
  3234  001720  6E3A               	movwf	sprintf@c,c
  3235  001722  0E02               	movlw	2
  3236  001724  2631               	addwf	sprintf@ap,f,c
  3237  001726  0E00               	movlw	0
  3238  001728  2232               	addwfc	sprintf@ap+1,f,c
  3239  00172A                     l3284:
  3240                           
  3241                           ;doprnt.c: 805: cp = (char *)&c;
  3242  00172A  0E3A               	movlw	low sprintf@c
  3243  00172C  6E2E               	movwf	sprintf@cp,c
  3244  00172E  0E00               	movlw	high sprintf@c
  3245  001730  6E2F               	movwf	sprintf@cp+1,c
  3246                           
  3247                           ;doprnt.c: 806: len = 1;
  3248  001732  0E00               	movlw	0
  3249  001734  6E35               	movwf	sprintf@len+1,c
  3250  001736  0E01               	movlw	1
  3251  001738  6E34               	movwf	sprintf@len,c
  3252                           
  3253                           ;doprnt.c: 807: goto dostring;
  3254  00173A  D7B5               	goto	l3260
  3255  00173C                     l3290:
  3256  00173C  C024  FFF6         	movff	sprintf@f,tblptrl
  3257  001740  C025  FFF7         	movff	sprintf@f+1,tblptrh
  3258  001744  4A24               	infsnz	sprintf@f,f,c
  3259  001746  2A25               	incf	sprintf@f+1,f,c
  3260  001748                     	if	0	;tblptru may be non-zero
  3261  001748                     	endif
  3262  001748                     	if	0	;tblptru may be non-zero
  3263  001748                     	endif
  3264  001748  0008               	tblrd		*
  3265  00174A  CFF5 F03A          	movff	tablat,sprintf@c
  3266  00174E  503A               	movf	sprintf@c,w,c
  3267                           
  3268                           ; Switch size 1, requested type "space"
  3269                           ; Number of cases is 4, Range of values is 0 to 105
  3270                           ; switch strategies available:
  3271                           ; Name         Instructions Cycles
  3272                           ; simple_byte           13     7 (average)
  3273                           ;	Chosen strategy is simple_byte
  3274  001750  0A00               	xorlw	0	; case 0
  3275  001752  B4D8               	btfsc	status,2,c
  3276  001754  D0B5               	goto	l3354
  3277  001756  0A63               	xorlw	99	; case 99
  3278  001758  B4D8               	btfsc	status,2,c
  3279  00175A  D7DD               	goto	l3280
  3280  00175C  0A07               	xorlw	7	; case 100
  3281  00175E  B4D8               	btfsc	status,2,c
  3282  001760  D003               	goto	l3292
  3283  001762  0A0D               	xorlw	13	; case 105
  3284  001764  A4D8               	btfss	status,2,c
  3285  001766  D7E1               	goto	l3284
  3286  001768                     l3292:
  3287                           
  3288                           ;doprnt.c: 1253: {
  3289                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3290  001768  C031  FFD9         	movff	sprintf@ap,fsr2l
  3291  00176C  C032  FFDA         	movff	sprintf@ap+1,fsr2h
  3292  001770  CFDE F036          	movff	postinc2,sprintf@val
  3293  001774  CFDD F037          	movff	postdec2,sprintf@val+1
  3294  001778  0E02               	movlw	2
  3295  00177A  2631               	addwf	sprintf@ap,f,c
  3296  00177C  0E00               	movlw	0
  3297  00177E  2232               	addwfc	sprintf@ap+1,f,c
  3298                           
  3299                           ;doprnt.c: 1261: if((int)val < 0) {
  3300  001780  AE37               	btfss	sprintf@val+1,7,c
  3301  001782  D006               	goto	l3302
  3302                           
  3303                           ;doprnt.c: 1262: flag |= 0x03;
  3304  001784  0E03               	movlw	3
  3305  001786  1233               	iorwf	sprintf@flag,f,c
  3306                           
  3307                           ;doprnt.c: 1263: val = -val;
  3308  001788  6C36               	negf	sprintf@val,c
  3309  00178A  1E37               	comf	sprintf@val+1,f,c
  3310  00178C  B0D8               	btfsc	status,0,c
  3311  00178E  2A37               	incf	sprintf@val+1,f,c
  3312  001790                     l3302:
  3313                           
  3314                           ;doprnt.c: 1264: }
  3315                           ;doprnt.c: 1266: }
  3316                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3317  001790  0E01               	movlw	1
  3318  001792  6E3A               	movwf	sprintf@c,c
  3319  001794                     l3304:
  3320  001794  0E05               	movlw	5
  3321  001796  183A               	xorwf	sprintf@c,w,c
  3322  001798  B4D8               	btfsc	status,2,c
  3323  00179A  D012               	goto	l3316
  3324                           
  3325                           ;doprnt.c: 1306: if(val < dpowers[c])
  3326  00179C  503A               	movf	sprintf@c,w,c
  3327  00179E  0D02               	mullw	2
  3328  0017A0  0E01               	movlw	low _dpowers
  3329  0017A2  24F3               	addwf	prodl,w,c
  3330  0017A4  6EF6               	movwf	tblptrl,c
  3331  0017A6  0E08               	movlw	high _dpowers
  3332  0017A8  20F4               	addwfc	prodh,w,c
  3333  0017AA  6EF7               	movwf	tblptrh,c
  3334  0017AC                     	if	0	;There are less than 3 active tblptr bytes
  3335  0017AC                     	endif
  3336  0017AC  0009               	tblrd		*+
  3337  0017AE  50F5               	movf	tablat,w,c
  3338  0017B0  5C36               	subwf	sprintf@val,w,c
  3339  0017B2  0009               	tblrd		*+
  3340  0017B4  50F5               	movf	tablat,w,c
  3341  0017B6  5837               	subwfb	sprintf@val+1,w,c
  3342  0017B8  A0D8               	btfss	status,0,c
  3343  0017BA  D002               	goto	l3316
  3344                           
  3345                           ;doprnt.c: 1307: break;
  3346  0017BC  2A3A               	incf	sprintf@c,f,c
  3347  0017BE  D7EA               	goto	l3304
  3348  0017C0                     l3316:
  3349                           
  3350                           ;doprnt.c: 1345: if(width && flag & 0x03)
  3351  0017C0  5038               	movf	sprintf@width,w,c
  3352  0017C2  1039               	iorwf	sprintf@width+1,w,c
  3353  0017C4  B4D8               	btfsc	status,2,c
  3354  0017C6  D009               	goto	l3322
  3355  0017C8  C033  F02A         	movff	sprintf@flag,??_sprintf
  3356  0017CC  0E03               	movlw	3
  3357  0017CE  162A               	andwf	??_sprintf,f,c
  3358  0017D0  B4D8               	btfsc	status,2,c
  3359  0017D2  D003               	goto	l3322
  3360                           
  3361                           ;doprnt.c: 1346: width--;
  3362  0017D4  0638               	decf	sprintf@width,f,c
  3363  0017D6  A0D8               	btfss	status,0,c
  3364  0017D8  0639               	decf	sprintf@width+1,f,c
  3365  0017DA                     l3322:
  3366                           
  3367                           ;doprnt.c: 1381: if(width > c)
  3368  0017DA  0E80               	movlw	128
  3369  0017DC  BE3A               	btfsc	sprintf@c,7,c
  3370  0017DE  0E7F               	movlw	127
  3371  0017E0  6E2A               	movwf	??_sprintf& (0+255),c
  3372  0017E2  5038               	movf	sprintf@width,w,c
  3373  0017E4  5C3A               	subwf	sprintf@c,w,c
  3374  0017E6  5039               	movf	sprintf@width+1,w,c
  3375  0017E8  0A80               	xorlw	128
  3376  0017EA  582A               	subwfb	??_sprintf& (0+255),w,c
  3377  0017EC  B0D8               	btfsc	status,0,c
  3378  0017EE  D007               	goto	l3326
  3379                           
  3380                           ;doprnt.c: 1382: width -= c;
  3381  0017F0  503A               	movf	sprintf@c,w,c
  3382  0017F2  5E38               	subwf	sprintf@width,f,c
  3383  0017F4  0E00               	movlw	0
  3384  0017F6  BE3A               	btfsc	sprintf@c,7,c
  3385  0017F8  0EFF               	movlw	255
  3386  0017FA  5A39               	subwfb	sprintf@width+1,f,c
  3387  0017FC  D004               	goto	l3328
  3388  0017FE                     l3326:
  3389                           
  3390                           ;doprnt.c: 1383: else
  3391                           ;doprnt.c: 1384: width = 0;
  3392  0017FE  0E00               	movlw	0
  3393  001800  6E39               	movwf	sprintf@width+1,c
  3394  001802  0E00               	movlw	0
  3395  001804  6E38               	movwf	sprintf@width,c
  3396  001806                     l3328:
  3397                           
  3398                           ;doprnt.c: 1422: {
  3399                           ;doprnt.c: 1424: if(width
  3400                           ;doprnt.c: 1428: )
  3401  001806  5038               	movf	sprintf@width,w,c
  3402  001808  1039               	iorwf	sprintf@width+1,w,c
  3403  00180A  B4D8               	btfsc	status,2,c
  3404  00180C  D00F               	goto	l3336
  3405  00180E                     l3330:
  3406                           
  3407                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  3408  00180E  C022  FFD9         	movff	sprintf@sp,fsr2l
  3409  001812  C023  FFDA         	movff	sprintf@sp+1,fsr2h
  3410  001816  0E20               	movlw	32
  3411  001818  6EDF               	movwf	indf2,c
  3412  00181A  4A22               	infsnz	sprintf@sp,f,c
  3413  00181C  2A23               	incf	sprintf@sp+1,f,c
  3414                           
  3415                           ;doprnt.c: 1431: while(--width);
  3416  00181E  0638               	decf	sprintf@width,f,c
  3417  001820  A0D8               	btfss	status,0,c
  3418  001822  0639               	decf	sprintf@width+1,f,c
  3419  001824  5038               	movf	sprintf@width,w,c
  3420  001826  1039               	iorwf	sprintf@width+1,w,c
  3421  001828  A4D8               	btfss	status,2,c
  3422  00182A  D7F1               	goto	l3330
  3423  00182C                     l3336:
  3424                           
  3425                           ;doprnt.c: 1438: if(flag & 0x03)
  3426  00182C  C033  F02A         	movff	sprintf@flag,??_sprintf
  3427  001830  0E03               	movlw	3
  3428  001832  162A               	andwf	??_sprintf,f,c
  3429  001834  B4D8               	btfsc	status,2,c
  3430  001836  D008               	goto	l3342
  3431                           
  3432                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  3433  001838  C022  FFD9         	movff	sprintf@sp,fsr2l
  3434  00183C  C023  FFDA         	movff	sprintf@sp+1,fsr2h
  3435  001840  0E2D               	movlw	45
  3436  001842  6EDF               	movwf	indf2,c
  3437  001844  4A22               	infsnz	sprintf@sp,f,c
  3438  001846  2A23               	incf	sprintf@sp+1,f,c
  3439  001848                     l3342:
  3440                           
  3441                           ;doprnt.c: 1469: }
  3442                           ;doprnt.c: 1472: prec = c;
  3443  001848  C03A  F030         	movff	sprintf@c,sprintf@prec
  3444                           
  3445                           ;doprnt.c: 1474: while(prec--) {
  3446  00184C  D029               	goto	l3350
  3447  00184E                     l3344:
  3448                           
  3449                           ;doprnt.c: 1478: {
  3450                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3451  00184E  5030               	movf	sprintf@prec,w,c
  3452  001850  0D02               	mullw	2
  3453  001852  0E01               	movlw	low _dpowers
  3454  001854  24F3               	addwf	prodl,w,c
  3455  001856  6EF6               	movwf	tblptrl,c
  3456  001858  0E08               	movlw	high _dpowers
  3457  00185A  20F4               	addwfc	prodh,w,c
  3458  00185C  6EF7               	movwf	tblptrh,c
  3459  00185E                     	if	0	;There are less than 3 active tblptr bytes
  3460  00185E                     	endif
  3461  00185E  0009               	tblrd		*+
  3462  001860  CFF5 F018          	movff	tablat,___lwdiv@divisor
  3463  001864  000A               	tblrd		*-
  3464  001866  CFF5 F019          	movff	tablat,___lwdiv@divisor+1
  3465  00186A  C036  F016         	movff	sprintf@val,___lwdiv@dividend
  3466  00186E  C037  F017         	movff	sprintf@val+1,___lwdiv@dividend+1
  3467  001872  ECC0  F011         	call	___lwdiv	;wreg free
  3468  001876  C016  F01D         	movff	?___lwdiv,___lwmod@dividend
  3469  00187A  C017  F01E         	movff	?___lwdiv+1,___lwmod@dividend+1
  3470  00187E  0E00               	movlw	0
  3471  001880  6E20               	movwf	___lwmod@divisor+1,c
  3472  001882  0E0A               	movlw	10
  3473  001884  6E1F               	movwf	___lwmod@divisor,c
  3474  001886  EC0B  F012         	call	___lwmod	;wreg free
  3475  00188A  501D               	movf	?___lwmod,w,c
  3476  00188C  0F30               	addlw	48
  3477  00188E  6E3A               	movwf	sprintf@c,c
  3478                           
  3479                           ;doprnt.c: 1523: }
  3480                           ;doprnt.c: 1524: ((*sp++ = (c)));
  3481  001890  C022  FFD9         	movff	sprintf@sp,fsr2l
  3482  001894  C023  FFDA         	movff	sprintf@sp+1,fsr2h
  3483  001898  C03A  FFDF         	movff	sprintf@c,indf2
  3484  00189C  4A22               	infsnz	sprintf@sp,f,c
  3485  00189E  2A23               	incf	sprintf@sp+1,f,c
  3486  0018A0                     l3350:
  3487  0018A0  0630               	decf	sprintf@prec,f,c
  3488  0018A2  2830               	incf	sprintf@prec,w,c
  3489  0018A4  A4D8               	btfss	status,2,c
  3490  0018A6  D7D3               	goto	l3344
  3491  0018A8                     l3352:
  3492  0018A8  C024  FFF6         	movff	sprintf@f,tblptrl
  3493  0018AC  C025  FFF7         	movff	sprintf@f+1,tblptrh
  3494  0018B0  4A24               	infsnz	sprintf@f,f,c
  3495  0018B2  2A25               	incf	sprintf@f+1,f,c
  3496  0018B4                     	if	0	;tblptru may be non-zero
  3497  0018B4                     	endif
  3498  0018B4                     	if	0	;tblptru may be non-zero
  3499  0018B4                     	endif
  3500  0018B4  0008               	tblrd		*
  3501  0018B6  CFF5 F03A          	movff	tablat,sprintf@c
  3502  0018BA  503A               	movf	sprintf@c,w,c
  3503  0018BC  A4D8               	btfss	status,2,c
  3504  0018BE  D6A3               	goto	l3240
  3505  0018C0                     l3354:
  3506                           
  3507                           ;doprnt.c: 1538: *sp = 0;
  3508  0018C0  C022  FFD9         	movff	sprintf@sp,fsr2l
  3509  0018C4  C023  FFDA         	movff	sprintf@sp+1,fsr2h
  3510  0018C8  0E00               	movlw	0
  3511  0018CA  6EDF               	movwf	indf2,c
  3512  0018CC  0012               	return	
  3513  0018CE                     __end_of_sprintf:
  3514                           	opt stack 0
  3515                           tblptru	equ	0xFF8
  3516                           tblptrh	equ	0xFF7
  3517                           tblptrl	equ	0xFF6
  3518                           tablat	equ	0xFF5
  3519                           prodh	equ	0xFF4
  3520                           prodl	equ	0xFF3
  3521                           intcon	equ	0xFF2
  3522                           intcon2	equ	0xFF1
  3523                           wreg	equ	0xFE8
  3524                           indf1	equ	0xFE7
  3525                           fsr1h	equ	0xFE2
  3526                           fsr1l	equ	0xFE1
  3527                           indf2	equ	0xFDF
  3528                           postinc2	equ	0xFDE
  3529                           postdec2	equ	0xFDD
  3530                           fsr2h	equ	0xFDA
  3531                           fsr2l	equ	0xFD9
  3532                           status	equ	0xFD8
  3533                           
  3534 ;; *************** function _isdigit *****************
  3535 ;; Defined at:
  3536 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;  c               1    wreg     unsigned char 
  3539 ;; Auto vars:     Size  Location     Type
  3540 ;;  c               1   23[COMRAM] unsigned char 
  3541 ;; Return value:  Size  Location     Type
  3542 ;;		None               void
  3543 ;; Registers used:
  3544 ;;		wreg, status,2, status,0
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3550 ;;      Params:         0       0       0       0       0       0       0       0       0
  3551 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3552 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3553 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3554 ;;Total ram usage:        3 bytes
  3555 ;; Hardware stack levels used:    1
  3556 ;; Hardware stack levels required when called:    2
  3557 ;; This function calls:
  3558 ;;		Nothing
  3559 ;; This function is called by:
  3560 ;;		_sprintf
  3561 ;; This function uses a non-reentrant model
  3562 ;;
  3563                           
  3564                           	psect	text2
  3565  0025E2                     __ptext2:
  3566                           	opt stack 0
  3567  0025E2                     _isdigit:
  3568                           	opt stack 27
  3569                           
  3570                           ;incstack = 0
  3571                           ;isdigit@c stored from wreg
  3572  0025E2  6E18               	movwf	isdigit@c,c
  3573  0025E4  0E00               	movlw	0
  3574  0025E6  6E17               	movwf	_isdigit$997,c
  3575  0025E8  0E3A               	movlw	58
  3576  0025EA  6018               	cpfslt	isdigit@c,c
  3577  0025EC  D005               	goto	l2752
  3578  0025EE  0E2F               	movlw	47
  3579  0025F0  6418               	cpfsgt	isdigit@c,c
  3580  0025F2  D002               	goto	l2752
  3581  0025F4  0E01               	movlw	1
  3582  0025F6  6E17               	movwf	_isdigit$997,c
  3583  0025F8                     l2752:
  3584  0025F8  C017  F016         	movff	_isdigit$997,??_isdigit
  3585  0025FC  3016               	rrcf	??_isdigit,w,c
  3586  0025FE  0012               	return	
  3587  002600                     __end_of_isdigit:
  3588                           	opt stack 0
  3589                           tblptru	equ	0xFF8
  3590                           tblptrh	equ	0xFF7
  3591                           tblptrl	equ	0xFF6
  3592                           tablat	equ	0xFF5
  3593                           prodh	equ	0xFF4
  3594                           prodl	equ	0xFF3
  3595                           intcon	equ	0xFF2
  3596                           intcon2	equ	0xFF1
  3597                           wreg	equ	0xFE8
  3598                           indf1	equ	0xFE7
  3599                           fsr1h	equ	0xFE2
  3600                           fsr1l	equ	0xFE1
  3601                           indf2	equ	0xFDF
  3602                           postinc2	equ	0xFDE
  3603                           postdec2	equ	0xFDD
  3604                           fsr2h	equ	0xFDA
  3605                           fsr2l	equ	0xFD9
  3606                           status	equ	0xFD8
  3607                           
  3608 ;; *************** function ___wmul *****************
  3609 ;; Defined at:
  3610 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;  multiplier      2   21[COMRAM] unsigned int 
  3613 ;;  multiplicand    2   23[COMRAM] unsigned int 
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;  product         2   25[COMRAM] unsigned int 
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  2   21[COMRAM] unsigned int 
  3618 ;; Registers used:
  3619 ;;		wreg, status,2, status,0, prodl, prodh
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3625 ;;      Params:         4       0       0       0       0       0       0       0       0
  3626 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3627 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3628 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3629 ;;Total ram usage:        6 bytes
  3630 ;; Hardware stack levels used:    1
  3631 ;; Hardware stack levels required when called:    2
  3632 ;; This function calls:
  3633 ;;		Nothing
  3634 ;; This function is called by:
  3635 ;;		_main
  3636 ;;		_sprintf
  3637 ;; This function uses a non-reentrant model
  3638 ;;
  3639                           
  3640                           	psect	text3
  3641  002578                     __ptext3:
  3642                           	opt stack 0
  3643  002578                     ___wmul:
  3644                           	opt stack 27
  3645                           
  3646                           ;incstack = 0
  3647  002578  5016               	movf	___wmul@multiplier,w,c
  3648  00257A  0218               	mulwf	___wmul@multiplicand,c
  3649  00257C  CFF3 F01A          	movff	prodl,___wmul@product
  3650  002580  CFF4 F01B          	movff	prodh,___wmul@product+1
  3651  002584  5016               	movf	___wmul@multiplier,w,c
  3652  002586  0219               	mulwf	___wmul@multiplicand+1,c
  3653  002588  50F3               	movf	prodl,w,c
  3654  00258A  261B               	addwf	___wmul@product+1,f,c
  3655  00258C  5017               	movf	___wmul@multiplier+1,w,c
  3656  00258E  0218               	mulwf	___wmul@multiplicand,c
  3657  002590  50F3               	movf	prodl,w,c
  3658  002592  261B               	addwf	___wmul@product+1,f,c
  3659  002594  C01A  F016         	movff	___wmul@product,?___wmul
  3660  002598  C01B  F017         	movff	___wmul@product+1,?___wmul+1
  3661  00259C  0012               	return	
  3662  00259E                     __end_of___wmul:
  3663                           	opt stack 0
  3664                           tblptru	equ	0xFF8
  3665                           tblptrh	equ	0xFF7
  3666                           tblptrl	equ	0xFF6
  3667                           tablat	equ	0xFF5
  3668                           prodh	equ	0xFF4
  3669                           prodl	equ	0xFF3
  3670                           intcon	equ	0xFF2
  3671                           intcon2	equ	0xFF1
  3672                           wreg	equ	0xFE8
  3673                           indf1	equ	0xFE7
  3674                           fsr1h	equ	0xFE2
  3675                           fsr1l	equ	0xFE1
  3676                           indf2	equ	0xFDF
  3677                           postinc2	equ	0xFDE
  3678                           postdec2	equ	0xFDD
  3679                           fsr2h	equ	0xFDA
  3680                           fsr2l	equ	0xFD9
  3681                           status	equ	0xFD8
  3682                           
  3683 ;; *************** function ___lwmod *****************
  3684 ;; Defined at:
  3685 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;  dividend        2   28[COMRAM] unsigned int 
  3688 ;;  divisor         2   30[COMRAM] unsigned int 
  3689 ;; Auto vars:     Size  Location     Type
  3690 ;;  counter         1   32[COMRAM] unsigned char 
  3691 ;; Return value:  Size  Location     Type
  3692 ;;                  2   28[COMRAM] unsigned int 
  3693 ;; Registers used:
  3694 ;;		wreg, status,2, status,0
  3695 ;; Tracked objects:
  3696 ;;		On entry : 0/0
  3697 ;;		On exit  : 0/0
  3698 ;;		Unchanged: 0/0
  3699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3700 ;;      Params:         4       0       0       0       0       0       0       0       0
  3701 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3702 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3703 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3704 ;;Total ram usage:        5 bytes
  3705 ;; Hardware stack levels used:    1
  3706 ;; Hardware stack levels required when called:    2
  3707 ;; This function calls:
  3708 ;;		Nothing
  3709 ;; This function is called by:
  3710 ;;		_sprintf
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713                           
  3714                           	psect	text4
  3715  002416                     __ptext4:
  3716                           	opt stack 0
  3717  002416                     ___lwmod:
  3718                           	opt stack 27
  3719                           
  3720                           ;incstack = 0
  3721  002416  501F               	movf	___lwmod@divisor,w,c
  3722  002418  1020               	iorwf	___lwmod@divisor+1,w,c
  3723  00241A  B4D8               	btfsc	status,2,c
  3724  00241C  D018               	goto	l695
  3725  00241E  0E01               	movlw	1
  3726  002420  6E21               	movwf	___lwmod@counter,c
  3727  002422  D004               	goto	l2896
  3728  002424                     l2894:
  3729  002424  90D8               	bcf	status,0,c
  3730  002426  361F               	rlcf	___lwmod@divisor,f,c
  3731  002428  3620               	rlcf	___lwmod@divisor+1,f,c
  3732  00242A  2A21               	incf	___lwmod@counter,f,c
  3733  00242C                     l2896:
  3734  00242C  AE20               	btfss	___lwmod@divisor+1,7,c
  3735  00242E  D7FA               	goto	l2894
  3736  002430                     l2898:
  3737  002430  501F               	movf	___lwmod@divisor,w,c
  3738  002432  5C1D               	subwf	___lwmod@dividend,w,c
  3739  002434  5020               	movf	___lwmod@divisor+1,w,c
  3740  002436  581E               	subwfb	___lwmod@dividend+1,w,c
  3741  002438  A0D8               	btfss	status,0,c
  3742  00243A  D004               	goto	l2902
  3743  00243C  501F               	movf	___lwmod@divisor,w,c
  3744  00243E  5E1D               	subwf	___lwmod@dividend,f,c
  3745  002440  5020               	movf	___lwmod@divisor+1,w,c
  3746  002442  5A1E               	subwfb	___lwmod@dividend+1,f,c
  3747  002444                     l2902:
  3748  002444  90D8               	bcf	status,0,c
  3749  002446  3220               	rrcf	___lwmod@divisor+1,f,c
  3750  002448  321F               	rrcf	___lwmod@divisor,f,c
  3751  00244A  2E21               	decfsz	___lwmod@counter,f,c
  3752  00244C  D7F1               	goto	l2898
  3753  00244E                     l695:
  3754  00244E  C01D  F01D         	movff	___lwmod@dividend,?___lwmod
  3755  002452  C01E  F01E         	movff	___lwmod@dividend+1,?___lwmod+1
  3756  002456  0012               	return		;funcret
  3757  002458                     __end_of___lwmod:
  3758                           	opt stack 0
  3759                           tblptru	equ	0xFF8
  3760                           tblptrh	equ	0xFF7
  3761                           tblptrl	equ	0xFF6
  3762                           tablat	equ	0xFF5
  3763                           prodh	equ	0xFF4
  3764                           prodl	equ	0xFF3
  3765                           intcon	equ	0xFF2
  3766                           intcon2	equ	0xFF1
  3767                           wreg	equ	0xFE8
  3768                           indf1	equ	0xFE7
  3769                           fsr1h	equ	0xFE2
  3770                           fsr1l	equ	0xFE1
  3771                           indf2	equ	0xFDF
  3772                           postinc2	equ	0xFDE
  3773                           postdec2	equ	0xFDD
  3774                           fsr2h	equ	0xFDA
  3775                           fsr2l	equ	0xFD9
  3776                           status	equ	0xFD8
  3777                           
  3778 ;; *************** function ___lwdiv *****************
  3779 ;; Defined at:
  3780 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;  dividend        2   21[COMRAM] unsigned int 
  3783 ;;  divisor         2   23[COMRAM] unsigned int 
  3784 ;; Auto vars:     Size  Location     Type
  3785 ;;  quotient        2   25[COMRAM] unsigned int 
  3786 ;;  counter         1   27[COMRAM] unsigned char 
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  2   21[COMRAM] unsigned int 
  3789 ;; Registers used:
  3790 ;;		wreg, status,2, status,0
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3796 ;;      Params:         4       0       0       0       0       0       0       0       0
  3797 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3798 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3799 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3800 ;;Total ram usage:        7 bytes
  3801 ;; Hardware stack levels used:    1
  3802 ;; Hardware stack levels required when called:    2
  3803 ;; This function calls:
  3804 ;;		Nothing
  3805 ;; This function is called by:
  3806 ;;		_sprintf
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           
  3810                           	psect	text5
  3811  002380                     __ptext5:
  3812                           	opt stack 0
  3813  002380                     ___lwdiv:
  3814                           	opt stack 27
  3815                           
  3816                           ;incstack = 0
  3817  002380  0E00               	movlw	0
  3818  002382  6E1B               	movwf	___lwdiv@quotient+1,c
  3819  002384  0E00               	movlw	0
  3820  002386  6E1A               	movwf	___lwdiv@quotient,c
  3821  002388  5018               	movf	___lwdiv@divisor,w,c
  3822  00238A  1019               	iorwf	___lwdiv@divisor+1,w,c
  3823  00238C  B4D8               	btfsc	status,2,c
  3824  00238E  D01C               	goto	l685
  3825  002390  0E01               	movlw	1
  3826  002392  6E1C               	movwf	___lwdiv@counter,c
  3827  002394  D004               	goto	l2876
  3828  002396                     l2874:
  3829  002396  90D8               	bcf	status,0,c
  3830  002398  3618               	rlcf	___lwdiv@divisor,f,c
  3831  00239A  3619               	rlcf	___lwdiv@divisor+1,f,c
  3832  00239C  2A1C               	incf	___lwdiv@counter,f,c
  3833  00239E                     l2876:
  3834  00239E  AE19               	btfss	___lwdiv@divisor+1,7,c
  3835  0023A0  D7FA               	goto	l2874
  3836  0023A2                     l2878:
  3837  0023A2  90D8               	bcf	status,0,c
  3838  0023A4  361A               	rlcf	___lwdiv@quotient,f,c
  3839  0023A6  361B               	rlcf	___lwdiv@quotient+1,f,c
  3840  0023A8  5018               	movf	___lwdiv@divisor,w,c
  3841  0023AA  5C16               	subwf	___lwdiv@dividend,w,c
  3842  0023AC  5019               	movf	___lwdiv@divisor+1,w,c
  3843  0023AE  5817               	subwfb	___lwdiv@dividend+1,w,c
  3844  0023B0  A0D8               	btfss	status,0,c
  3845  0023B2  D005               	goto	l2886
  3846  0023B4  5018               	movf	___lwdiv@divisor,w,c
  3847  0023B6  5E16               	subwf	___lwdiv@dividend,f,c
  3848  0023B8  5019               	movf	___lwdiv@divisor+1,w,c
  3849  0023BA  5A17               	subwfb	___lwdiv@dividend+1,f,c
  3850  0023BC  801A               	bsf	___lwdiv@quotient,0,c
  3851  0023BE                     l2886:
  3852  0023BE  90D8               	bcf	status,0,c
  3853  0023C0  3219               	rrcf	___lwdiv@divisor+1,f,c
  3854  0023C2  3218               	rrcf	___lwdiv@divisor,f,c
  3855  0023C4  2E1C               	decfsz	___lwdiv@counter,f,c
  3856  0023C6  D7ED               	goto	l2878
  3857  0023C8                     l685:
  3858  0023C8  C01A  F016         	movff	___lwdiv@quotient,?___lwdiv
  3859  0023CC  C01B  F017         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3860  0023D0  0012               	return		;funcret
  3861  0023D2                     __end_of___lwdiv:
  3862                           	opt stack 0
  3863                           tblptru	equ	0xFF8
  3864                           tblptrh	equ	0xFF7
  3865                           tblptrl	equ	0xFF6
  3866                           tablat	equ	0xFF5
  3867                           prodh	equ	0xFF4
  3868                           prodl	equ	0xFF3
  3869                           intcon	equ	0xFF2
  3870                           intcon2	equ	0xFF1
  3871                           wreg	equ	0xFE8
  3872                           indf1	equ	0xFE7
  3873                           fsr1h	equ	0xFE2
  3874                           fsr1l	equ	0xFE1
  3875                           indf2	equ	0xFDF
  3876                           postinc2	equ	0xFDE
  3877                           postdec2	equ	0xFDD
  3878                           fsr2h	equ	0xFDA
  3879                           fsr2l	equ	0xFD9
  3880                           status	equ	0xFD8
  3881                           
  3882 ;; *************** function _lcd_posicion *****************
  3883 ;; Defined at:
  3884 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\include\lcd8e.h"
  3885 ;; Parameters:    Size  Location     Type
  3886 ;;  a               1    wreg     unsigned char 
  3887 ;;  b               1   23[COMRAM] unsigned char 
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;  a               1   24[COMRAM] unsigned char 
  3890 ;;  direccion       1   25[COMRAM] unsigned char 
  3891 ;; Return value:  Size  Location     Type
  3892 ;;		None               void
  3893 ;; Registers used:
  3894 ;;		wreg, status,2, status,0, cstack
  3895 ;; Tracked objects:
  3896 ;;		On entry : 0/0
  3897 ;;		On exit  : 0/0
  3898 ;;		Unchanged: 0/0
  3899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3900 ;;      Params:         1       0       0       0       0       0       0       0       0
  3901 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3902 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3903 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3904 ;;Total ram usage:        3 bytes
  3905 ;; Hardware stack levels used:    1
  3906 ;; Hardware stack levels required when called:    3
  3907 ;; This function calls:
  3908 ;;		_lcd_comando
  3909 ;; This function is called by:
  3910 ;;		_main
  3911 ;; This function uses a non-reentrant model
  3912 ;;
  3913                           
  3914                           	psect	text6
  3915  002550                     __ptext6:
  3916                           	opt stack 0
  3917  002550                     _lcd_posicion:
  3918                           	opt stack 27
  3919                           
  3920                           ;incstack = 0
  3921                           ;lcd_posicion@a stored from wreg
  3922  002550  6E19               	movwf	lcd_posicion@a,c
  3923                           
  3924                           ;lcd8e.h: 75: char direccion;
  3925                           ;lcd8e.h: 76: if (b>63)
  3926  002552  0E3F               	movlw	63
  3927  002554  6418               	cpfsgt	lcd_posicion@b,c
  3928  002556  D002               	goto	l84
  3929                           
  3930                           ;lcd8e.h: 77: b=63;
  3931  002558  0E3F               	movlw	63
  3932  00255A  6E18               	movwf	lcd_posicion@b,c
  3933  00255C                     l84:
  3934                           
  3935                           ;lcd8e.h: 78: if (a==0)
  3936  00255C  5019               	movf	lcd_posicion@a,w,c
  3937  00255E  A4D8               	btfss	status,2,c
  3938  002560  D003               	goto	l2968
  3939                           
  3940                           ;lcd8e.h: 79: direccion=b;
  3941  002562  C018  F01A         	movff	lcd_posicion@b,lcd_posicion@direccion
  3942  002566  D003               	goto	l2970
  3943  002568                     l2968:
  3944                           
  3945                           ;lcd8e.h: 80: else
  3946                           ;lcd8e.h: 81: direccion=0x40 | b;
  3947  002568  5018               	movf	lcd_posicion@b,w,c
  3948  00256A  0940               	iorlw	64
  3949  00256C  6E1A               	movwf	lcd_posicion@direccion,c
  3950  00256E                     l2970:
  3951                           
  3952                           ;lcd8e.h: 82: direccion |= 0x80;
  3953  00256E  8E1A               	bsf	lcd_posicion@direccion,7,c
  3954                           
  3955                           ;lcd8e.h: 83: lcd_comando(direccion);
  3956  002570  501A               	movf	lcd_posicion@direccion,w,c
  3957  002572  EC48  F012         	call	_lcd_comando
  3958  002576  0012               	return		;funcret
  3959  002578                     __end_of_lcd_posicion:
  3960                           	opt stack 0
  3961                           tblptru	equ	0xFF8
  3962                           tblptrh	equ	0xFF7
  3963                           tblptrl	equ	0xFF6
  3964                           tablat	equ	0xFF5
  3965                           prodh	equ	0xFF4
  3966                           prodl	equ	0xFF3
  3967                           intcon	equ	0xFF2
  3968                           intcon2	equ	0xFF1
  3969                           wreg	equ	0xFE8
  3970                           indf1	equ	0xFE7
  3971                           fsr1h	equ	0xFE2
  3972                           fsr1l	equ	0xFE1
  3973                           indf2	equ	0xFDF
  3974                           postinc2	equ	0xFDE
  3975                           postdec2	equ	0xFDD
  3976                           fsr2h	equ	0xFDA
  3977                           fsr2l	equ	0xFD9
  3978                           status	equ	0xFD8
  3979                           
  3980 ;; *************** function _lcd_inicializar *****************
  3981 ;; Defined at:
  3982 ;;		line 50 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\include\lcd8e.h"
  3983 ;; Parameters:    Size  Location     Type
  3984 ;;		None
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;  i               2   24[COMRAM] int 
  3987 ;; Return value:  Size  Location     Type
  3988 ;;		None               void
  3989 ;; Registers used:
  3990 ;;		wreg, status,2, status,0, cstack
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : 0/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3996 ;;      Params:         0       0       0       0       0       0       0       0       0
  3997 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3998 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3999 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4000 ;;Total ram usage:        3 bytes
  4001 ;; Hardware stack levels used:    1
  4002 ;; Hardware stack levels required when called:    3
  4003 ;; This function calls:
  4004 ;;		_lcd_comando
  4005 ;; This function is called by:
  4006 ;;		_main
  4007 ;; This function uses a non-reentrant model
  4008 ;;
  4009                           
  4010                           	psect	text7
  4011  002232                     __ptext7:
  4012                           	opt stack 0
  4013  002232                     _lcd_inicializar:
  4014                           	opt stack 27
  4015                           
  4016                           ;lcd8e.h: 52: int i;
  4017                           ;lcd8e.h: 53: TRISD=0X00;
  4018                           
  4019                           ;incstack = 0
  4020  002232  0E00               	movlw	0
  4021  002234  6E95               	movwf	3989,c	;volatile
  4022                           
  4023                           ;lcd8e.h: 54: TRISEbits.RE0=0;
  4024  002236  9096               	bcf	3990,0,c	;volatile
  4025                           
  4026                           ;lcd8e.h: 55: TRISEbits.RE1=0;
  4027  002238  9296               	bcf	3990,1,c	;volatile
  4028                           
  4029                           ;lcd8e.h: 56: TRISEbits.RE2=0;
  4030  00223A  9496               	bcf	3990,2,c	;volatile
  4031                           
  4032                           ;lcd8e.h: 57: for (i=0;i<=9;i++)
  4033  00223C  0E00               	movlw	0
  4034  00223E  6E1A               	movwf	lcd_inicializar@i+1,c
  4035  002240  0E00               	movlw	0
  4036  002242  6E19               	movwf	lcd_inicializar@i,c
  4037  002244                     l2936:
  4038  002244  BE1A               	btfsc	lcd_inicializar@i+1,7,c
  4039  002246  D006               	goto	l2940
  4040  002248  501A               	movf	lcd_inicializar@i+1,w,c
  4041  00224A  E10E               	bnz	l2944
  4042  00224C  0E0A               	movlw	10
  4043  00224E  5C19               	subwf	lcd_inicializar@i,w,c
  4044  002250  B0D8               	btfsc	status,0,c
  4045  002252  D00A               	goto	l2944
  4046  002254                     l2940:
  4047                           
  4048                           ;lcd8e.h: 58: {
  4049                           ;lcd8e.h: 59: _delay((unsigned long)((2)*(20000000/4000.0)));
  4050  002254  0E0D               	movlw	13
  4051  002256  6E18               	movwf	??_lcd_inicializar& (0+255),c
  4052  002258  0EFC               	movlw	252
  4053  00225A                     u4887:
  4054  00225A  2EE8               	decfsz	wreg,f,c
  4055  00225C  D7FE               	goto	u4887
  4056  00225E  2E18               	decfsz	??_lcd_inicializar& (0+255),f,c
  4057  002260  D7FC               	goto	u4887
  4058  002262  4A19               	infsnz	lcd_inicializar@i,f,c
  4059  002264  2A1A               	incf	lcd_inicializar@i+1,f,c
  4060  002266  D7EE               	goto	l2936
  4061  002268                     l2944:
  4062                           
  4063                           ;lcd8e.h: 60: }
  4064                           ;lcd8e.h: 61: lcd_comando(0x30);
  4065  002268  0E30               	movlw	48
  4066  00226A  EC48  F012         	call	_lcd_comando
  4067                           
  4068                           ;lcd8e.h: 62: _delay((unsigned long)((5)*(20000000/4000.0)));
  4069  00226E  0E21               	movlw	33
  4070  002270  6E18               	movwf	??_lcd_inicializar& (0+255),c
  4071  002272  0E76               	movlw	118
  4072  002274                     u4897:
  4073  002274  2EE8               	decfsz	wreg,f,c
  4074  002276  D7FE               	goto	u4897
  4075  002278  2E18               	decfsz	??_lcd_inicializar& (0+255),f,c
  4076  00227A  D7FC               	goto	u4897
  4077  00227C  D000               	nop2	
  4078                           
  4079                           ;lcd8e.h: 63: lcd_comando(0x30);
  4080  00227E  0E30               	movlw	48
  4081  002280  EC48  F012         	call	_lcd_comando
  4082                           
  4083                           ;lcd8e.h: 64: _delay((unsigned long)((100)*(20000000/4000000.0)));
  4084  002284  0EA6               	movlw	166
  4085  002286                     u4907:
  4086  002286  2EE8               	decfsz	wreg,f,c
  4087  002288  D7FE               	goto	u4907
  4088  00228A  D000               	nop2		;nop
  4089                           
  4090                           ;lcd8e.h: 65: lcd_comando(0x30);
  4091  00228C  0E30               	movlw	48
  4092  00228E  EC48  F012         	call	_lcd_comando
  4093                           
  4094                           ;lcd8e.h: 66: lcd_comando(0x38);
  4095  002292  0E38               	movlw	56
  4096  002294  EC48  F012         	call	_lcd_comando
  4097                           
  4098                           ;lcd8e.h: 67: lcd_comando(0x08);
  4099  002298  0E08               	movlw	8
  4100  00229A  EC48  F012         	call	_lcd_comando
  4101                           
  4102                           ;lcd8e.h: 68: lcd_comando(0x01);
  4103  00229E  0E01               	movlw	1
  4104  0022A0  EC48  F012         	call	_lcd_comando
  4105                           
  4106                           ;lcd8e.h: 69: lcd_comando(0x06);
  4107  0022A4  0E06               	movlw	6
  4108  0022A6  EC48  F012         	call	_lcd_comando
  4109                           
  4110                           ;lcd8e.h: 70: lcd_comando(0x0C);
  4111  0022AA  0E0C               	movlw	12
  4112  0022AC  EC48  F012         	call	_lcd_comando
  4113  0022B0  0012               	return		;funcret
  4114  0022B2                     __end_of_lcd_inicializar:
  4115                           	opt stack 0
  4116                           tblptru	equ	0xFF8
  4117                           tblptrh	equ	0xFF7
  4118                           tblptrl	equ	0xFF6
  4119                           tablat	equ	0xFF5
  4120                           prodh	equ	0xFF4
  4121                           prodl	equ	0xFF3
  4122                           intcon	equ	0xFF2
  4123                           intcon2	equ	0xFF1
  4124                           wreg	equ	0xFE8
  4125                           indf1	equ	0xFE7
  4126                           fsr1h	equ	0xFE2
  4127                           fsr1l	equ	0xFE1
  4128                           indf2	equ	0xFDF
  4129                           postinc2	equ	0xFDE
  4130                           postdec2	equ	0xFDD
  4131                           fsr2h	equ	0xFDA
  4132                           fsr2l	equ	0xFD9
  4133                           status	equ	0xFD8
  4134                           
  4135 ;; *************** function _lcd_escribir *****************
  4136 ;; Defined at:
  4137 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\include\lcd8e.h"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;  cadena          2   22[COMRAM] PTR unsigned char 
  4140 ;;		 -> main@linea2(16), main@linea(16), 
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;  i               2   24[COMRAM] int 
  4143 ;; Return value:  Size  Location     Type
  4144 ;;		None               void
  4145 ;; Registers used:
  4146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4152 ;;      Params:         2       0       0       0       0       0       0       0       0
  4153 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4154 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4155 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4156 ;;Total ram usage:        4 bytes
  4157 ;; Hardware stack levels used:    1
  4158 ;; Hardware stack levels required when called:    3
  4159 ;; This function calls:
  4160 ;;		_lcd_dato
  4161 ;; This function is called by:
  4162 ;;		_main
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           	psect	text8
  4167  0024C4                     __ptext8:
  4168                           	opt stack 0
  4169  0024C4                     _lcd_escribir:
  4170                           	opt stack 27
  4171                           
  4172                           ;lcd8e.h: 88: int i;
  4173                           ;lcd8e.h: 89: for (i=0;i<=15;i++)
  4174                           
  4175                           ;incstack = 0
  4176  0024C4  0E00               	movlw	0
  4177  0024C6  6E1A               	movwf	lcd_escribir@i+1,c
  4178  0024C8  0E00               	movlw	0
  4179  0024CA  6E19               	movwf	lcd_escribir@i,c
  4180  0024CC                     l2976:
  4181  0024CC  BE1A               	btfsc	lcd_escribir@i+1,7,c
  4182  0024CE  D006               	goto	l2980
  4183  0024D0  501A               	movf	lcd_escribir@i+1,w,c
  4184  0024D2  E110               	bnz	l92
  4185  0024D4  0E10               	movlw	16
  4186  0024D6  5C19               	subwf	lcd_escribir@i,w,c
  4187  0024D8  B0D8               	btfsc	status,0,c
  4188  0024DA  0012               	return	
  4189  0024DC                     l2980:
  4190                           
  4191                           ;lcd8e.h: 90: {
  4192                           ;lcd8e.h: 91: lcd_dato(cadena[i]);
  4193  0024DC  5019               	movf	lcd_escribir@i,w,c
  4194  0024DE  2417               	addwf	lcd_escribir@cadena,w,c
  4195  0024E0  6ED9               	movwf	fsr2l,c
  4196  0024E2  501A               	movf	lcd_escribir@i+1,w,c
  4197  0024E4  2018               	addwfc	lcd_escribir@cadena+1,w,c
  4198  0024E6  6EDA               	movwf	fsr2h,c
  4199  0024E8  50DF               	movf	indf2,w,c
  4200  0024EA  ECE1  F012         	call	_lcd_dato
  4201  0024EE  4A19               	infsnz	lcd_escribir@i,f,c
  4202  0024F0  2A1A               	incf	lcd_escribir@i+1,f,c
  4203  0024F2  D7EC               	goto	l2976
  4204  0024F4                     l92:
  4205  0024F4  0012               	return		;funcret
  4206  0024F6                     __end_of_lcd_escribir:
  4207                           	opt stack 0
  4208                           tblptru	equ	0xFF8
  4209                           tblptrh	equ	0xFF7
  4210                           tblptrl	equ	0xFF6
  4211                           tablat	equ	0xFF5
  4212                           prodh	equ	0xFF4
  4213                           prodl	equ	0xFF3
  4214                           intcon	equ	0xFF2
  4215                           intcon2	equ	0xFF1
  4216                           wreg	equ	0xFE8
  4217                           indf1	equ	0xFE7
  4218                           fsr1h	equ	0xFE2
  4219                           fsr1l	equ	0xFE1
  4220                           indf2	equ	0xFDF
  4221                           postinc2	equ	0xFDE
  4222                           postdec2	equ	0xFDD
  4223                           fsr2h	equ	0xFDA
  4224                           fsr2l	equ	0xFD9
  4225                           status	equ	0xFD8
  4226                           
  4227 ;; *************** function _lcd_dato *****************
  4228 ;; Defined at:
  4229 ;;		line 37 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\include\lcd8e.h"
  4230 ;; Parameters:    Size  Location     Type
  4231 ;;  dato2           1    wreg     unsigned char 
  4232 ;; Auto vars:     Size  Location     Type
  4233 ;;  dato2           1   21[COMRAM] unsigned char 
  4234 ;; Return value:  Size  Location     Type
  4235 ;;		None               void
  4236 ;; Registers used:
  4237 ;;		wreg
  4238 ;; Tracked objects:
  4239 ;;		On entry : 0/0
  4240 ;;		On exit  : 0/0
  4241 ;;		Unchanged: 0/0
  4242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4243 ;;      Params:         0       0       0       0       0       0       0       0       0
  4244 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4245 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4246 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4247 ;;Total ram usage:        1 bytes
  4248 ;; Hardware stack levels used:    1
  4249 ;; Hardware stack levels required when called:    2
  4250 ;; This function calls:
  4251 ;;		Nothing
  4252 ;; This function is called by:
  4253 ;;		_lcd_escribir
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257                           	psect	text9
  4258  0025C2                     __ptext9:
  4259                           	opt stack 0
  4260  0025C2                     _lcd_dato:
  4261                           	opt stack 27
  4262                           
  4263                           ;incstack = 0
  4264                           ;lcd_dato@dato2 stored from wreg
  4265  0025C2  6E16               	movwf	lcd_dato@dato2,c
  4266                           
  4267                           ;lcd8e.h: 39: PORTD=dato2;
  4268  0025C4  C016  FF83         	movff	lcd_dato@dato2,3971	;volatile
  4269                           
  4270                           ;lcd8e.h: 40: PORTEbits.RE2=0;
  4271  0025C8  9484               	bcf	3972,2,c	;volatile
  4272                           
  4273                           ;lcd8e.h: 41: PORTEbits.RE0=1;
  4274  0025CA  8084               	bsf	3972,0,c	;volatile
  4275                           
  4276                           ;lcd8e.h: 42: PORTEbits.RE1=1;
  4277  0025CC  8284               	bsf	3972,1,c	;volatile
  4278                           
  4279                           ;lcd8e.h: 43: _delay((unsigned long)((10)*(20000000/4000000.0)));
  4280  0025CE  0E10               	movlw	16
  4281  0025D0                     u4917:
  4282  0025D0  2EE8               	decfsz	wreg,f,c
  4283  0025D2  D7FE               	goto	u4917
  4284  0025D4  D000               	nop2		;nop
  4285                           
  4286                           ;lcd8e.h: 44: PORTEbits.RE1=0;
  4287  0025D6  9284               	bcf	3972,1,c	;volatile
  4288                           
  4289                           ;lcd8e.h: 45: _delay((unsigned long)((40)*(20000000/4000000.0)));
  4290  0025D8  0E42               	movlw	66
  4291  0025DA                     u4927:
  4292  0025DA  2EE8               	decfsz	wreg,f,c
  4293  0025DC  D7FE               	goto	u4927
  4294  0025DE  D000               	nop2		;nop
  4295  0025E0  0012               	return		;funcret
  4296  0025E2                     __end_of_lcd_dato:
  4297                           	opt stack 0
  4298                           tblptru	equ	0xFF8
  4299                           tblptrh	equ	0xFF7
  4300                           tblptrl	equ	0xFF6
  4301                           tablat	equ	0xFF5
  4302                           prodh	equ	0xFF4
  4303                           prodl	equ	0xFF3
  4304                           intcon	equ	0xFF2
  4305                           intcon2	equ	0xFF1
  4306                           wreg	equ	0xFE8
  4307                           indf1	equ	0xFE7
  4308                           fsr1h	equ	0xFE2
  4309                           fsr1l	equ	0xFE1
  4310                           indf2	equ	0xFDF
  4311                           postinc2	equ	0xFDE
  4312                           postdec2	equ	0xFDD
  4313                           fsr2h	equ	0xFDA
  4314                           fsr2l	equ	0xFD9
  4315                           status	equ	0xFD8
  4316                           
  4317 ;; *************** function _lcd_cursor *****************
  4318 ;; Defined at:
  4319 ;;		line 95 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\include\lcd8e.h"
  4320 ;; Parameters:    Size  Location     Type
  4321 ;;  blinking        1    wreg     unsigned char 
  4322 ;;  cursor          1   23[COMRAM] unsigned char 
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;  blinking        1   24[COMRAM] unsigned char 
  4325 ;; Return value:  Size  Location     Type
  4326 ;;		None               void
  4327 ;; Registers used:
  4328 ;;		wreg, status,2, status,0, cstack
  4329 ;; Tracked objects:
  4330 ;;		On entry : 0/0
  4331 ;;		On exit  : 0/0
  4332 ;;		Unchanged: 0/0
  4333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4334 ;;      Params:         1       0       0       0       0       0       0       0       0
  4335 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4336 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4337 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4338 ;;Total ram usage:        2 bytes
  4339 ;; Hardware stack levels used:    1
  4340 ;; Hardware stack levels required when called:    3
  4341 ;; This function calls:
  4342 ;;		_lcd_comando
  4343 ;; This function is called by:
  4344 ;;		_main
  4345 ;; This function uses a non-reentrant model
  4346 ;;
  4347                           
  4348                           	psect	text10
  4349  002600                     __ptext10:
  4350                           	opt stack 0
  4351  002600                     _lcd_cursor:
  4352                           	opt stack 27
  4353                           
  4354                           ;incstack = 0
  4355                           ;lcd_cursor@blinking stored from wreg
  4356  002600  6E19               	movwf	lcd_cursor@blinking,c
  4357                           
  4358                           ;lcd8e.h: 97: blinking|=cursor;
  4359  002602  5018               	movf	lcd_cursor@cursor,w,c
  4360  002604  1219               	iorwf	lcd_cursor@blinking,f,c
  4361                           
  4362                           ;lcd8e.h: 98: lcd_comando(blinking);
  4363  002606  5019               	movf	lcd_cursor@blinking,w,c
  4364  002608  EC48  F012         	call	_lcd_comando
  4365  00260C  0012               	return		;funcret
  4366  00260E                     __end_of_lcd_cursor:
  4367                           	opt stack 0
  4368                           tblptru	equ	0xFF8
  4369                           tblptrh	equ	0xFF7
  4370                           tblptrl	equ	0xFF6
  4371                           tablat	equ	0xFF5
  4372                           prodh	equ	0xFF4
  4373                           prodl	equ	0xFF3
  4374                           intcon	equ	0xFF2
  4375                           intcon2	equ	0xFF1
  4376                           wreg	equ	0xFE8
  4377                           indf1	equ	0xFE7
  4378                           fsr1h	equ	0xFE2
  4379                           fsr1l	equ	0xFE1
  4380                           indf2	equ	0xFDF
  4381                           postinc2	equ	0xFDE
  4382                           postdec2	equ	0xFDD
  4383                           fsr2h	equ	0xFDA
  4384                           fsr2l	equ	0xFD9
  4385                           status	equ	0xFD8
  4386                           
  4387 ;; *************** function _lcd_borrar *****************
  4388 ;; Defined at:
  4389 ;;		line 102 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\include\lcd8e.h"
  4390 ;; Parameters:    Size  Location     Type
  4391 ;;		None
  4392 ;; Auto vars:     Size  Location     Type
  4393 ;;		None
  4394 ;; Return value:  Size  Location     Type
  4395 ;;		None               void
  4396 ;; Registers used:
  4397 ;;		wreg, status,2, status,0, cstack
  4398 ;; Tracked objects:
  4399 ;;		On entry : 0/0
  4400 ;;		On exit  : 0/0
  4401 ;;		Unchanged: 0/0
  4402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4403 ;;      Params:         0       0       0       0       0       0       0       0       0
  4404 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4405 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4406 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4407 ;;Total ram usage:        0 bytes
  4408 ;; Hardware stack levels used:    1
  4409 ;; Hardware stack levels required when called:    3
  4410 ;; This function calls:
  4411 ;;		_lcd_comando
  4412 ;; This function is called by:
  4413 ;;		_main
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           
  4417                           	psect	text11
  4418  00260E                     __ptext11:
  4419                           	opt stack 0
  4420  00260E                     _lcd_borrar:
  4421                           	opt stack 27
  4422                           
  4423                           ;lcd8e.h: 104: lcd_comando(0x01);
  4424                           
  4425                           ;incstack = 0
  4426  00260E  0E01               	movlw	1
  4427  002610  EC48  F012         	call	_lcd_comando
  4428  002614  0012               	return		;funcret
  4429  002616                     __end_of_lcd_borrar:
  4430                           	opt stack 0
  4431                           tblptru	equ	0xFF8
  4432                           tblptrh	equ	0xFF7
  4433                           tblptrl	equ	0xFF6
  4434                           tablat	equ	0xFF5
  4435                           prodh	equ	0xFF4
  4436                           prodl	equ	0xFF3
  4437                           intcon	equ	0xFF2
  4438                           intcon2	equ	0xFF1
  4439                           wreg	equ	0xFE8
  4440                           indf1	equ	0xFE7
  4441                           fsr1h	equ	0xFE2
  4442                           fsr1l	equ	0xFE1
  4443                           indf2	equ	0xFDF
  4444                           postinc2	equ	0xFDE
  4445                           postdec2	equ	0xFDD
  4446                           fsr2h	equ	0xFDA
  4447                           fsr2l	equ	0xFD9
  4448                           status	equ	0xFD8
  4449                           
  4450 ;; *************** function _lcd_comando *****************
  4451 ;; Defined at:
  4452 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\include\lcd8e.h"
  4453 ;; Parameters:    Size  Location     Type
  4454 ;;  dato            1    wreg     unsigned char 
  4455 ;; Auto vars:     Size  Location     Type
  4456 ;;  dato            1   22[COMRAM] unsigned char 
  4457 ;; Return value:  Size  Location     Type
  4458 ;;		None               void
  4459 ;; Registers used:
  4460 ;;		wreg, status,2, status,0
  4461 ;; Tracked objects:
  4462 ;;		On entry : 0/0
  4463 ;;		On exit  : 0/0
  4464 ;;		Unchanged: 0/0
  4465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4466 ;;      Params:         0       0       0       0       0       0       0       0       0
  4467 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4468 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4469 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4470 ;;Total ram usage:        2 bytes
  4471 ;; Hardware stack levels used:    1
  4472 ;; Hardware stack levels required when called:    2
  4473 ;; This function calls:
  4474 ;;		Nothing
  4475 ;; This function is called by:
  4476 ;;		_lcd_inicializar
  4477 ;;		_lcd_posicion
  4478 ;;		_lcd_cursor
  4479 ;;		_lcd_borrar
  4480 ;; This function uses a non-reentrant model
  4481 ;;
  4482                           
  4483                           	psect	text12
  4484  002490                     __ptext12:
  4485                           	opt stack 0
  4486  002490                     _lcd_comando:
  4487                           	opt stack 27
  4488                           
  4489                           ;incstack = 0
  4490                           ;lcd_comando@dato stored from wreg
  4491  002490  6E17               	movwf	lcd_comando@dato,c
  4492                           
  4493                           ;lcd8e.h: 24: PORTD=dato;
  4494  002492  C017  FF83         	movff	lcd_comando@dato,3971	;volatile
  4495                           
  4496                           ;lcd8e.h: 25: PORTEbits.RE2=0;
  4497  002496  9484               	bcf	3972,2,c	;volatile
  4498                           
  4499                           ;lcd8e.h: 26: PORTEbits.RE0=0;
  4500  002498  9084               	bcf	3972,0,c	;volatile
  4501                           
  4502                           ;lcd8e.h: 27: PORTEbits.RE1=1;
  4503  00249A  8284               	bsf	3972,1,c	;volatile
  4504                           
  4505                           ;lcd8e.h: 28: _delay((unsigned long)((10)*(20000000/4000000.0)));
  4506  00249C  0E10               	movlw	16
  4507  00249E                     u4937:
  4508  00249E  2EE8               	decfsz	wreg,f,c
  4509  0024A0  D7FE               	goto	u4937
  4510  0024A2  D000               	nop2		;nop
  4511                           
  4512                           ;lcd8e.h: 29: PORTEbits.RE1=0;
  4513  0024A4  9284               	bcf	3972,1,c	;volatile
  4514                           
  4515                           ;lcd8e.h: 30: if (dato<=3)
  4516  0024A6  0E04               	movlw	4
  4517  0024A8  6017               	cpfslt	lcd_comando@dato,c
  4518  0024AA  D008               	goto	l2728
  4519                           
  4520                           ;lcd8e.h: 31: _delay((unsigned long)((2)*(20000000/4000.0)));
  4521  0024AC  0E0D               	movlw	13
  4522  0024AE  6E16               	movwf	??_lcd_comando& (0+255),c
  4523  0024B0  0EFC               	movlw	252
  4524  0024B2                     u4947:
  4525  0024B2  2EE8               	decfsz	wreg,f,c
  4526  0024B4  D7FE               	goto	u4947
  4527  0024B6  2E16               	decfsz	??_lcd_comando& (0+255),f,c
  4528  0024B8  D7FC               	goto	u4947
  4529  0024BA  0012               	return	
  4530  0024BC                     l2728:
  4531                           
  4532                           ;lcd8e.h: 32: else
  4533                           ;lcd8e.h: 33: _delay((unsigned long)((90)*(20000000/4000000.0)));
  4534  0024BC  0E96               	movlw	150
  4535  0024BE                     u4957:
  4536  0024BE  2EE8               	decfsz	wreg,f,c
  4537  0024C0  D7FE               	goto	u4957
  4538  0024C2  0012               	return	
  4539  0024C4                     __end_of_lcd_comando:
  4540                           	opt stack 0
  4541                           tblptru	equ	0xFF8
  4542                           tblptrh	equ	0xFF7
  4543                           tblptrl	equ	0xFF6
  4544                           tablat	equ	0xFF5
  4545                           prodh	equ	0xFF4
  4546                           prodl	equ	0xFF3
  4547                           intcon	equ	0xFF2
  4548                           intcon2	equ	0xFF1
  4549                           wreg	equ	0xFE8
  4550                           indf1	equ	0xFE7
  4551                           fsr1h	equ	0xFE2
  4552                           fsr1l	equ	0xFE1
  4553                           indf2	equ	0xFDF
  4554                           postinc2	equ	0xFDE
  4555                           postdec2	equ	0xFDD
  4556                           fsr2h	equ	0xFDA
  4557                           fsr2l	equ	0xFD9
  4558                           status	equ	0xFD8
  4559                           
  4560 ;; *************** function _duty_cycle_pwm *****************
  4561 ;; Defined at:
  4562 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\include\pwm_2.h"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;  porc_pwm        2   11[BANK0 ] int 
  4565 ;; Auto vars:     Size  Location     Type
  4566 ;;  val_pwm         2   69[COMRAM] unsigned int 
  4567 ;; Return value:  Size  Location     Type
  4568 ;;		None               void
  4569 ;; Registers used:
  4570 ;;		wreg, status,2, status,0, cstack
  4571 ;; Tracked objects:
  4572 ;;		On entry : 0/0
  4573 ;;		On exit  : 0/0
  4574 ;;		Unchanged: 0/0
  4575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4576 ;;      Params:         0       2       0       0       0       0       0       0       0
  4577 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4578 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4579 ;;      Totals:         4       2       0       0       0       0       0       0       0
  4580 ;;Total ram usage:        6 bytes
  4581 ;; Hardware stack levels used:    1
  4582 ;; Hardware stack levels required when called:    4
  4583 ;; This function calls:
  4584 ;;		___awtoft
  4585 ;;		___ftmul
  4586 ;;		___fttol
  4587 ;; This function is called by:
  4588 ;;		_main
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           
  4592                           	psect	text13
  4593  002322                     __ptext13:
  4594                           	opt stack 0
  4595  002322                     _duty_cycle_pwm:
  4596                           	opt stack 26
  4597                           
  4598                           ;pwm_2.h: 32: unsigned int val_pwm;
  4599                           ;pwm_2.h: 35: val_pwm=6.24*porc_pwm;
  4600                           
  4601                           ;incstack = 0
  4602  002322  0EAE               	movlw	174
  4603  002324  6E34               	movwf	___ftmul@f2,c
  4604  002326  0EC7               	movlw	199
  4605  002328  6E35               	movwf	___ftmul@f2+1,c
  4606  00232A  0E40               	movlw	64
  4607  00232C  6E36               	movwf	___ftmul@f2+2,c
  4608  00232E  C06B  F01E         	movff	duty_cycle_pwm@porc_pwm,___awtoft@c
  4609  002332  C06C  F01F         	movff	duty_cycle_pwm@porc_pwm+1,___awtoft@c+1
  4610  002336  EC2C  F012         	call	___awtoft	;wreg free
  4611  00233A  C01E  F031         	movff	?___awtoft,___ftmul@f1
  4612  00233E  C01F  F032         	movff	?___awtoft+1,___ftmul@f1+1
  4613  002342  C020  F033         	movff	?___awtoft+2,___ftmul@f1+2
  4614  002346  EC3C  F00F         	call	___ftmul	;wreg free
  4615  00234A  C031  F040         	movff	?___ftmul,___fttol@f1
  4616  00234E  C032  F041         	movff	?___ftmul+1,___fttol@f1+1
  4617  002352  C033  F042         	movff	?___ftmul+2,___fttol@f1+2
  4618  002356  EC1A  F00E         	call	___fttol	;wreg free
  4619  00235A  C040  F046         	movff	?___fttol,duty_cycle_pwm@val_pwm
  4620  00235E  C041  F047         	movff	?___fttol+1,duty_cycle_pwm@val_pwm+1
  4621                           
  4622                           ;pwm_2.h: 36: CCPR2L=val_pwm>>2;
  4623  002362  C046  F044         	movff	duty_cycle_pwm@val_pwm,??_duty_cycle_pwm
  4624  002366  C047  F045         	movff	duty_cycle_pwm@val_pwm+1,??_duty_cycle_pwm+1
  4625  00236A  90D8               	bcf	status,0,c
  4626  00236C  3245               	rrcf	??_duty_cycle_pwm+1,f,c
  4627  00236E  3244               	rrcf	??_duty_cycle_pwm,f,c
  4628  002370  90D8               	bcf	status,0,c
  4629  002372  3245               	rrcf	??_duty_cycle_pwm+1,f,c
  4630  002374  3244               	rrcf	??_duty_cycle_pwm,f,c
  4631  002376  5044               	movf	??_duty_cycle_pwm,w,c
  4632  002378  6EBB               	movwf	4027,c	;volatile
  4633                           
  4634                           ;pwm_2.h: 37: CCP2CONbits.DC2B1=(val_pwm,1);
  4635  00237A  8ABA               	bsf	4026,5,c	;volatile
  4636                           
  4637                           ;pwm_2.h: 38: CCP2CONbits.DC2B1=(val_pwm,0);
  4638  00237C  9ABA               	bcf	4026,5,c	;volatile
  4639  00237E  0012               	return		;funcret
  4640  002380                     __end_of_duty_cycle_pwm:
  4641                           	opt stack 0
  4642                           tblptru	equ	0xFF8
  4643                           tblptrh	equ	0xFF7
  4644                           tblptrl	equ	0xFF6
  4645                           tablat	equ	0xFF5
  4646                           prodh	equ	0xFF4
  4647                           prodl	equ	0xFF3
  4648                           intcon	equ	0xFF2
  4649                           intcon2	equ	0xFF1
  4650                           wreg	equ	0xFE8
  4651                           indf1	equ	0xFE7
  4652                           fsr1h	equ	0xFE2
  4653                           fsr1l	equ	0xFE1
  4654                           indf2	equ	0xFDF
  4655                           postinc2	equ	0xFDE
  4656                           postdec2	equ	0xFDD
  4657                           fsr2h	equ	0xFDA
  4658                           fsr2l	equ	0xFD9
  4659                           status	equ	0xFD8
  4660                           
  4661 ;; *************** function ___fttol *****************
  4662 ;; Defined at:
  4663 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fttol.c"
  4664 ;; Parameters:    Size  Location     Type
  4665 ;;  f1              3   63[COMRAM] float 
  4666 ;; Auto vars:     Size  Location     Type
  4667 ;;  lval            4    6[BANK0 ] unsigned long 
  4668 ;;  exp1            1   10[BANK0 ] unsigned char 
  4669 ;;  sign1           1    5[BANK0 ] unsigned char 
  4670 ;; Return value:  Size  Location     Type
  4671 ;;                  4   63[COMRAM] long 
  4672 ;; Registers used:
  4673 ;;		wreg, status,2, status,0
  4674 ;; Tracked objects:
  4675 ;;		On entry : 0/0
  4676 ;;		On exit  : 0/0
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4679 ;;      Params:         4       0       0       0       0       0       0       0       0
  4680 ;;      Locals:         0       6       0       0       0       0       0       0       0
  4681 ;;      Temps:          0       5       0       0       0       0       0       0       0
  4682 ;;      Totals:         4      11       0       0       0       0       0       0       0
  4683 ;;Total ram usage:       15 bytes
  4684 ;; Hardware stack levels used:    1
  4685 ;; Hardware stack levels required when called:    2
  4686 ;; This function calls:
  4687 ;;		Nothing
  4688 ;; This function is called by:
  4689 ;;		_duty_cycle_pwm
  4690 ;;		_main
  4691 ;; This function uses a non-reentrant model
  4692 ;;
  4693                           
  4694                           	psect	text14
  4695  001C34                     __ptext14:
  4696                           	opt stack 0
  4697  001C34                     ___fttol:
  4698                           	opt stack 27
  4699                           
  4700                           ;incstack = 0
  4701  001C34  C042  F060         	movff	___fttol@f1+2,??___fttol
  4702  001C38  0100               	movlb	0	; () banked
  4703  001C3A  6B61               	clrf	(??___fttol+1)& (0+255),b
  4704  001C3C  6B62               	clrf	(??___fttol+2)& (0+255),b
  4705  001C3E  3441               	rlcf	___fttol@f1+1,w,c
  4706  001C40  0100               	movlb	0	; () banked
  4707  001C42  3760               	rlcf	??___fttol& (0+255),f,b
  4708  001C44  E301               	bnc	u3881
  4709  001C46  8161               	bsf	(??___fttol+1)& (0+255),0,b
  4710  001C48                     u3881:
  4711  001C48  0100               	movlb	0	; () banked
  4712  001C4A  5160               	movf	??___fttol& (0+255),w,b
  4713  001C4C  0100               	movlb	0	; () banked
  4714  001C4E  6F6A               	movwf	___fttol@exp1& (0+255),b
  4715  001C50  0100               	movlb	0	; () banked
  4716  001C52  516A               	movf	___fttol@exp1& (0+255),w,b
  4717  001C54  A4D8               	btfss	status,2,c
  4718  001C56  D009               	goto	l4558
  4719                           
  4720                           ; BSR set to: 0
  4721  001C58  0E00               	movlw	0
  4722  001C5A  6E40               	movwf	?___fttol,c
  4723  001C5C  0E00               	movlw	0
  4724  001C5E  6E41               	movwf	?___fttol+1,c
  4725  001C60  0E00               	movlw	0
  4726  001C62  6E42               	movwf	?___fttol+2,c
  4727  001C64  0E00               	movlw	0
  4728  001C66  6E43               	movwf	?___fttol+3,c
  4729                           
  4730                           ; BSR set to: 0
  4731  001C68  0012               	return	
  4732  001C6A                     l4558:
  4733                           
  4734                           ; BSR set to: 0
  4735  001C6A  0E17               	movlw	23
  4736  001C6C  0100               	movlb	0	; () banked
  4737  001C6E  6F60               	movwf	??___fttol& (0+255),b
  4738  001C70  C040  F061         	movff	___fttol@f1,??___fttol+1
  4739  001C74  C041  F062         	movff	___fttol@f1+1,??___fttol+2
  4740  001C78  C042  F063         	movff	___fttol@f1+2,??___fttol+3
  4741  001C7C  0100               	movlb	0	; () banked
  4742  001C7E  2960               	incf	??___fttol& (0+255),w,b
  4743  001C80  0100               	movlb	0	; () banked
  4744  001C82  6F64               	movwf	(??___fttol+4)& (0+255),b
  4745  001C84  D005               	goto	u3900
  4746  001C86                     u3905:
  4747  001C86  0100               	movlb	0	; () banked
  4748  001C88  90D8               	bcf	status,0,c
  4749  001C8A  3363               	rrcf	(??___fttol+3)& (0+255),f,b
  4750  001C8C  3362               	rrcf	(??___fttol+2)& (0+255),f,b
  4751  001C8E  3361               	rrcf	(??___fttol+1)& (0+255),f,b
  4752  001C90                     u3900:
  4753  001C90  0100               	movlb	0	; () banked
  4754  001C92  2F64               	decfsz	(??___fttol+4)& (0+255),f,b
  4755  001C94  D7F8               	goto	u3905
  4756  001C96  0100               	movlb	0	; () banked
  4757  001C98  5161               	movf	(??___fttol+1)& (0+255),w,b
  4758  001C9A  0100               	movlb	0	; () banked
  4759  001C9C  6F65               	movwf	___fttol@sign1& (0+255),b
  4760                           
  4761                           ; BSR set to: 0
  4762  001C9E  8E41               	bsf	___fttol@f1+1,7,c
  4763                           
  4764                           ; BSR set to: 0
  4765  001CA0  0EFF               	movlw	255
  4766  001CA2  1640               	andwf	___fttol@f1,f,c
  4767  001CA4  0EFF               	movlw	255
  4768  001CA6  1641               	andwf	___fttol@f1+1,f,c
  4769  001CA8  0E00               	movlw	0
  4770  001CAA  1642               	andwf	___fttol@f1+2,f,c
  4771                           
  4772                           ; BSR set to: 0
  4773  001CAC  5040               	movf	___fttol@f1,w,c
  4774  001CAE  0100               	movlb	0	; () banked
  4775  001CB0  6F66               	movwf	___fttol@lval& (0+255),b
  4776  001CB2  5041               	movf	___fttol@f1+1,w,c
  4777  001CB4  0100               	movlb	0	; () banked
  4778  001CB6  6F67               	movwf	(___fttol@lval+1)& (0+255),b
  4779  001CB8  5042               	movf	___fttol@f1+2,w,c
  4780  001CBA  0100               	movlb	0	; () banked
  4781  001CBC  6F68               	movwf	(___fttol@lval+2)& (0+255),b
  4782  001CBE  0100               	movlb	0	; () banked
  4783  001CC0  6B69               	clrf	(___fttol@lval+3)& (0+255),b
  4784                           
  4785                           ; BSR set to: 0
  4786  001CC2  0E8E               	movlw	142
  4787  001CC4  0100               	movlb	0	; () banked
  4788  001CC6  5F6A               	subwf	___fttol@exp1& (0+255),f,b
  4789                           
  4790                           ; BSR set to: 0
  4791  001CC8  0100               	movlb	0	; () banked
  4792  001CCA  AF6A               	btfss	___fttol@exp1& (0+255),7,b
  4793  001CCC  D019               	goto	l4580
  4794                           
  4795                           ; BSR set to: 0
  4796  001CCE  0100               	movlb	0	; () banked
  4797  001CD0  516A               	movf	___fttol@exp1& (0+255),w,b
  4798  001CD2  0A80               	xorlw	128
  4799  001CD4  0F8F               	addlw	143
  4800  001CD6  B0D8               	btfsc	status,0,c
  4801  001CD8  D009               	goto	l4576
  4802                           
  4803                           ; BSR set to: 0
  4804  001CDA  0E00               	movlw	0
  4805  001CDC  6E40               	movwf	?___fttol,c
  4806  001CDE  0E00               	movlw	0
  4807  001CE0  6E41               	movwf	?___fttol+1,c
  4808  001CE2  0E00               	movlw	0
  4809  001CE4  6E42               	movwf	?___fttol+2,c
  4810  001CE6  0E00               	movlw	0
  4811  001CE8  6E43               	movwf	?___fttol+3,c
  4812                           
  4813                           ; BSR set to: 0
  4814  001CEA  0012               	return	
  4815  001CEC                     l4576:
  4816                           
  4817                           ; BSR set to: 0
  4818  001CEC  0100               	movlb	0	; () banked
  4819  001CEE  90D8               	bcf	status,0,c
  4820  001CF0  3369               	rrcf	(___fttol@lval+3)& (0+255),f,b
  4821  001CF2  3368               	rrcf	(___fttol@lval+2)& (0+255),f,b
  4822  001CF4  3367               	rrcf	(___fttol@lval+1)& (0+255),f,b
  4823  001CF6  3366               	rrcf	___fttol@lval& (0+255),f,b
  4824                           
  4825                           ; BSR set to: 0
  4826  001CF8  0100               	movlb	0	; () banked
  4827  001CFA  3F6A               	incfsz	___fttol@exp1& (0+255),f,b
  4828  001CFC  D7F7               	goto	l4576
  4829                           
  4830                           ; BSR set to: 0
  4831  001CFE  D01A               	goto	l4590
  4832  001D00                     l4580:
  4833                           
  4834                           ; BSR set to: 0
  4835  001D00  0E17               	movlw	23
  4836  001D02  0100               	movlb	0	; () banked
  4837  001D04  656A               	cpfsgt	___fttol@exp1& (0+255),b
  4838  001D06  D011               	goto	l4588
  4839                           
  4840                           ; BSR set to: 0
  4841  001D08  0E00               	movlw	0
  4842  001D0A  6E40               	movwf	?___fttol,c
  4843  001D0C  0E00               	movlw	0
  4844  001D0E  6E41               	movwf	?___fttol+1,c
  4845  001D10  0E00               	movlw	0
  4846  001D12  6E42               	movwf	?___fttol+2,c
  4847  001D14  0E00               	movlw	0
  4848  001D16  6E43               	movwf	?___fttol+3,c
  4849                           
  4850                           ; BSR set to: 0
  4851  001D18  0012               	return	
  4852  001D1A                     l4586:
  4853                           
  4854                           ; BSR set to: 0
  4855  001D1A  0100               	movlb	0	; () banked
  4856  001D1C  90D8               	bcf	status,0,c
  4857  001D1E  3766               	rlcf	___fttol@lval& (0+255),f,b
  4858  001D20  3767               	rlcf	(___fttol@lval+1)& (0+255),f,b
  4859  001D22  3768               	rlcf	(___fttol@lval+2)& (0+255),f,b
  4860  001D24  3769               	rlcf	(___fttol@lval+3)& (0+255),f,b
  4861  001D26  0100               	movlb	0	; () banked
  4862  001D28  076A               	decf	___fttol@exp1& (0+255),f,b
  4863  001D2A                     l4588:
  4864                           
  4865                           ; BSR set to: 0
  4866  001D2A  0100               	movlb	0	; () banked
  4867  001D2C  516A               	movf	___fttol@exp1& (0+255),w,b
  4868  001D2E  0100               	movlb	0	; () banked
  4869  001D30  A4D8               	btfss	status,2,c
  4870  001D32  D7F3               	goto	l4586
  4871  001D34                     l4590:
  4872                           
  4873                           ; BSR set to: 0
  4874  001D34  0100               	movlb	0	; () banked
  4875  001D36  5165               	movf	___fttol@sign1& (0+255),w,b
  4876  001D38  0100               	movlb	0	; () banked
  4877  001D3A  B4D8               	btfsc	status,2,c
  4878  001D3C  D009               	goto	l4594
  4879                           
  4880                           ; BSR set to: 0
  4881  001D3E  0100               	movlb	0	; () banked
  4882  001D40  1F69               	comf	(___fttol@lval+3)& (0+255),f,b
  4883  001D42  1F68               	comf	(___fttol@lval+2)& (0+255),f,b
  4884  001D44  1F67               	comf	(___fttol@lval+1)& (0+255),f,b
  4885  001D46  6D66               	negf	___fttol@lval& (0+255),b
  4886  001D48  0E00               	movlw	0
  4887  001D4A  2367               	addwfc	(___fttol@lval+1)& (0+255),f,b
  4888  001D4C  2368               	addwfc	(___fttol@lval+2)& (0+255),f,b
  4889  001D4E  2369               	addwfc	(___fttol@lval+3)& (0+255),f,b
  4890  001D50                     l4594:
  4891                           
  4892                           ; BSR set to: 0
  4893  001D50  C066  F040         	movff	___fttol@lval,?___fttol
  4894  001D54  C067  F041         	movff	___fttol@lval+1,?___fttol+1
  4895  001D58  C068  F042         	movff	___fttol@lval+2,?___fttol+2
  4896  001D5C  C069  F043         	movff	___fttol@lval+3,?___fttol+3
  4897  001D60  0012               	return	
  4898  001D62                     __end_of___fttol:
  4899                           	opt stack 0
  4900                           tblptru	equ	0xFF8
  4901                           tblptrh	equ	0xFF7
  4902                           tblptrl	equ	0xFF6
  4903                           tablat	equ	0xFF5
  4904                           prodh	equ	0xFF4
  4905                           prodl	equ	0xFF3
  4906                           intcon	equ	0xFF2
  4907                           intcon2	equ	0xFF1
  4908                           wreg	equ	0xFE8
  4909                           indf1	equ	0xFE7
  4910                           fsr1h	equ	0xFE2
  4911                           fsr1l	equ	0xFE1
  4912                           indf2	equ	0xFDF
  4913                           postinc2	equ	0xFDE
  4914                           postdec2	equ	0xFDD
  4915                           fsr2h	equ	0xFDA
  4916                           fsr2l	equ	0xFD9
  4917                           status	equ	0xFD8
  4918                           
  4919 ;; *************** function ___ftmul *****************
  4920 ;; Defined at:
  4921 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c"
  4922 ;; Parameters:    Size  Location     Type
  4923 ;;  f1              3   48[COMRAM] float 
  4924 ;;  f2              3   51[COMRAM] float 
  4925 ;; Auto vars:     Size  Location     Type
  4926 ;;  f3_as_produc    3   58[COMRAM] unsigned um
  4927 ;;  sign            1   62[COMRAM] unsigned char 
  4928 ;;  cntr            1   61[COMRAM] unsigned char 
  4929 ;;  exp             1   57[COMRAM] unsigned char 
  4930 ;; Return value:  Size  Location     Type
  4931 ;;                  3   48[COMRAM] float 
  4932 ;; Registers used:
  4933 ;;		wreg, status,2, status,0, cstack
  4934 ;; Tracked objects:
  4935 ;;		On entry : 0/0
  4936 ;;		On exit  : 0/0
  4937 ;;		Unchanged: 0/0
  4938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4939 ;;      Params:         6       0       0       0       0       0       0       0       0
  4940 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4941 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4942 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4943 ;;Total ram usage:       15 bytes
  4944 ;; Hardware stack levels used:    1
  4945 ;; Hardware stack levels required when called:    3
  4946 ;; This function calls:
  4947 ;;		___ftpack
  4948 ;; This function is called by:
  4949 ;;		_duty_cycle_pwm
  4950 ;;		_main
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953                           
  4954                           	psect	text15
  4955  001E78                     __ptext15:
  4956                           	opt stack 0
  4957  001E78                     ___ftmul:
  4958                           	opt stack 26
  4959                           
  4960                           ; BSR set to: 0
  4961                           ;incstack = 0
  4962  001E78  C033  F037         	movff	___ftmul@f1+2,??___ftmul
  4963  001E7C  6A38               	clrf	(??___ftmul+1)& (0+255),c
  4964  001E7E  6A39               	clrf	(??___ftmul+2)& (0+255),c
  4965  001E80  3432               	rlcf	___ftmul@f1+1,w,c
  4966  001E82  3637               	rlcf	??___ftmul& (0+255),f,c
  4967  001E84  E301               	bnc	u3811
  4968  001E86  8038               	bsf	(??___ftmul+1)& (0+255),0,c
  4969  001E88                     u3811:
  4970  001E88  5037               	movf	??___ftmul,w,c
  4971  001E8A  6E3A               	movwf	___ftmul@exp,c
  4972  001E8C  503A               	movf	___ftmul@exp,w,c
  4973  001E8E  A4D8               	btfss	status,2,c
  4974  001E90  D007               	goto	l4498
  4975  001E92  0E00               	movlw	0
  4976  001E94  6E31               	movwf	?___ftmul,c
  4977  001E96  0E00               	movlw	0
  4978  001E98  6E32               	movwf	?___ftmul+1,c
  4979  001E9A  0E00               	movlw	0
  4980  001E9C  6E33               	movwf	?___ftmul+2,c
  4981  001E9E  0012               	return	
  4982  001EA0                     l4498:
  4983  001EA0  C036  F037         	movff	___ftmul@f2+2,??___ftmul
  4984  001EA4  6A38               	clrf	(??___ftmul+1)& (0+255),c
  4985  001EA6  6A39               	clrf	(??___ftmul+2)& (0+255),c
  4986  001EA8  3435               	rlcf	___ftmul@f2+1,w,c
  4987  001EAA  3637               	rlcf	??___ftmul& (0+255),f,c
  4988  001EAC  E301               	bnc	u3831
  4989  001EAE  8038               	bsf	(??___ftmul+1)& (0+255),0,c
  4990  001EB0                     u3831:
  4991  001EB0  5037               	movf	??___ftmul,w,c
  4992  001EB2  6E3F               	movwf	___ftmul@sign,c
  4993  001EB4  503F               	movf	___ftmul@sign,w,c
  4994  001EB6  A4D8               	btfss	status,2,c
  4995  001EB8  D007               	goto	l4504
  4996  001EBA  0E00               	movlw	0
  4997  001EBC  6E31               	movwf	?___ftmul,c
  4998  001EBE  0E00               	movlw	0
  4999  001EC0  6E32               	movwf	?___ftmul+1,c
  5000  001EC2  0E00               	movlw	0
  5001  001EC4  6E33               	movwf	?___ftmul+2,c
  5002  001EC6  0012               	return	
  5003  001EC8                     l4504:
  5004  001EC8  503F               	movf	___ftmul@sign,w,c
  5005  001ECA  0F7B               	addlw	123
  5006  001ECC  263A               	addwf	___ftmul@exp,f,c
  5007  001ECE  C033  F03F         	movff	___ftmul@f1+2,___ftmul@sign
  5008  001ED2  5036               	movf	___ftmul@f2+2,w,c
  5009  001ED4  1A3F               	xorwf	___ftmul@sign,f,c
  5010  001ED6  0E80               	movlw	128
  5011  001ED8  163F               	andwf	___ftmul@sign,f,c
  5012  001EDA  8E32               	bsf	___ftmul@f1+1,7,c
  5013  001EDC  8E35               	bsf	___ftmul@f2+1,7,c
  5014  001EDE  0EFF               	movlw	255
  5015  001EE0  1634               	andwf	___ftmul@f2,f,c
  5016  001EE2  0EFF               	movlw	255
  5017  001EE4  1635               	andwf	___ftmul@f2+1,f,c
  5018  001EE6  0E00               	movlw	0
  5019  001EE8  1636               	andwf	___ftmul@f2+2,f,c
  5020  001EEA  0E00               	movlw	0
  5021  001EEC  6E3B               	movwf	___ftmul@f3_as_product,c
  5022  001EEE  0E00               	movlw	0
  5023  001EF0  6E3C               	movwf	___ftmul@f3_as_product+1,c
  5024  001EF2  0E00               	movlw	0
  5025  001EF4  6E3D               	movwf	___ftmul@f3_as_product+2,c
  5026  001EF6  0E07               	movlw	7
  5027  001EF8  6E3E               	movwf	___ftmul@cntr,c
  5028  001EFA                     l4518:
  5029  001EFA  A031               	btfss	___ftmul@f1,0,c
  5030  001EFC  D006               	goto	l4522
  5031  001EFE  5034               	movf	___ftmul@f2,w,c
  5032  001F00  263B               	addwf	___ftmul@f3_as_product,f,c
  5033  001F02  5035               	movf	___ftmul@f2+1,w,c
  5034  001F04  223C               	addwfc	___ftmul@f3_as_product+1,f,c
  5035  001F06  5036               	movf	___ftmul@f2+2,w,c
  5036  001F08  223D               	addwfc	___ftmul@f3_as_product+2,f,c
  5037  001F0A                     l4522:
  5038  001F0A  90D8               	bcf	status,0,c
  5039  001F0C  3233               	rrcf	___ftmul@f1+2,f,c
  5040  001F0E  3232               	rrcf	___ftmul@f1+1,f,c
  5041  001F10  3231               	rrcf	___ftmul@f1,f,c
  5042  001F12  90D8               	bcf	status,0,c
  5043  001F14  3634               	rlcf	___ftmul@f2,f,c
  5044  001F16  3635               	rlcf	___ftmul@f2+1,f,c
  5045  001F18  3636               	rlcf	___ftmul@f2+2,f,c
  5046  001F1A  2E3E               	decfsz	___ftmul@cntr,f,c
  5047  001F1C  D7EE               	goto	l4518
  5048  001F1E  0E09               	movlw	9
  5049  001F20  6E3E               	movwf	___ftmul@cntr,c
  5050  001F22                     l4528:
  5051  001F22  A031               	btfss	___ftmul@f1,0,c
  5052  001F24  D006               	goto	l4532
  5053  001F26  5034               	movf	___ftmul@f2,w,c
  5054  001F28  263B               	addwf	___ftmul@f3_as_product,f,c
  5055  001F2A  5035               	movf	___ftmul@f2+1,w,c
  5056  001F2C  223C               	addwfc	___ftmul@f3_as_product+1,f,c
  5057  001F2E  5036               	movf	___ftmul@f2+2,w,c
  5058  001F30  223D               	addwfc	___ftmul@f3_as_product+2,f,c
  5059  001F32                     l4532:
  5060  001F32  90D8               	bcf	status,0,c
  5061  001F34  3233               	rrcf	___ftmul@f1+2,f,c
  5062  001F36  3232               	rrcf	___ftmul@f1+1,f,c
  5063  001F38  3231               	rrcf	___ftmul@f1,f,c
  5064  001F3A  90D8               	bcf	status,0,c
  5065  001F3C  323D               	rrcf	___ftmul@f3_as_product+2,f,c
  5066  001F3E  323C               	rrcf	___ftmul@f3_as_product+1,f,c
  5067  001F40  323B               	rrcf	___ftmul@f3_as_product,f,c
  5068  001F42  2E3E               	decfsz	___ftmul@cntr,f,c
  5069  001F44  D7EE               	goto	l4528
  5070  001F46  C03B  F016         	movff	___ftmul@f3_as_product,___ftpack@arg
  5071  001F4A  C03C  F017         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5072  001F4E  C03D  F018         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5073  001F52  C03A  F019         	movff	___ftmul@exp,___ftpack@exp
  5074  001F56  C03F  F01A         	movff	___ftmul@sign,___ftpack@sign
  5075  001F5A  EC29  F010         	call	___ftpack	;wreg free
  5076  001F5E  C016  F031         	movff	?___ftpack,?___ftmul
  5077  001F62  C017  F032         	movff	?___ftpack+1,?___ftmul+1
  5078  001F66  C018  F033         	movff	?___ftpack+2,?___ftmul+2
  5079  001F6A  0012               	return	
  5080  001F6C                     __end_of___ftmul:
  5081                           	opt stack 0
  5082                           tblptru	equ	0xFF8
  5083                           tblptrh	equ	0xFF7
  5084                           tblptrl	equ	0xFF6
  5085                           tablat	equ	0xFF5
  5086                           prodh	equ	0xFF4
  5087                           prodl	equ	0xFF3
  5088                           intcon	equ	0xFF2
  5089                           intcon2	equ	0xFF1
  5090                           wreg	equ	0xFE8
  5091                           indf1	equ	0xFE7
  5092                           fsr1h	equ	0xFE2
  5093                           fsr1l	equ	0xFE1
  5094                           indf2	equ	0xFDF
  5095                           postinc2	equ	0xFDE
  5096                           postdec2	equ	0xFDD
  5097                           fsr2h	equ	0xFDA
  5098                           fsr2l	equ	0xFD9
  5099                           status	equ	0xFD8
  5100                           
  5101 ;; *************** function ___awtoft *****************
  5102 ;; Defined at:
  5103 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awtoft.c"
  5104 ;; Parameters:    Size  Location     Type
  5105 ;;  c               2   29[COMRAM] int 
  5106 ;; Auto vars:     Size  Location     Type
  5107 ;;  sign            1   32[COMRAM] unsigned char 
  5108 ;; Return value:  Size  Location     Type
  5109 ;;                  3   29[COMRAM] float 
  5110 ;; Registers used:
  5111 ;;		wreg, status,2, status,0, cstack
  5112 ;; Tracked objects:
  5113 ;;		On entry : 0/0
  5114 ;;		On exit  : 0/0
  5115 ;;		Unchanged: 0/0
  5116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5117 ;;      Params:         3       0       0       0       0       0       0       0       0
  5118 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5119 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5120 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5121 ;;Total ram usage:        4 bytes
  5122 ;; Hardware stack levels used:    1
  5123 ;; Hardware stack levels required when called:    3
  5124 ;; This function calls:
  5125 ;;		___ftpack
  5126 ;; This function is called by:
  5127 ;;		_duty_cycle_pwm
  5128 ;;		_main
  5129 ;; This function uses a non-reentrant model
  5130 ;;
  5131                           
  5132                           	psect	text16
  5133  002458                     __ptext16:
  5134                           	opt stack 0
  5135  002458                     ___awtoft:
  5136                           	opt stack 26
  5137                           
  5138                           ;incstack = 0
  5139  002458  0E00               	movlw	0
  5140  00245A  6E21               	movwf	___awtoft@sign,c
  5141  00245C  AE1F               	btfss	___awtoft@c+1,7,c
  5142  00245E  D006               	goto	l4548
  5143  002460  6C1E               	negf	___awtoft@c,c
  5144  002462  1E1F               	comf	___awtoft@c+1,f,c
  5145  002464  B0D8               	btfsc	status,0,c
  5146  002466  2A1F               	incf	___awtoft@c+1,f,c
  5147  002468  0E01               	movlw	1
  5148  00246A  6E21               	movwf	___awtoft@sign,c
  5149  00246C                     l4548:
  5150  00246C  C01E  F016         	movff	___awtoft@c,___ftpack@arg
  5151  002470  C01F  F017         	movff	___awtoft@c+1,___ftpack@arg+1
  5152  002474  6A18               	clrf	___ftpack@arg+2,c
  5153  002476  0E8E               	movlw	142
  5154  002478  6E19               	movwf	___ftpack@exp,c
  5155  00247A  C021  F01A         	movff	___awtoft@sign,___ftpack@sign
  5156  00247E  EC29  F010         	call	___ftpack	;wreg free
  5157  002482  C016  F01E         	movff	?___ftpack,?___awtoft
  5158  002486  C017  F01F         	movff	?___ftpack+1,?___awtoft+1
  5159  00248A  C018  F020         	movff	?___ftpack+2,?___awtoft+2
  5160  00248E  0012               	return	
  5161  002490                     __end_of___awtoft:
  5162                           	opt stack 0
  5163                           tblptru	equ	0xFF8
  5164                           tblptrh	equ	0xFF7
  5165                           tblptrl	equ	0xFF6
  5166                           tablat	equ	0xFF5
  5167                           prodh	equ	0xFF4
  5168                           prodl	equ	0xFF3
  5169                           intcon	equ	0xFF2
  5170                           intcon2	equ	0xFF1
  5171                           wreg	equ	0xFE8
  5172                           indf1	equ	0xFE7
  5173                           fsr1h	equ	0xFE2
  5174                           fsr1l	equ	0xFE1
  5175                           indf2	equ	0xFDF
  5176                           postinc2	equ	0xFDE
  5177                           postdec2	equ	0xFDD
  5178                           fsr2h	equ	0xFDA
  5179                           fsr2l	equ	0xFD9
  5180                           status	equ	0xFD8
  5181                           
  5182 ;; *************** function _configurar_pwm *****************
  5183 ;; Defined at:
  5184 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\include\pwm_2.h"
  5185 ;; Parameters:    Size  Location     Type
  5186 ;;  a               1    wreg     unsigned char 
  5187 ;;  b               1   21[COMRAM] unsigned char 
  5188 ;; Auto vars:     Size  Location     Type
  5189 ;;  a               1   22[COMRAM] unsigned char 
  5190 ;; Return value:  Size  Location     Type
  5191 ;;		None               void
  5192 ;; Registers used:
  5193 ;;		wreg, status,2, status,0
  5194 ;; Tracked objects:
  5195 ;;		On entry : 0/0
  5196 ;;		On exit  : 0/0
  5197 ;;		Unchanged: 0/0
  5198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5199 ;;      Params:         1       0       0       0       0       0       0       0       0
  5200 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5201 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5202 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5203 ;;Total ram usage:        2 bytes
  5204 ;; Hardware stack levels used:    1
  5205 ;; Hardware stack levels required when called:    2
  5206 ;; This function calls:
  5207 ;;		Nothing
  5208 ;; This function is called by:
  5209 ;;		_main
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212                           
  5213                           	psect	text17
  5214  002526                     __ptext17:
  5215                           	opt stack 0
  5216  002526                     _configurar_pwm:
  5217                           	opt stack 28
  5218                           
  5219                           ;incstack = 0
  5220                           ;configurar_pwm@a stored from wreg
  5221  002526  6E17               	movwf	configurar_pwm@a,c
  5222                           
  5223                           ;pwm_2.h: 16: PR2=a;
  5224  002528  C017  FFCB         	movff	configurar_pwm@a,4043	;volatile
  5225                           
  5226                           ;pwm_2.h: 17: CCPR2L=0X00;
  5227  00252C  0E00               	movlw	0
  5228  00252E  6EBB               	movwf	4027,c	;volatile
  5229                           
  5230                           ;pwm_2.h: 18: if (b==1)
  5231  002530  0416               	decf	configurar_pwm@b,w,c
  5232  002532  A4D8               	btfss	status,2,c
  5233  002534  D002               	goto	l2914
  5234                           
  5235                           ;pwm_2.h: 19: T2CON=0X04;
  5236  002536  0E04               	movlw	4
  5237  002538  D007               	goto	L2
  5238  00253A                     l2914:
  5239                           
  5240                           ;pwm_2.h: 20: else
  5241                           ;pwm_2.h: 21: {
  5242                           ;pwm_2.h: 22: if (b==4)
  5243  00253A  0E04               	movlw	4
  5244  00253C  1816               	xorwf	configurar_pwm@b,w,c
  5245  00253E  A4D8               	btfss	status,2,c
  5246  002540  D002               	goto	l2918
  5247                           
  5248                           ;pwm_2.h: 23: T2CON=0X05;
  5249  002542  0E05               	movlw	5
  5250  002544  D001               	goto	L2
  5251  002546                     l2918:
  5252                           
  5253                           ;pwm_2.h: 24: else
  5254                           ;pwm_2.h: 25: T2CON=0X06;
  5255  002546  0E06               	movlw	6
  5256  002548                     L2:
  5257  002548  6ECA               	movwf	4042,c	;volatile
  5258                           
  5259                           ;pwm_2.h: 26: }
  5260                           ;pwm_2.h: 27: CCP2CON=0X0F;
  5261  00254A  0E0F               	movlw	15
  5262  00254C  6EBA               	movwf	4026,c	;volatile
  5263  00254E  0012               	return		;funcret
  5264  002550                     __end_of_configurar_pwm:
  5265                           	opt stack 0
  5266                           tblptru	equ	0xFF8
  5267                           tblptrh	equ	0xFF7
  5268                           tblptrl	equ	0xFF6
  5269                           tablat	equ	0xFF5
  5270                           prodh	equ	0xFF4
  5271                           prodl	equ	0xFF3
  5272                           intcon	equ	0xFF2
  5273                           intcon2	equ	0xFF1
  5274                           wreg	equ	0xFE8
  5275                           indf1	equ	0xFE7
  5276                           fsr1h	equ	0xFE2
  5277                           fsr1l	equ	0xFE1
  5278                           indf2	equ	0xFDF
  5279                           postinc2	equ	0xFDE
  5280                           postdec2	equ	0xFDD
  5281                           fsr2h	equ	0xFDA
  5282                           fsr2l	equ	0xFD9
  5283                           status	equ	0xFD8
  5284                           
  5285 ;; *************** function ___ftneg *****************
  5286 ;; Defined at:
  5287 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftneg.c"
  5288 ;; Parameters:    Size  Location     Type
  5289 ;;  f1              3   21[COMRAM] float 
  5290 ;; Auto vars:     Size  Location     Type
  5291 ;;		None
  5292 ;; Return value:  Size  Location     Type
  5293 ;;                  3   21[COMRAM] float 
  5294 ;; Registers used:
  5295 ;;		wreg, status,2, status,0
  5296 ;; Tracked objects:
  5297 ;;		On entry : 0/0
  5298 ;;		On exit  : 0/0
  5299 ;;		Unchanged: 0/0
  5300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5301 ;;      Params:         3       0       0       0       0       0       0       0       0
  5302 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5303 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5304 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5305 ;;Total ram usage:        3 bytes
  5306 ;; Hardware stack levels used:    1
  5307 ;; Hardware stack levels required when called:    2
  5308 ;; This function calls:
  5309 ;;		Nothing
  5310 ;; This function is called by:
  5311 ;;		_main
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           
  5315                           	psect	text18
  5316  00259E                     __ptext18:
  5317                           	opt stack 0
  5318  00259E                     ___ftneg:
  5319                           	opt stack 28
  5320                           
  5321                           ;incstack = 0
  5322  00259E  5016               	movf	___ftneg@f1,w,c
  5323  0025A0  1017               	iorwf	___ftneg@f1+1,w,c
  5324  0025A2  1018               	iorwf	___ftneg@f1+2,w,c
  5325  0025A4  B4D8               	btfsc	status,2,c
  5326  0025A6  D006               	goto	l582
  5327  0025A8  0E00               	movlw	0
  5328  0025AA  1A16               	xorwf	___ftneg@f1,f,c
  5329  0025AC  0E00               	movlw	0
  5330  0025AE  1A17               	xorwf	___ftneg@f1+1,f,c
  5331  0025B0  0E80               	movlw	128
  5332  0025B2  1A18               	xorwf	___ftneg@f1+2,f,c
  5333  0025B4                     l582:
  5334  0025B4  C016  F016         	movff	___ftneg@f1,?___ftneg
  5335  0025B8  C017  F017         	movff	___ftneg@f1+1,?___ftneg+1
  5336  0025BC  C018  F018         	movff	___ftneg@f1+2,?___ftneg+2
  5337  0025C0  0012               	return		;funcret
  5338  0025C2                     __end_of___ftneg:
  5339                           	opt stack 0
  5340                           tblptru	equ	0xFF8
  5341                           tblptrh	equ	0xFF7
  5342                           tblptrl	equ	0xFF6
  5343                           tablat	equ	0xFF5
  5344                           prodh	equ	0xFF4
  5345                           prodl	equ	0xFF3
  5346                           intcon	equ	0xFF2
  5347                           intcon2	equ	0xFF1
  5348                           wreg	equ	0xFE8
  5349                           indf1	equ	0xFE7
  5350                           fsr1h	equ	0xFE2
  5351                           fsr1l	equ	0xFE1
  5352                           indf2	equ	0xFDF
  5353                           postinc2	equ	0xFDE
  5354                           postdec2	equ	0xFDD
  5355                           fsr2h	equ	0xFDA
  5356                           fsr2l	equ	0xFD9
  5357                           status	equ	0xFD8
  5358                           
  5359 ;; *************** function ___ftdiv *****************
  5360 ;; Defined at:
  5361 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdiv.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;  f1              3   33[COMRAM] float 
  5364 ;;  f2              3   36[COMRAM] float 
  5365 ;; Auto vars:     Size  Location     Type
  5366 ;;  f3              3   43[COMRAM] float 
  5367 ;;  sign            1   47[COMRAM] unsigned char 
  5368 ;;  exp             1   46[COMRAM] unsigned char 
  5369 ;;  cntr            1   42[COMRAM] unsigned char 
  5370 ;; Return value:  Size  Location     Type
  5371 ;;                  3   33[COMRAM] float 
  5372 ;; Registers used:
  5373 ;;		wreg, status,2, status,0, cstack
  5374 ;; Tracked objects:
  5375 ;;		On entry : 0/0
  5376 ;;		On exit  : 0/0
  5377 ;;		Unchanged: 0/0
  5378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5379 ;;      Params:         6       0       0       0       0       0       0       0       0
  5380 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5381 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5382 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5383 ;;Total ram usage:       15 bytes
  5384 ;; Hardware stack levels used:    1
  5385 ;; Hardware stack levels required when called:    3
  5386 ;; This function calls:
  5387 ;;		___ftpack
  5388 ;; This function is called by:
  5389 ;;		_main
  5390 ;; This function uses a non-reentrant model
  5391 ;;
  5392                           
  5393                           	psect	text19
  5394  001F6C                     __ptext19:
  5395                           	opt stack 0
  5396  001F6C                     ___ftdiv:
  5397                           	opt stack 27
  5398                           
  5399                           ;incstack = 0
  5400  001F6C  C024  F028         	movff	___ftdiv@f1+2,??___ftdiv
  5401  001F70  6A29               	clrf	(??___ftdiv+1)& (0+255),c
  5402  001F72  6A2A               	clrf	(??___ftdiv+2)& (0+255),c
  5403  001F74  3423               	rlcf	___ftdiv@f1+1,w,c
  5404  001F76  3628               	rlcf	??___ftdiv& (0+255),f,c
  5405  001F78  E301               	bnc	u4171
  5406  001F7A  8029               	bsf	(??___ftdiv+1)& (0+255),0,c
  5407  001F7C                     u4171:
  5408  001F7C  5028               	movf	??___ftdiv,w,c
  5409  001F7E  6E2F               	movwf	___ftdiv@exp,c
  5410  001F80  502F               	movf	___ftdiv@exp,w,c
  5411  001F82  A4D8               	btfss	status,2,c
  5412  001F84  D007               	goto	l4682
  5413  001F86  0E00               	movlw	0
  5414  001F88  6E22               	movwf	?___ftdiv,c
  5415  001F8A  0E00               	movlw	0
  5416  001F8C  6E23               	movwf	?___ftdiv+1,c
  5417  001F8E  0E00               	movlw	0
  5418  001F90  6E24               	movwf	?___ftdiv+2,c
  5419  001F92  0012               	return	
  5420  001F94                     l4682:
  5421  001F94  C027  F028         	movff	___ftdiv@f2+2,??___ftdiv
  5422  001F98  6A29               	clrf	(??___ftdiv+1)& (0+255),c
  5423  001F9A  6A2A               	clrf	(??___ftdiv+2)& (0+255),c
  5424  001F9C  3426               	rlcf	___ftdiv@f2+1,w,c
  5425  001F9E  3628               	rlcf	??___ftdiv& (0+255),f,c
  5426  001FA0  E301               	bnc	u4191
  5427  001FA2  8029               	bsf	(??___ftdiv+1)& (0+255),0,c
  5428  001FA4                     u4191:
  5429  001FA4  5028               	movf	??___ftdiv,w,c
  5430  001FA6  6E30               	movwf	___ftdiv@sign,c
  5431  001FA8  5030               	movf	___ftdiv@sign,w,c
  5432  001FAA  A4D8               	btfss	status,2,c
  5433  001FAC  D007               	goto	l4688
  5434  001FAE  0E00               	movlw	0
  5435  001FB0  6E22               	movwf	?___ftdiv,c
  5436  001FB2  0E00               	movlw	0
  5437  001FB4  6E23               	movwf	?___ftdiv+1,c
  5438  001FB6  0E00               	movlw	0
  5439  001FB8  6E24               	movwf	?___ftdiv+2,c
  5440  001FBA  0012               	return	
  5441  001FBC                     l4688:
  5442  001FBC  0E00               	movlw	0
  5443  001FBE  6E2C               	movwf	___ftdiv@f3,c
  5444  001FC0  0E00               	movlw	0
  5445  001FC2  6E2D               	movwf	___ftdiv@f3+1,c
  5446  001FC4  0E00               	movlw	0
  5447  001FC6  6E2E               	movwf	___ftdiv@f3+2,c
  5448  001FC8  5030               	movf	___ftdiv@sign,w,c
  5449  001FCA  0F89               	addlw	137
  5450  001FCC  5E2F               	subwf	___ftdiv@exp,f,c
  5451  001FCE  C024  F030         	movff	___ftdiv@f1+2,___ftdiv@sign
  5452  001FD2  5027               	movf	___ftdiv@f2+2,w,c
  5453  001FD4  1A30               	xorwf	___ftdiv@sign,f,c
  5454  001FD6  0E80               	movlw	128
  5455  001FD8  1630               	andwf	___ftdiv@sign,f,c
  5456  001FDA  8E23               	bsf	___ftdiv@f1+1,7,c
  5457  001FDC  0EFF               	movlw	255
  5458  001FDE  1622               	andwf	___ftdiv@f1,f,c
  5459  001FE0  0EFF               	movlw	255
  5460  001FE2  1623               	andwf	___ftdiv@f1+1,f,c
  5461  001FE4  0E00               	movlw	0
  5462  001FE6  1624               	andwf	___ftdiv@f1+2,f,c
  5463  001FE8  8E26               	bsf	___ftdiv@f2+1,7,c
  5464  001FEA  0EFF               	movlw	255
  5465  001FEC  1625               	andwf	___ftdiv@f2,f,c
  5466  001FEE  0EFF               	movlw	255
  5467  001FF0  1626               	andwf	___ftdiv@f2+1,f,c
  5468  001FF2  0E00               	movlw	0
  5469  001FF4  1627               	andwf	___ftdiv@f2+2,f,c
  5470  001FF6  0E18               	movlw	24
  5471  001FF8  6E2B               	movwf	___ftdiv@cntr,c
  5472  001FFA                     l4708:
  5473  001FFA  90D8               	bcf	status,0,c
  5474  001FFC  362C               	rlcf	___ftdiv@f3,f,c
  5475  001FFE  362D               	rlcf	___ftdiv@f3+1,f,c
  5476  002000  362E               	rlcf	___ftdiv@f3+2,f,c
  5477  002002  5025               	movf	___ftdiv@f2,w,c
  5478  002004  5C22               	subwf	___ftdiv@f1,w,c
  5479  002006  5026               	movf	___ftdiv@f2+1,w,c
  5480  002008  5823               	subwfb	___ftdiv@f1+1,w,c
  5481  00200A  5027               	movf	___ftdiv@f2+2,w,c
  5482  00200C  5824               	subwfb	___ftdiv@f1+2,w,c
  5483  00200E  A0D8               	btfss	status,0,c
  5484  002010  D007               	goto	l560
  5485  002012  5025               	movf	___ftdiv@f2,w,c
  5486  002014  5E22               	subwf	___ftdiv@f1,f,c
  5487  002016  5026               	movf	___ftdiv@f2+1,w,c
  5488  002018  5A23               	subwfb	___ftdiv@f1+1,f,c
  5489  00201A  5027               	movf	___ftdiv@f2+2,w,c
  5490  00201C  5A24               	subwfb	___ftdiv@f1+2,f,c
  5491  00201E  802C               	bsf	___ftdiv@f3,0,c
  5492  002020                     l560:
  5493  002020  90D8               	bcf	status,0,c
  5494  002022  3622               	rlcf	___ftdiv@f1,f,c
  5495  002024  3623               	rlcf	___ftdiv@f1+1,f,c
  5496  002026  3624               	rlcf	___ftdiv@f1+2,f,c
  5497  002028  2E2B               	decfsz	___ftdiv@cntr,f,c
  5498  00202A  D7E7               	goto	l4708
  5499  00202C  C02C  F016         	movff	___ftdiv@f3,___ftpack@arg
  5500  002030  C02D  F017         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5501  002034  C02E  F018         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5502  002038  C02F  F019         	movff	___ftdiv@exp,___ftpack@exp
  5503  00203C  C030  F01A         	movff	___ftdiv@sign,___ftpack@sign
  5504  002040  EC29  F010         	call	___ftpack	;wreg free
  5505  002044  C016  F022         	movff	?___ftpack,?___ftdiv
  5506  002048  C017  F023         	movff	?___ftpack+1,?___ftdiv+1
  5507  00204C  C018  F024         	movff	?___ftpack+2,?___ftdiv+2
  5508  002050  0012               	return	
  5509  002052                     __end_of___ftdiv:
  5510                           	opt stack 0
  5511                           tblptru	equ	0xFF8
  5512                           tblptrh	equ	0xFF7
  5513                           tblptrl	equ	0xFF6
  5514                           tablat	equ	0xFF5
  5515                           prodh	equ	0xFF4
  5516                           prodl	equ	0xFF3
  5517                           intcon	equ	0xFF2
  5518                           intcon2	equ	0xFF1
  5519                           wreg	equ	0xFE8
  5520                           indf1	equ	0xFE7
  5521                           fsr1h	equ	0xFE2
  5522                           fsr1l	equ	0xFE1
  5523                           indf2	equ	0xFDF
  5524                           postinc2	equ	0xFDE
  5525                           postdec2	equ	0xFDD
  5526                           fsr2h	equ	0xFDA
  5527                           fsr2l	equ	0xFD9
  5528                           status	equ	0xFD8
  5529                           
  5530 ;; *************** function ___ftadd *****************
  5531 ;; Defined at:
  5532 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftadd.c"
  5533 ;; Parameters:    Size  Location     Type
  5534 ;;  f1              3   29[COMRAM] float 
  5535 ;;  f2              3   32[COMRAM] float 
  5536 ;; Auto vars:     Size  Location     Type
  5537 ;;  exp1            1   40[COMRAM] unsigned char 
  5538 ;;  exp2            1   39[COMRAM] unsigned char 
  5539 ;;  sign            1   38[COMRAM] unsigned char 
  5540 ;; Return value:  Size  Location     Type
  5541 ;;                  3   29[COMRAM] float 
  5542 ;; Registers used:
  5543 ;;		wreg, status,2, status,0, cstack
  5544 ;; Tracked objects:
  5545 ;;		On entry : 0/0
  5546 ;;		On exit  : 0/0
  5547 ;;		Unchanged: 0/0
  5548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5549 ;;      Params:         6       0       0       0       0       0       0       0       0
  5550 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5551 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5552 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5553 ;;Total ram usage:       12 bytes
  5554 ;; Hardware stack levels used:    1
  5555 ;; Hardware stack levels required when called:    3
  5556 ;; This function calls:
  5557 ;;		___ftpack
  5558 ;; This function is called by:
  5559 ;;		_main
  5560 ;; This function uses a non-reentrant model
  5561 ;;
  5562                           
  5563                           	psect	text20
  5564  001A88                     __ptext20:
  5565                           	opt stack 0
  5566  001A88                     ___ftadd:
  5567                           	opt stack 27
  5568                           
  5569                           ;incstack = 0
  5570  001A88  C020  F024         	movff	___ftadd@f1+2,??___ftadd
  5571  001A8C  6A25               	clrf	(??___ftadd+1)& (0+255),c
  5572  001A8E  6A26               	clrf	(??___ftadd+2)& (0+255),c
  5573  001A90  341F               	rlcf	___ftadd@f1+1,w,c
  5574  001A92  3624               	rlcf	??___ftadd& (0+255),f,c
  5575  001A94  E301               	bnc	u3961
  5576  001A96  8025               	bsf	(??___ftadd+1)& (0+255),0,c
  5577  001A98                     u3961:
  5578  001A98  5024               	movf	??___ftadd,w,c
  5579  001A9A  6E29               	movwf	___ftadd@exp1,c
  5580  001A9C  C023  F024         	movff	___ftadd@f2+2,??___ftadd
  5581  001AA0  6A25               	clrf	(??___ftadd+1)& (0+255),c
  5582  001AA2  6A26               	clrf	(??___ftadd+2)& (0+255),c
  5583  001AA4  3422               	rlcf	___ftadd@f2+1,w,c
  5584  001AA6  3624               	rlcf	??___ftadd& (0+255),f,c
  5585  001AA8  E301               	bnc	u3971
  5586  001AAA  8025               	bsf	(??___ftadd+1)& (0+255),0,c
  5587  001AAC                     u3971:
  5588  001AAC  5024               	movf	??___ftadd,w,c
  5589  001AAE  6E28               	movwf	___ftadd@exp2,c
  5590  001AB0  5029               	movf	___ftadd@exp1,w,c
  5591  001AB2  B4D8               	btfsc	status,2,c
  5592  001AB4  D00B               	goto	l525
  5593  001AB6  5028               	movf	___ftadd@exp2,w,c
  5594  001AB8  5C29               	subwf	___ftadd@exp1,w,c
  5595  001ABA  B0D8               	btfsc	status,0,c
  5596  001ABC  D00E               	goto	l4614
  5597  001ABE  5029               	movf	___ftadd@exp1,w,c
  5598  001AC0  0800               	sublw	0
  5599  001AC2  2428               	addwf	___ftadd@exp2,w,c
  5600  001AC4  6E24               	movwf	??___ftadd& (0+255),c
  5601  001AC6  0E18               	movlw	24
  5602  001AC8  6424               	cpfsgt	??___ftadd,c
  5603  001ACA  D007               	goto	l4614
  5604  001ACC                     l525:
  5605  001ACC  C021  F01E         	movff	___ftadd@f2,?___ftadd
  5606  001AD0  C022  F01F         	movff	___ftadd@f2+1,?___ftadd+1
  5607  001AD4  C023  F020         	movff	___ftadd@f2+2,?___ftadd+2
  5608  001AD8  0012               	return	
  5609  001ADA                     l4614:
  5610  001ADA  5028               	movf	___ftadd@exp2,w,c
  5611  001ADC  B4D8               	btfsc	status,2,c
  5612  001ADE  D00B               	goto	l529
  5613  001AE0  5029               	movf	___ftadd@exp1,w,c
  5614  001AE2  5C28               	subwf	___ftadd@exp2,w,c
  5615  001AE4  B0D8               	btfsc	status,0,c
  5616  001AE6  D00E               	goto	l4620
  5617  001AE8  5028               	movf	___ftadd@exp2,w,c
  5618  001AEA  0800               	sublw	0
  5619  001AEC  2429               	addwf	___ftadd@exp1,w,c
  5620  001AEE  6E24               	movwf	??___ftadd& (0+255),c
  5621  001AF0  0E18               	movlw	24
  5622  001AF2  6424               	cpfsgt	??___ftadd,c
  5623  001AF4  D007               	goto	l4620
  5624  001AF6                     l529:
  5625  001AF6  C01E  F01E         	movff	___ftadd@f1,?___ftadd
  5626  001AFA  C01F  F01F         	movff	___ftadd@f1+1,?___ftadd+1
  5627  001AFE  C020  F020         	movff	___ftadd@f1+2,?___ftadd+2
  5628  001B02  0012               	return	
  5629  001B04                     l4620:
  5630  001B04  0E06               	movlw	6
  5631  001B06  6E27               	movwf	___ftadd@sign,c
  5632  001B08  BE20               	btfsc	___ftadd@f1+2,7,c
  5633  001B0A  8E27               	bsf	___ftadd@sign,7,c
  5634  001B0C  BE23               	btfsc	___ftadd@f2+2,7,c
  5635  001B0E  8C27               	bsf	___ftadd@sign,6,c
  5636  001B10  8E1F               	bsf	___ftadd@f1+1,7,c
  5637  001B12  0EFF               	movlw	255
  5638  001B14  161E               	andwf	___ftadd@f1,f,c
  5639  001B16  0EFF               	movlw	255
  5640  001B18  161F               	andwf	___ftadd@f1+1,f,c
  5641  001B1A  0E00               	movlw	0
  5642  001B1C  1620               	andwf	___ftadd@f1+2,f,c
  5643  001B1E  8E22               	bsf	___ftadd@f2+1,7,c
  5644  001B20  0EFF               	movlw	255
  5645  001B22  1621               	andwf	___ftadd@f2,f,c
  5646  001B24  0EFF               	movlw	255
  5647  001B26  1622               	andwf	___ftadd@f2+1,f,c
  5648  001B28  0E00               	movlw	0
  5649  001B2A  1623               	andwf	___ftadd@f2+2,f,c
  5650  001B2C  5028               	movf	___ftadd@exp2,w,c
  5651  001B2E  5C29               	subwf	___ftadd@exp1,w,c
  5652  001B30  B0D8               	btfsc	status,0,c
  5653  001B32  D01B               	goto	l4646
  5654  001B34                     l4636:
  5655  001B34  90D8               	bcf	status,0,c
  5656  001B36  3621               	rlcf	___ftadd@f2,f,c
  5657  001B38  3622               	rlcf	___ftadd@f2+1,f,c
  5658  001B3A  3623               	rlcf	___ftadd@f2+2,f,c
  5659  001B3C  0628               	decf	___ftadd@exp2,f,c
  5660  001B3E  5029               	movf	___ftadd@exp1,w,c
  5661  001B40  1828               	xorwf	___ftadd@exp2,w,c
  5662  001B42  B4D8               	btfsc	status,2,c
  5663  001B44  D00D               	goto	l4644
  5664  001B46  0627               	decf	___ftadd@sign,f,c
  5665  001B48  C027  F024         	movff	___ftadd@sign,??___ftadd
  5666  001B4C  0E07               	movlw	7
  5667  001B4E  1624               	andwf	??___ftadd,f,c
  5668  001B50  B4D8               	btfsc	status,2,c
  5669  001B52  D006               	goto	l4644
  5670  001B54  D7EF               	goto	l4636
  5671  001B56                     l4642:
  5672  001B56  90D8               	bcf	status,0,c
  5673  001B58  3220               	rrcf	___ftadd@f1+2,f,c
  5674  001B5A  321F               	rrcf	___ftadd@f1+1,f,c
  5675  001B5C  321E               	rrcf	___ftadd@f1,f,c
  5676  001B5E  2A29               	incf	___ftadd@exp1,f,c
  5677  001B60                     l4644:
  5678  001B60  5028               	movf	___ftadd@exp2,w,c
  5679  001B62  1829               	xorwf	___ftadd@exp1,w,c
  5680  001B64  B4D8               	btfsc	status,2,c
  5681  001B66  D01F               	goto	l540
  5682  001B68  D7F6               	goto	l4642
  5683  001B6A                     l4646:
  5684  001B6A  5029               	movf	___ftadd@exp1,w,c
  5685  001B6C  5C28               	subwf	___ftadd@exp2,w,c
  5686  001B6E  B0D8               	btfsc	status,0,c
  5687  001B70  D01A               	goto	l540
  5688  001B72                     l4648:
  5689  001B72  90D8               	bcf	status,0,c
  5690  001B74  361E               	rlcf	___ftadd@f1,f,c
  5691  001B76  361F               	rlcf	___ftadd@f1+1,f,c
  5692  001B78  3620               	rlcf	___ftadd@f1+2,f,c
  5693  001B7A  0629               	decf	___ftadd@exp1,f,c
  5694  001B7C  5029               	movf	___ftadd@exp1,w,c
  5695  001B7E  1828               	xorwf	___ftadd@exp2,w,c
  5696  001B80  B4D8               	btfsc	status,2,c
  5697  001B82  D00D               	goto	l4656
  5698  001B84  0627               	decf	___ftadd@sign,f,c
  5699  001B86  C027  F024         	movff	___ftadd@sign,??___ftadd
  5700  001B8A  0E07               	movlw	7
  5701  001B8C  1624               	andwf	??___ftadd,f,c
  5702  001B8E  B4D8               	btfsc	status,2,c
  5703  001B90  D006               	goto	l4656
  5704  001B92  D7EF               	goto	l4648
  5705  001B94                     l4654:
  5706  001B94  90D8               	bcf	status,0,c
  5707  001B96  3223               	rrcf	___ftadd@f2+2,f,c
  5708  001B98  3222               	rrcf	___ftadd@f2+1,f,c
  5709  001B9A  3221               	rrcf	___ftadd@f2,f,c
  5710  001B9C  2A28               	incf	___ftadd@exp2,f,c
  5711  001B9E                     l4656:
  5712  001B9E  5028               	movf	___ftadd@exp2,w,c
  5713  001BA0  1829               	xorwf	___ftadd@exp1,w,c
  5714  001BA2  A4D8               	btfss	status,2,c
  5715  001BA4  D7F7               	goto	l4654
  5716  001BA6                     l540:
  5717  001BA6  AE27               	btfss	___ftadd@sign,7,c
  5718  001BA8  D00C               	goto	l549
  5719  001BAA  0EFF               	movlw	255
  5720  001BAC  1A1E               	xorwf	___ftadd@f1,f,c
  5721  001BAE  0EFF               	movlw	255
  5722  001BB0  1A1F               	xorwf	___ftadd@f1+1,f,c
  5723  001BB2  0EFF               	movlw	255
  5724  001BB4  1A20               	xorwf	___ftadd@f1+2,f,c
  5725  001BB6  0E01               	movlw	1
  5726  001BB8  261E               	addwf	___ftadd@f1,f,c
  5727  001BBA  0E00               	movlw	0
  5728  001BBC  221F               	addwfc	___ftadd@f1+1,f,c
  5729  001BBE  0E00               	movlw	0
  5730  001BC0  2220               	addwfc	___ftadd@f1+2,f,c
  5731  001BC2                     l549:
  5732  001BC2  AC27               	btfss	___ftadd@sign,6,c
  5733  001BC4  D00C               	goto	l4662
  5734  001BC6  0EFF               	movlw	255
  5735  001BC8  1A21               	xorwf	___ftadd@f2,f,c
  5736  001BCA  0EFF               	movlw	255
  5737  001BCC  1A22               	xorwf	___ftadd@f2+1,f,c
  5738  001BCE  0EFF               	movlw	255
  5739  001BD0  1A23               	xorwf	___ftadd@f2+2,f,c
  5740  001BD2  0E01               	movlw	1
  5741  001BD4  2621               	addwf	___ftadd@f2,f,c
  5742  001BD6  0E00               	movlw	0
  5743  001BD8  2222               	addwfc	___ftadd@f2+1,f,c
  5744  001BDA  0E00               	movlw	0
  5745  001BDC  2223               	addwfc	___ftadd@f2+2,f,c
  5746  001BDE                     l4662:
  5747  001BDE  0E00               	movlw	0
  5748  001BE0  6E27               	movwf	___ftadd@sign,c
  5749  001BE2  501E               	movf	___ftadd@f1,w,c
  5750  001BE4  2621               	addwf	___ftadd@f2,f,c
  5751  001BE6  501F               	movf	___ftadd@f1+1,w,c
  5752  001BE8  2222               	addwfc	___ftadd@f2+1,f,c
  5753  001BEA  5020               	movf	___ftadd@f1+2,w,c
  5754  001BEC  2223               	addwfc	___ftadd@f2+2,f,c
  5755  001BEE  AE23               	btfss	___ftadd@f2+2,7,c
  5756  001BF0  D00E               	goto	l4672
  5757  001BF2  0EFF               	movlw	255
  5758  001BF4  1A21               	xorwf	___ftadd@f2,f,c
  5759  001BF6  0EFF               	movlw	255
  5760  001BF8  1A22               	xorwf	___ftadd@f2+1,f,c
  5761  001BFA  0EFF               	movlw	255
  5762  001BFC  1A23               	xorwf	___ftadd@f2+2,f,c
  5763  001BFE  0E01               	movlw	1
  5764  001C00  2621               	addwf	___ftadd@f2,f,c
  5765  001C02  0E00               	movlw	0
  5766  001C04  2222               	addwfc	___ftadd@f2+1,f,c
  5767  001C06  0E00               	movlw	0
  5768  001C08  2223               	addwfc	___ftadd@f2+2,f,c
  5769  001C0A  0E01               	movlw	1
  5770  001C0C  6E27               	movwf	___ftadd@sign,c
  5771  001C0E                     l4672:
  5772  001C0E  C021  F016         	movff	___ftadd@f2,___ftpack@arg
  5773  001C12  C022  F017         	movff	___ftadd@f2+1,___ftpack@arg+1
  5774  001C16  C023  F018         	movff	___ftadd@f2+2,___ftpack@arg+2
  5775  001C1A  C029  F019         	movff	___ftadd@exp1,___ftpack@exp
  5776  001C1E  C027  F01A         	movff	___ftadd@sign,___ftpack@sign
  5777  001C22  EC29  F010         	call	___ftpack	;wreg free
  5778  001C26  C016  F01E         	movff	?___ftpack,?___ftadd
  5779  001C2A  C017  F01F         	movff	?___ftpack+1,?___ftadd+1
  5780  001C2E  C018  F020         	movff	?___ftpack+2,?___ftadd+2
  5781  001C32  0012               	return	
  5782  001C34                     __end_of___ftadd:
  5783                           	opt stack 0
  5784                           tblptru	equ	0xFF8
  5785                           tblptrh	equ	0xFF7
  5786                           tblptrl	equ	0xFF6
  5787                           tablat	equ	0xFF5
  5788                           prodh	equ	0xFF4
  5789                           prodl	equ	0xFF3
  5790                           intcon	equ	0xFF2
  5791                           intcon2	equ	0xFF1
  5792                           wreg	equ	0xFE8
  5793                           indf1	equ	0xFE7
  5794                           fsr1h	equ	0xFE2
  5795                           fsr1l	equ	0xFE1
  5796                           indf2	equ	0xFDF
  5797                           postinc2	equ	0xFDE
  5798                           postdec2	equ	0xFDD
  5799                           fsr2h	equ	0xFDA
  5800                           fsr2l	equ	0xFD9
  5801                           status	equ	0xFD8
  5802                           
  5803 ;; *************** function ___ftpack *****************
  5804 ;; Defined at:
  5805 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
  5806 ;; Parameters:    Size  Location     Type
  5807 ;;  arg             3   21[COMRAM] unsigned um
  5808 ;;  exp             1   24[COMRAM] unsigned char 
  5809 ;;  sign            1   25[COMRAM] unsigned char 
  5810 ;; Auto vars:     Size  Location     Type
  5811 ;;		None
  5812 ;; Return value:  Size  Location     Type
  5813 ;;                  3   21[COMRAM] float 
  5814 ;; Registers used:
  5815 ;;		wreg, status,2, status,0
  5816 ;; Tracked objects:
  5817 ;;		On entry : 0/0
  5818 ;;		On exit  : 0/0
  5819 ;;		Unchanged: 0/0
  5820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5821 ;;      Params:         5       0       0       0       0       0       0       0       0
  5822 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5823 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5824 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5825 ;;Total ram usage:        8 bytes
  5826 ;; Hardware stack levels used:    1
  5827 ;; Hardware stack levels required when called:    2
  5828 ;; This function calls:
  5829 ;;		Nothing
  5830 ;; This function is called by:
  5831 ;;		___awtoft
  5832 ;;		___ftadd
  5833 ;;		___ftdiv
  5834 ;;		___ftmul
  5835 ;; This function uses a non-reentrant model
  5836 ;;
  5837                           
  5838                           	psect	text21
  5839  002052                     __ptext21:
  5840                           	opt stack 0
  5841  002052                     ___ftpack:
  5842                           	opt stack 26
  5843                           
  5844                           ;incstack = 0
  5845  002052  5019               	movf	___ftpack@exp,w,c
  5846  002054  B4D8               	btfsc	status,2,c
  5847  002056  D005               	goto	l4460
  5848  002058  5016               	movf	___ftpack@arg,w,c
  5849  00205A  1017               	iorwf	___ftpack@arg+1,w,c
  5850  00205C  1018               	iorwf	___ftpack@arg+2,w,c
  5851  00205E  A4D8               	btfss	status,2,c
  5852  002060  D00C               	goto	l4466
  5853  002062                     l4460:
  5854  002062  0E00               	movlw	0
  5855  002064  6E16               	movwf	?___ftpack,c
  5856  002066  0E00               	movlw	0
  5857  002068  6E17               	movwf	?___ftpack+1,c
  5858  00206A  0E00               	movlw	0
  5859  00206C  6E18               	movwf	?___ftpack+2,c
  5860  00206E  0012               	return	
  5861  002070                     l4464:
  5862  002070  2A19               	incf	___ftpack@exp,f,c
  5863  002072  90D8               	bcf	status,0,c
  5864  002074  3218               	rrcf	___ftpack@arg+2,f,c
  5865  002076  3217               	rrcf	___ftpack@arg+1,f,c
  5866  002078  3216               	rrcf	___ftpack@arg,f,c
  5867  00207A                     l4466:
  5868  00207A  0E00               	movlw	0
  5869  00207C  1416               	andwf	___ftpack@arg,w,c
  5870  00207E  6E1B               	movwf	??___ftpack& (0+255),c
  5871  002080  0E00               	movlw	0
  5872  002082  1417               	andwf	___ftpack@arg+1,w,c
  5873  002084  6E1C               	movwf	(??___ftpack+1)& (0+255),c
  5874  002086  0EFE               	movlw	254
  5875  002088  1418               	andwf	___ftpack@arg+2,w,c
  5876  00208A  6E1D               	movwf	(??___ftpack+2)& (0+255),c
  5877  00208C  501B               	movf	??___ftpack,w,c
  5878  00208E  101C               	iorwf	??___ftpack+1,w,c
  5879  002090  101D               	iorwf	??___ftpack+2,w,c
  5880  002092  B4D8               	btfsc	status,2,c
  5881  002094  D00C               	goto	l4472
  5882  002096  D7EC               	goto	l4464
  5883  002098                     l4468:
  5884  002098  2A19               	incf	___ftpack@exp,f,c
  5885  00209A  0E01               	movlw	1
  5886  00209C  2616               	addwf	___ftpack@arg,f,c
  5887  00209E  0E00               	movlw	0
  5888  0020A0  2217               	addwfc	___ftpack@arg+1,f,c
  5889  0020A2  0E00               	movlw	0
  5890  0020A4  2218               	addwfc	___ftpack@arg+2,f,c
  5891  0020A6  90D8               	bcf	status,0,c
  5892  0020A8  3218               	rrcf	___ftpack@arg+2,f,c
  5893  0020AA  3217               	rrcf	___ftpack@arg+1,f,c
  5894  0020AC  3216               	rrcf	___ftpack@arg,f,c
  5895  0020AE                     l4472:
  5896  0020AE  0E00               	movlw	0
  5897  0020B0  1416               	andwf	___ftpack@arg,w,c
  5898  0020B2  6E1B               	movwf	??___ftpack& (0+255),c
  5899  0020B4  0E00               	movlw	0
  5900  0020B6  1417               	andwf	___ftpack@arg+1,w,c
  5901  0020B8  6E1C               	movwf	(??___ftpack+1)& (0+255),c
  5902  0020BA  0EFF               	movlw	255
  5903  0020BC  1418               	andwf	___ftpack@arg+2,w,c
  5904  0020BE  6E1D               	movwf	(??___ftpack+2)& (0+255),c
  5905  0020C0  501B               	movf	??___ftpack,w,c
  5906  0020C2  101C               	iorwf	??___ftpack+1,w,c
  5907  0020C4  101D               	iorwf	??___ftpack+2,w,c
  5908  0020C6  B4D8               	btfsc	status,2,c
  5909  0020C8  D006               	goto	l4476
  5910  0020CA  D7E6               	goto	l4468
  5911  0020CC                     l4474:
  5912  0020CC  0619               	decf	___ftpack@exp,f,c
  5913  0020CE  90D8               	bcf	status,0,c
  5914  0020D0  3616               	rlcf	___ftpack@arg,f,c
  5915  0020D2  3617               	rlcf	___ftpack@arg+1,f,c
  5916  0020D4  3618               	rlcf	___ftpack@arg+2,f,c
  5917  0020D6                     l4476:
  5918  0020D6  BE17               	btfsc	___ftpack@arg+1,7,c
  5919  0020D8  D003               	goto	l502
  5920  0020DA  0E02               	movlw	2
  5921  0020DC  6019               	cpfslt	___ftpack@exp,c
  5922  0020DE  D7F6               	goto	l4474
  5923  0020E0                     l502:
  5924  0020E0  A019               	btfss	___ftpack@exp,0,c
  5925  0020E2  9E17               	bcf	___ftpack@arg+1,7,c
  5926  0020E4  90D8               	bcf	status,0,c
  5927  0020E6  3219               	rrcf	___ftpack@exp,f,c
  5928  0020E8  5019               	movf	___ftpack@exp,w,c
  5929  0020EA  1218               	iorwf	___ftpack@arg+2,f,c
  5930  0020EC  501A               	movf	___ftpack@sign,w,c
  5931  0020EE  A4D8               	btfss	status,2,c
  5932  0020F0  8E18               	bsf	___ftpack@arg+2,7,c
  5933  0020F2  C016  F016         	movff	___ftpack@arg,?___ftpack
  5934  0020F6  C017  F017         	movff	___ftpack@arg+1,?___ftpack+1
  5935  0020FA  C018  F018         	movff	___ftpack@arg+2,?___ftpack+2
  5936  0020FE  0012               	return	
  5937  002100                     __end_of___ftpack:
  5938                           	opt stack 0
  5939                           tblptru	equ	0xFF8
  5940                           tblptrh	equ	0xFF7
  5941                           tblptrl	equ	0xFF6
  5942                           tablat	equ	0xFF5
  5943                           prodh	equ	0xFF4
  5944                           prodl	equ	0xFF3
  5945                           intcon	equ	0xFF2
  5946                           intcon2	equ	0xFF1
  5947                           wreg	equ	0xFE8
  5948                           indf1	equ	0xFE7
  5949                           fsr1h	equ	0xFE2
  5950                           fsr1l	equ	0xFE1
  5951                           indf2	equ	0xFDF
  5952                           postinc2	equ	0xFDE
  5953                           postdec2	equ	0xFDD
  5954                           fsr2h	equ	0xFDA
  5955                           fsr2l	equ	0xFD9
  5956                           status	equ	0xFD8
  5957                           
  5958 ;; *************** function ___awmod *****************
  5959 ;; Defined at:
  5960 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  5961 ;; Parameters:    Size  Location     Type
  5962 ;;  dividend        2   21[COMRAM] int 
  5963 ;;  divisor         2   23[COMRAM] int 
  5964 ;; Auto vars:     Size  Location     Type
  5965 ;;  sign            1   26[COMRAM] unsigned char 
  5966 ;;  counter         1   25[COMRAM] unsigned char 
  5967 ;; Return value:  Size  Location     Type
  5968 ;;                  2   21[COMRAM] int 
  5969 ;; Registers used:
  5970 ;;		wreg, status,2, status,0
  5971 ;; Tracked objects:
  5972 ;;		On entry : 0/0
  5973 ;;		On exit  : 0/0
  5974 ;;		Unchanged: 0/0
  5975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5976 ;;      Params:         4       0       0       0       0       0       0       0       0
  5977 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5978 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5979 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5980 ;;Total ram usage:        6 bytes
  5981 ;; Hardware stack levels used:    1
  5982 ;; Hardware stack levels required when called:    2
  5983 ;; This function calls:
  5984 ;;		Nothing
  5985 ;; This function is called by:
  5986 ;;		_main
  5987 ;; This function uses a non-reentrant model
  5988 ;;
  5989                           
  5990                           	psect	text22
  5991  0022B2                     __ptext22:
  5992                           	opt stack 0
  5993  0022B2                     ___awmod:
  5994                           	opt stack 28
  5995                           
  5996                           ;incstack = 0
  5997  0022B2  0E00               	movlw	0
  5998  0022B4  6E1B               	movwf	___awmod@sign,c
  5999  0022B6  AE17               	btfss	___awmod@dividend+1,7,c
  6000  0022B8  D006               	goto	l3526
  6001  0022BA  6C16               	negf	___awmod@dividend,c
  6002  0022BC  1E17               	comf	___awmod@dividend+1,f,c
  6003  0022BE  B0D8               	btfsc	status,0,c
  6004  0022C0  2A17               	incf	___awmod@dividend+1,f,c
  6005  0022C2  0E01               	movlw	1
  6006  0022C4  6E1B               	movwf	___awmod@sign,c
  6007  0022C6                     l3526:
  6008  0022C6  AE19               	btfss	___awmod@divisor+1,7,c
  6009  0022C8  D004               	goto	l3530
  6010  0022CA  6C18               	negf	___awmod@divisor,c
  6011  0022CC  1E19               	comf	___awmod@divisor+1,f,c
  6012  0022CE  B0D8               	btfsc	status,0,c
  6013  0022D0  2A19               	incf	___awmod@divisor+1,f,c
  6014  0022D2                     l3530:
  6015  0022D2  5018               	movf	___awmod@divisor,w,c
  6016  0022D4  1019               	iorwf	___awmod@divisor+1,w,c
  6017  0022D6  B4D8               	btfsc	status,2,c
  6018  0022D8  D018               	goto	l3546
  6019  0022DA  0E01               	movlw	1
  6020  0022DC  6E1A               	movwf	___awmod@counter,c
  6021  0022DE  D004               	goto	l3536
  6022  0022E0                     l3534:
  6023  0022E0  90D8               	bcf	status,0,c
  6024  0022E2  3618               	rlcf	___awmod@divisor,f,c
  6025  0022E4  3619               	rlcf	___awmod@divisor+1,f,c
  6026  0022E6  2A1A               	incf	___awmod@counter,f,c
  6027  0022E8                     l3536:
  6028  0022E8  AE19               	btfss	___awmod@divisor+1,7,c
  6029  0022EA  D7FA               	goto	l3534
  6030  0022EC                     l3538:
  6031  0022EC  5018               	movf	___awmod@divisor,w,c
  6032  0022EE  5C16               	subwf	___awmod@dividend,w,c
  6033  0022F0  5019               	movf	___awmod@divisor+1,w,c
  6034  0022F2  5817               	subwfb	___awmod@dividend+1,w,c
  6035  0022F4  A0D8               	btfss	status,0,c
  6036  0022F6  D004               	goto	l3542
  6037  0022F8  5018               	movf	___awmod@divisor,w,c
  6038  0022FA  5E16               	subwf	___awmod@dividend,f,c
  6039  0022FC  5019               	movf	___awmod@divisor+1,w,c
  6040  0022FE  5A17               	subwfb	___awmod@dividend+1,f,c
  6041  002300                     l3542:
  6042  002300  90D8               	bcf	status,0,c
  6043  002302  3219               	rrcf	___awmod@divisor+1,f,c
  6044  002304  3218               	rrcf	___awmod@divisor,f,c
  6045  002306  2E1A               	decfsz	___awmod@counter,f,c
  6046  002308  D7F1               	goto	l3538
  6047  00230A                     l3546:
  6048  00230A  501B               	movf	___awmod@sign,w,c
  6049  00230C  B4D8               	btfsc	status,2,c
  6050  00230E  D004               	goto	l3550
  6051  002310  6C16               	negf	___awmod@dividend,c
  6052  002312  1E17               	comf	___awmod@dividend+1,f,c
  6053  002314  B0D8               	btfsc	status,0,c
  6054  002316  2A17               	incf	___awmod@dividend+1,f,c
  6055  002318                     l3550:
  6056  002318  C016  F016         	movff	___awmod@dividend,?___awmod
  6057  00231C  C017  F017         	movff	___awmod@dividend+1,?___awmod+1
  6058  002320  0012               	return	
  6059  002322                     __end_of___awmod:
  6060                           	opt stack 0
  6061                           tblptru	equ	0xFF8
  6062                           tblptrh	equ	0xFF7
  6063                           tblptrl	equ	0xFF6
  6064                           tablat	equ	0xFF5
  6065                           prodh	equ	0xFF4
  6066                           prodl	equ	0xFF3
  6067                           intcon	equ	0xFF2
  6068                           intcon2	equ	0xFF1
  6069                           wreg	equ	0xFE8
  6070                           indf1	equ	0xFE7
  6071                           fsr1h	equ	0xFE2
  6072                           fsr1l	equ	0xFE1
  6073                           indf2	equ	0xFDF
  6074                           postinc2	equ	0xFDE
  6075                           postdec2	equ	0xFDD
  6076                           fsr2h	equ	0xFDA
  6077                           fsr2l	equ	0xFD9
  6078                           status	equ	0xFD8
  6079                           
  6080 ;; *************** function ___awdiv *****************
  6081 ;; Defined at:
  6082 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  6083 ;; Parameters:    Size  Location     Type
  6084 ;;  dividend        2   21[COMRAM] int 
  6085 ;;  divisor         2   23[COMRAM] int 
  6086 ;; Auto vars:     Size  Location     Type
  6087 ;;  quotient        2   27[COMRAM] int 
  6088 ;;  sign            1   26[COMRAM] unsigned char 
  6089 ;;  counter         1   25[COMRAM] unsigned char 
  6090 ;; Return value:  Size  Location     Type
  6091 ;;                  2   21[COMRAM] int 
  6092 ;; Registers used:
  6093 ;;		wreg, status,2, status,0
  6094 ;; Tracked objects:
  6095 ;;		On entry : 0/0
  6096 ;;		On exit  : 0/0
  6097 ;;		Unchanged: 0/0
  6098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6099 ;;      Params:         4       0       0       0       0       0       0       0       0
  6100 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6101 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6102 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6103 ;;Total ram usage:        8 bytes
  6104 ;; Hardware stack levels used:    1
  6105 ;; Hardware stack levels required when called:    2
  6106 ;; This function calls:
  6107 ;;		Nothing
  6108 ;; This function is called by:
  6109 ;;		_main
  6110 ;; This function uses a non-reentrant model
  6111 ;;
  6112                           
  6113                           	psect	text23
  6114  0021AE                     __ptext23:
  6115                           	opt stack 0
  6116  0021AE                     ___awdiv:
  6117                           	opt stack 28
  6118                           
  6119                           ;incstack = 0
  6120  0021AE  0E00               	movlw	0
  6121  0021B0  6E1B               	movwf	___awdiv@sign,c
  6122  0021B2  AE19               	btfss	___awdiv@divisor+1,7,c
  6123  0021B4  D006               	goto	l3482
  6124  0021B6  6C18               	negf	___awdiv@divisor,c
  6125  0021B8  1E19               	comf	___awdiv@divisor+1,f,c
  6126  0021BA  B0D8               	btfsc	status,0,c
  6127  0021BC  2A19               	incf	___awdiv@divisor+1,f,c
  6128  0021BE  0E01               	movlw	1
  6129  0021C0  6E1B               	movwf	___awdiv@sign,c
  6130  0021C2                     l3482:
  6131  0021C2  AE17               	btfss	___awdiv@dividend+1,7,c
  6132  0021C4  D006               	goto	l3488
  6133  0021C6  6C16               	negf	___awdiv@dividend,c
  6134  0021C8  1E17               	comf	___awdiv@dividend+1,f,c
  6135  0021CA  B0D8               	btfsc	status,0,c
  6136  0021CC  2A17               	incf	___awdiv@dividend+1,f,c
  6137  0021CE  0E01               	movlw	1
  6138  0021D0  1A1B               	xorwf	___awdiv@sign,f,c
  6139  0021D2                     l3488:
  6140  0021D2  0E00               	movlw	0
  6141  0021D4  6E1D               	movwf	___awdiv@quotient+1,c
  6142  0021D6  0E00               	movlw	0
  6143  0021D8  6E1C               	movwf	___awdiv@quotient,c
  6144  0021DA  5018               	movf	___awdiv@divisor,w,c
  6145  0021DC  1019               	iorwf	___awdiv@divisor+1,w,c
  6146  0021DE  B4D8               	btfsc	status,2,c
  6147  0021E0  D01C               	goto	l3510
  6148  0021E2  0E01               	movlw	1
  6149  0021E4  6E1A               	movwf	___awdiv@counter,c
  6150  0021E6  D004               	goto	l3496
  6151  0021E8                     l3494:
  6152  0021E8  90D8               	bcf	status,0,c
  6153  0021EA  3618               	rlcf	___awdiv@divisor,f,c
  6154  0021EC  3619               	rlcf	___awdiv@divisor+1,f,c
  6155  0021EE  2A1A               	incf	___awdiv@counter,f,c
  6156  0021F0                     l3496:
  6157  0021F0  AE19               	btfss	___awdiv@divisor+1,7,c
  6158  0021F2  D7FA               	goto	l3494
  6159  0021F4                     l3498:
  6160  0021F4  90D8               	bcf	status,0,c
  6161  0021F6  361C               	rlcf	___awdiv@quotient,f,c
  6162  0021F8  361D               	rlcf	___awdiv@quotient+1,f,c
  6163  0021FA  5018               	movf	___awdiv@divisor,w,c
  6164  0021FC  5C16               	subwf	___awdiv@dividend,w,c
  6165  0021FE  5019               	movf	___awdiv@divisor+1,w,c
  6166  002200  5817               	subwfb	___awdiv@dividend+1,w,c
  6167  002202  A0D8               	btfss	status,0,c
  6168  002204  D005               	goto	l3506
  6169  002206  5018               	movf	___awdiv@divisor,w,c
  6170  002208  5E16               	subwf	___awdiv@dividend,f,c
  6171  00220A  5019               	movf	___awdiv@divisor+1,w,c
  6172  00220C  5A17               	subwfb	___awdiv@dividend+1,f,c
  6173  00220E  801C               	bsf	___awdiv@quotient,0,c
  6174  002210                     l3506:
  6175  002210  90D8               	bcf	status,0,c
  6176  002212  3219               	rrcf	___awdiv@divisor+1,f,c
  6177  002214  3218               	rrcf	___awdiv@divisor,f,c
  6178  002216  2E1A               	decfsz	___awdiv@counter,f,c
  6179  002218  D7ED               	goto	l3498
  6180  00221A                     l3510:
  6181  00221A  501B               	movf	___awdiv@sign,w,c
  6182  00221C  B4D8               	btfsc	status,2,c
  6183  00221E  D004               	goto	l3514
  6184  002220  6C1C               	negf	___awdiv@quotient,c
  6185  002222  1E1D               	comf	___awdiv@quotient+1,f,c
  6186  002224  B0D8               	btfsc	status,0,c
  6187  002226  2A1D               	incf	___awdiv@quotient+1,f,c
  6188  002228                     l3514:
  6189  002228  C01C  F016         	movff	___awdiv@quotient,?___awdiv
  6190  00222C  C01D  F017         	movff	___awdiv@quotient+1,?___awdiv+1
  6191  002230  0012               	return	
  6192  002232                     __end_of___awdiv:
  6193                           	opt stack 0
  6194                           tblptru	equ	0xFF8
  6195                           tblptrh	equ	0xFF7
  6196                           tblptrl	equ	0xFF6
  6197                           tablat	equ	0xFF5
  6198                           prodh	equ	0xFF4
  6199                           prodl	equ	0xFF3
  6200                           intcon	equ	0xFF2
  6201                           intcon2	equ	0xFF1
  6202                           wreg	equ	0xFE8
  6203                           indf1	equ	0xFE7
  6204                           fsr1h	equ	0xFE2
  6205                           fsr1l	equ	0xFE1
  6206                           indf2	equ	0xFDF
  6207                           postinc2	equ	0xFDE
  6208                           postdec2	equ	0xFDD
  6209                           fsr2h	equ	0xFDA
  6210                           fsr2l	equ	0xFD9
  6211                           status	equ	0xFD8
  6212                           
  6213 ;; *************** function _Valor_ADC *****************
  6214 ;; Defined at:
  6215 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\include\adconv.h"
  6216 ;; Parameters:    Size  Location     Type
  6217 ;;  canalAdc        1    wreg     unsigned char 
  6218 ;; Auto vars:     Size  Location     Type
  6219 ;;  canalAdc        1   23[COMRAM] unsigned char 
  6220 ;;  ResultadoAdc    2   24[COMRAM] int 
  6221 ;; Return value:  Size  Location     Type
  6222 ;;                  2   21[COMRAM] int 
  6223 ;; Registers used:
  6224 ;;		wreg, status,2, status,0
  6225 ;; Tracked objects:
  6226 ;;		On entry : 0/0
  6227 ;;		On exit  : 0/0
  6228 ;;		Unchanged: 0/0
  6229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6230 ;;      Params:         2       0       0       0       0       0       0       0       0
  6231 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6232 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6233 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6234 ;;Total ram usage:        5 bytes
  6235 ;; Hardware stack levels used:    1
  6236 ;; Hardware stack levels required when called:    2
  6237 ;; This function calls:
  6238 ;;		Nothing
  6239 ;; This function is called by:
  6240 ;;		_main
  6241 ;; This function uses a non-reentrant model
  6242 ;;
  6243                           
  6244                           	psect	text24
  6245  0023D2                     __ptext24:
  6246                           	opt stack 0
  6247  0023D2                     _Valor_ADC:
  6248                           	opt stack 28
  6249                           
  6250                           ;incstack = 0
  6251                           ;Valor_ADC@canalAdc stored from wreg
  6252  0023D2  6E18               	movwf	Valor_ADC@canalAdc,c
  6253                           
  6254                           ;adconv.h: 70: int ResultadoAdc=0;
  6255  0023D4  0E00               	movlw	0
  6256  0023D6  6E1A               	movwf	Valor_ADC@ResultadoAdc+1,c
  6257  0023D8  0E00               	movlw	0
  6258  0023DA  6E19               	movwf	Valor_ADC@ResultadoAdc,c
  6259                           
  6260                           ;adconv.h: 71: ADRESH=0;
  6261  0023DC  0E00               	movlw	0
  6262  0023DE  6EC4               	movwf	4036,c	;volatile
  6263                           
  6264                           ;adconv.h: 72: ADRESL=0;
  6265  0023E0  0E00               	movlw	0
  6266  0023E2  6EC3               	movwf	4035,c	;volatile
  6267                           
  6268                           ;adconv.h: 73: ADCON0= (canalAdc<<2) | 0x01;
  6269  0023E4  4418               	rlncf	Valor_ADC@canalAdc,w,c
  6270  0023E6  46E8               	rlncf	wreg,f,c
  6271  0023E8  0BFC               	andlw	252
  6272  0023EA  0901               	iorlw	1
  6273  0023EC  6EC2               	movwf	4034,c	;volatile
  6274                           
  6275                           ;adconv.h: 74: PIR1bits.ADIF=0;
  6276  0023EE  9C9E               	bcf	3998,6,c	;volatile
  6277                           
  6278                           ;adconv.h: 75: ADCON0bits.GO=1;
  6279  0023F0  82C2               	bsf	4034,1,c	;volatile
  6280  0023F2                     l131:
  6281  0023F2  B2C2               	btfsc	4034,1,c	;volatile
  6282  0023F4  D7FE               	goto	l131
  6283                           
  6284                           ;adconv.h: 77: ResultadoAdc=ADRESH;
  6285  0023F6  CFC4 F019          	movff	4036,Valor_ADC@ResultadoAdc	;volatile
  6286  0023FA  6A1A               	clrf	Valor_ADC@ResultadoAdc+1,c
  6287                           
  6288                           ;adconv.h: 78: ResultadoAdc=ResultadoAdc<<8;
  6289  0023FC  5019               	movf	Valor_ADC@ResultadoAdc,w,c
  6290  0023FE  6E1A               	movwf	Valor_ADC@ResultadoAdc+1,c
  6291  002400  6A19               	clrf	Valor_ADC@ResultadoAdc,c
  6292                           
  6293                           ;adconv.h: 79: ResultadoAdc=ResultadoAdc | ADRESL;
  6294  002402  5019               	movf	Valor_ADC@ResultadoAdc,w,c
  6295  002404  10C3               	iorwf	4035,w,c	;volatile
  6296  002406  6E19               	movwf	Valor_ADC@ResultadoAdc,c
  6297  002408  501A               	movf	Valor_ADC@ResultadoAdc+1,w,c
  6298  00240A  6E1A               	movwf	Valor_ADC@ResultadoAdc+1,c
  6299                           
  6300                           ;adconv.h: 80: return ResultadoAdc;
  6301  00240C  C019  F016         	movff	Valor_ADC@ResultadoAdc,?_Valor_ADC
  6302  002410  C01A  F017         	movff	Valor_ADC@ResultadoAdc+1,?_Valor_ADC+1
  6303  002414  0012               	return	
  6304  002416                     __end_of_Valor_ADC:
  6305                           	opt stack 0
  6306                           tblptru	equ	0xFF8
  6307                           tblptrh	equ	0xFF7
  6308                           tblptrl	equ	0xFF6
  6309                           tablat	equ	0xFF5
  6310                           prodh	equ	0xFF4
  6311                           prodl	equ	0xFF3
  6312                           intcon	equ	0xFF2
  6313                           intcon2	equ	0xFF1
  6314                           wreg	equ	0xFE8
  6315                           indf1	equ	0xFE7
  6316                           fsr1h	equ	0xFE2
  6317                           fsr1l	equ	0xFE1
  6318                           indf2	equ	0xFDF
  6319                           postinc2	equ	0xFDE
  6320                           postdec2	equ	0xFDD
  6321                           fsr2h	equ	0xFDA
  6322                           fsr2l	equ	0xFD9
  6323                           status	equ	0xFD8
  6324                           
  6325 ;; *************** function _Config_ADC *****************
  6326 ;; Defined at:
  6327 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\include\adconv.h"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;  Justificacio    1    wreg     unsigned char 
  6330 ;;  TAD             1   21[COMRAM] unsigned char 
  6331 ;;  CanalesA        1   22[COMRAM] unsigned char 
  6332 ;; Auto vars:     Size  Location     Type
  6333 ;;  Justificacio    1   27[COMRAM] unsigned char 
  6334 ;; Return value:  Size  Location     Type
  6335 ;;		None               void
  6336 ;; Registers used:
  6337 ;;		wreg, status,2, status,0
  6338 ;; Tracked objects:
  6339 ;;		On entry : 0/0
  6340 ;;		On exit  : 0/0
  6341 ;;		Unchanged: 0/0
  6342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6343 ;;      Params:         2       0       0       0       0       0       0       0       0
  6344 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6345 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6346 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6347 ;;Total ram usage:        7 bytes
  6348 ;; Hardware stack levels used:    1
  6349 ;; Hardware stack levels required when called:    2
  6350 ;; This function calls:
  6351 ;;		Nothing
  6352 ;; This function is called by:
  6353 ;;		_main
  6354 ;; This function uses a non-reentrant model
  6355 ;;
  6356                           
  6357                           	psect	text25
  6358  0018CE                     __ptext25:
  6359                           	opt stack 0
  6360  0018CE                     _Config_ADC:
  6361                           	opt stack 28
  6362                           
  6363                           ;incstack = 0
  6364                           ;Config_ADC@Justificacion stored from wreg
  6365  0018CE  6E1C               	movwf	Config_ADC@Justificacion,c
  6366                           
  6367                           ;adconv.h: 9: ADCON2=0;
  6368  0018D0  0E00               	movlw	0
  6369  0018D2  6EC0               	movwf	4032,c	;volatile
  6370                           
  6371                           ;adconv.h: 10: ADCON1=0;
  6372  0018D4  0E00               	movlw	0
  6373  0018D6  6EC1               	movwf	4033,c	;volatile
  6374                           
  6375                           ;adconv.h: 11: ADCON0=0;
  6376  0018D8  0E00               	movlw	0
  6377  0018DA  6EC2               	movwf	4034,c	;volatile
  6378                           
  6379                           ;adconv.h: 12: if (Justificacion == 'L')
  6380  0018DC  0E4C               	movlw	76
  6381  0018DE  181C               	xorwf	Config_ADC@Justificacion,w,c
  6382  0018E0  A4D8               	btfss	status,2,c
  6383  0018E2  D002               	goto	l2998
  6384                           
  6385                           ;adconv.h: 13: ADCON2bits.ADFM=0;
  6386  0018E4  9EC0               	bcf	4032,7,c	;volatile
  6387  0018E6  D01A               	goto	l3024
  6388  0018E8                     l2998:
  6389                           
  6390                           ;adconv.h: 14: else
  6391                           ;adconv.h: 15: if (Justificacion =='R')
  6392  0018E8  0E52               	movlw	82
  6393  0018EA  181C               	xorwf	Config_ADC@Justificacion,w,c
  6394  0018EC  A4D8               	btfss	status,2,c
  6395  0018EE  D016               	goto	l3024
  6396                           
  6397                           ;adconv.h: 16: ADCON2bits.ADFM=1;
  6398  0018F0  8EC0               	bsf	4032,7,c	;volatile
  6399                           
  6400                           ;adconv.h: 17: switch (20000000)
  6401  0018F2  D014               	goto	l3024
  6402  0018F4                     L3:
  6403  0018F4  6EC0               	movwf	4032,c	;volatile
  6404                           
  6405                           ;adconv.h: 22: break;
  6406  0018F6  D0A8               	goto	l3044
  6407  0018F8                     l3006:
  6408  0018F8  50C0               	movf	4032,w,c	;volatile
  6409  0018FA  0905               	iorlw	5
  6410  0018FC  D7FB               	goto	L3
  6411  0018FE                     l3008:
  6412  0018FE  50C0               	movf	4032,w,c	;volatile
  6413  001900  0904               	iorlw	4
  6414  001902  D7F8               	goto	L3
  6415  001904                     l3014:
  6416  001904  50C0               	movf	4032,w,c	;volatile
  6417  001906  0902               	iorlw	2
  6418  001908  D7F5               	goto	L3
  6419  00190A                     l3018:
  6420  00190A  50C0               	movf	4032,w,c	;volatile
  6421  00190C  0901               	iorlw	1
  6422  00190E  D7F2               	goto	L3
  6423  001910                     l115:
  6424  001910  CFC0 FFC0          	movff	4032,4032	;volatile
  6425                           
  6426                           ;adconv.h: 38: break;
  6427  001914  D099               	goto	l3044
  6428  001916                     l3020:
  6429  001916  50C0               	movf	4032,w,c	;volatile
  6430  001918  0906               	iorlw	6
  6431  00191A  D7EC               	goto	L3
  6432  00191C                     l3024:
  6433  00191C  0E00               	movlw	0
  6434  00191E  6E18               	movwf	??_Config_ADC& (0+255),c
  6435  001920  0E2D               	movlw	45
  6436  001922  6E19               	movwf	(??_Config_ADC+1)& (0+255),c
  6437  001924  0E31               	movlw	49
  6438  001926  6E1A               	movwf	(??_Config_ADC+2)& (0+255),c
  6439  001928  0E01               	movlw	1
  6440  00192A  6E1B               	movwf	(??_Config_ADC+3)& (0+255),c
  6441                           
  6442                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 13 sub-s
      +                          witches
  6443                           ; Switch size 1, requested type "space"
  6444                           ; Number of cases is 3, Range of values is 0 to 2
  6445                           ; switch strategies available:
  6446                           ; Name         Instructions Cycles
  6447                           ; simple_byte           10     6 (average)
  6448                           ;	Chosen strategy is simple_byte
  6449  00192C  501B               	movf	??_Config_ADC+3,w,c
  6450  00192E  0A00               	xorlw	0	; case 0
  6451  001930  B4D8               	btfsc	status,2,c
  6452  001932  D04D               	goto	l5618
  6453  001934  0A01               	xorlw	1	; case 1
  6454  001936  B4D8               	btfsc	status,2,c
  6455  001938  D05B               	goto	l5620
  6456  00193A  0A03               	xorlw	3	; case 2
  6457  00193C  B4D8               	btfsc	status,2,c
  6458  00193E  D063               	goto	l5622
  6459  001940  D7EA               	goto	l3020
  6460  001942                     l5598:
  6461                           
  6462                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6463                           ; Switch size 1, requested type "space"
  6464                           ; Number of cases is 1, Range of values is 37 to 37
  6465                           ; switch strategies available:
  6466                           ; Name         Instructions Cycles
  6467                           ; simple_byte            4     3 (average)
  6468                           ;	Chosen strategy is simple_byte
  6469  001942  5019               	movf	??_Config_ADC+1,w,c
  6470  001944  0A25               	xorlw	37	; case 37
  6471  001946  A4D8               	btfss	status,2,c
  6472  001948  D7E6               	goto	l3020
  6473                           
  6474                           ; Switch size 1, requested type "space"
  6475                           ; Number of cases is 1, Range of values is 160 to 160
  6476                           ; switch strategies available:
  6477                           ; Name         Instructions Cycles
  6478                           ; simple_byte            4     3 (average)
  6479                           ;	Chosen strategy is simple_byte
  6480  00194A  5018               	movf	??_Config_ADC,w,c
  6481  00194C  0AA0               	xorlw	160	; case 160
  6482  00194E  B4D8               	btfsc	status,2,c
  6483  001950  D7DF               	goto	l115
  6484  001952  D7E1               	goto	l3020
  6485  001954                     l5600:
  6486                           
  6487                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6488                           ; Switch size 1, requested type "space"
  6489                           ; Number of cases is 1, Range of values is 75 to 75
  6490                           ; switch strategies available:
  6491                           ; Name         Instructions Cycles
  6492                           ; simple_byte            4     3 (average)
  6493                           ;	Chosen strategy is simple_byte
  6494  001954  5019               	movf	??_Config_ADC+1,w,c
  6495  001956  0A4B               	xorlw	75	; case 75
  6496  001958  A4D8               	btfss	status,2,c
  6497  00195A  D7DD               	goto	l3020
  6498                           
  6499                           ; Switch size 1, requested type "space"
  6500                           ; Number of cases is 1, Range of values is 64 to 64
  6501                           ; switch strategies available:
  6502                           ; Name         Instructions Cycles
  6503                           ; simple_byte            4     3 (average)
  6504                           ;	Chosen strategy is simple_byte
  6505  00195C  5018               	movf	??_Config_ADC,w,c
  6506  00195E  0A40               	xorlw	64	; case 64
  6507  001960  B4D8               	btfsc	status,2,c
  6508  001962  D7CD               	goto	l3008
  6509  001964  D7D8               	goto	l3020
  6510  001966                     l5602:
  6511                           
  6512                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6513                           ; Switch size 1, requested type "space"
  6514                           ; Number of cases is 1, Range of values is 198 to 198
  6515                           ; switch strategies available:
  6516                           ; Name         Instructions Cycles
  6517                           ; simple_byte            4     3 (average)
  6518                           ;	Chosen strategy is simple_byte
  6519  001966  5019               	movf	??_Config_ADC+1,w,c
  6520  001968  0AC6               	xorlw	198	; case 198
  6521  00196A  A4D8               	btfss	status,2,c
  6522  00196C  D7D4               	goto	l3020
  6523                           
  6524                           ; Switch size 1, requested type "space"
  6525                           ; Number of cases is 1, Range of values is 176 to 176
  6526                           ; switch strategies available:
  6527                           ; Name         Instructions Cycles
  6528                           ; simple_byte            4     3 (average)
  6529                           ;	Chosen strategy is simple_byte
  6530  00196E  5018               	movf	??_Config_ADC,w,c
  6531  001970  0AB0               	xorlw	176	; case 176
  6532  001972  B4D8               	btfsc	status,2,c
  6533  001974  D7CA               	goto	l3018
  6534  001976  D7CF               	goto	l3020
  6535  001978                     l5604:
  6536                           
  6537                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6538                           ; Switch size 1, requested type "space"
  6539                           ; Number of cases is 1, Range of values is 150 to 150
  6540                           ; switch strategies available:
  6541                           ; Name         Instructions Cycles
  6542                           ; simple_byte            4     3 (average)
  6543                           ;	Chosen strategy is simple_byte
  6544  001978  5019               	movf	??_Config_ADC+1,w,c
  6545  00197A  0A96               	xorlw	150	; case 150
  6546  00197C  A4D8               	btfss	status,2,c
  6547  00197E  D7CB               	goto	l3020
  6548                           
  6549                           ; Switch size 1, requested type "space"
  6550                           ; Number of cases is 1, Range of values is 128 to 128
  6551                           ; switch strategies available:
  6552                           ; Name         Instructions Cycles
  6553                           ; simple_byte            4     3 (average)
  6554                           ;	Chosen strategy is simple_byte
  6555  001980  5018               	movf	??_Config_ADC,w,c
  6556  001982  0A80               	xorlw	128	; case 128
  6557  001984  D7F6               	goto	L12
  6558  001986                     l5606:
  6559                           
  6560                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6561                           ; Switch size 1, requested type "space"
  6562                           ; Number of cases is 1, Range of values is 36 to 36
  6563                           ; switch strategies available:
  6564                           ; Name         Instructions Cycles
  6565                           ; simple_byte            4     3 (average)
  6566                           ;	Chosen strategy is simple_byte
  6567  001986  5019               	movf	??_Config_ADC+1,w,c
  6568  001988  0A24               	xorlw	36	; case 36
  6569  00198A  A4D8               	btfss	status,2,c
  6570  00198C  D7C4               	goto	l3020
  6571  00198E  D003               	goto	l5634
  6572  001990                     l5608:
  6573                           
  6574                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6575                           ; Switch size 1, requested type "space"
  6576                           ; Number of cases is 1, Range of values is 45 to 45
  6577                           ; switch strategies available:
  6578                           ; Name         Instructions Cycles
  6579                           ; simple_byte            4     3 (average)
  6580                           ;	Chosen strategy is simple_byte
  6581  001990  5019               	movf	??_Config_ADC+1,w,c
  6582  001992  0A2D               	xorlw	45	; case 45
  6583  001994  D7FA               	goto	L4
  6584  001996                     l5634:
  6585                           
  6586                           ; Switch size 1, requested type "space"
  6587                           ; Number of cases is 1, Range of values is 0 to 0
  6588                           ; switch strategies available:
  6589                           ; Name         Instructions Cycles
  6590                           ; simple_byte            4     3 (average)
  6591                           ;	Chosen strategy is simple_byte
  6592  001996  5018               	movf	??_Config_ADC,w,c
  6593  001998  0A00               	xorlw	0	; case 0
  6594  00199A  B4D8               	btfsc	status,2,c
  6595  00199C  D7AD               	goto	l3006
  6596  00199E  D7BB               	goto	l3020
  6597  0019A0                     l5610:
  6598                           
  6599                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6600                           ; Switch size 1, requested type "space"
  6601                           ; Number of cases is 1, Range of values is 54 to 54
  6602                           ; switch strategies available:
  6603                           ; Name         Instructions Cycles
  6604                           ; simple_byte            4     3 (average)
  6605                           ;	Chosen strategy is simple_byte
  6606  0019A0  5019               	movf	??_Config_ADC+1,w,c
  6607  0019A2  0A36               	xorlw	54	; case 54
  6608  0019A4  D00A               	goto	L14
  6609  0019A6                     l5612:
  6610                           
  6611                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6612                           ; Switch size 1, requested type "space"
  6613                           ; Number of cases is 1, Range of values is 72 to 72
  6614                           ; switch strategies available:
  6615                           ; Name         Instructions Cycles
  6616                           ; simple_byte            4     3 (average)
  6617                           ;	Chosen strategy is simple_byte
  6618  0019A6  5019               	movf	??_Config_ADC+1,w,c
  6619  0019A8  0A48               	xorlw	72	; case 72
  6620  0019AA  D007               	goto	L14
  6621  0019AC                     l5638:
  6622                           
  6623                           ; Switch size 1, requested type "space"
  6624                           ; Number of cases is 1, Range of values is 0 to 0
  6625                           ; switch strategies available:
  6626                           ; Name         Instructions Cycles
  6627                           ; simple_byte            4     3 (average)
  6628                           ;	Chosen strategy is simple_byte
  6629  0019AC  5018               	movf	??_Config_ADC,w,c
  6630  0019AE  0A00               	xorlw	0	; case 0
  6631  0019B0  B4D8               	btfsc	status,2,c
  6632  0019B2  D7A8               	goto	l3014
  6633  0019B4  D7B0               	goto	l3020
  6634  0019B6                     l5614:
  6635                           
  6636                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6637                           ; Switch size 1, requested type "space"
  6638                           ; Number of cases is 1, Range of values is 90 to 90
  6639                           ; switch strategies available:
  6640                           ; Name         Instructions Cycles
  6641                           ; simple_byte            4     3 (average)
  6642                           ;	Chosen strategy is simple_byte
  6643  0019B6  5019               	movf	??_Config_ADC+1,w,c
  6644  0019B8  0A5A               	xorlw	90	; case 90
  6645  0019BA                     L14:
  6646  0019BA  A4D8               	btfss	status,2,c
  6647  0019BC  D7AC               	goto	l3020
  6648  0019BE  D7F6               	goto	l5638
  6649  0019C0                     l5616:
  6650                           
  6651                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6652                           ; Switch size 1, requested type "space"
  6653                           ; Number of cases is 1, Range of values is 108 to 108
  6654                           ; switch strategies available:
  6655                           ; Name         Instructions Cycles
  6656                           ; simple_byte            4     3 (average)
  6657                           ;	Chosen strategy is simple_byte
  6658  0019C0  5019               	movf	??_Config_ADC+1,w,c
  6659  0019C2  0A6C               	xorlw	108	; case 108
  6660  0019C4  A4D8               	btfss	status,2,c
  6661  0019C6  D7A7               	goto	l3020
  6662                           
  6663                           ; Switch size 1, requested type "space"
  6664                           ; Number of cases is 1, Range of values is 0 to 0
  6665                           ; switch strategies available:
  6666                           ; Name         Instructions Cycles
  6667                           ; simple_byte            4     3 (average)
  6668                           ;	Chosen strategy is simple_byte
  6669  0019C8  5018               	movf	??_Config_ADC,w,c
  6670  0019CA  0A00               	xorlw	0	; case 0
  6671  0019CC  D7A4               	goto	l3020
  6672  0019CE                     l5618:
  6673                           
  6674                           ; Switch size 1, requested type "space"
  6675                           ; Number of cases is 5, Range of values is 38 to 244
  6676                           ; switch strategies available:
  6677                           ; Name         Instructions Cycles
  6678                           ; simple_byte           16     9 (average)
  6679                           ;	Chosen strategy is simple_byte
  6680  0019CE  501A               	movf	??_Config_ADC+2,w,c
  6681  0019D0  0A26               	xorlw	38	; case 38
  6682  0019D2  B4D8               	btfsc	status,2,c
  6683  0019D4  D7B6               	goto	l5598
  6684  0019D6  0A6A               	xorlw	106	; case 76
  6685  0019D8  B4D8               	btfsc	status,2,c
  6686  0019DA  D7BC               	goto	l5600
  6687  0019DC  0A29               	xorlw	41	; case 101
  6688  0019DE  B4D8               	btfsc	status,2,c
  6689  0019E0  D7C2               	goto	l5602
  6690  0019E2  0AFD               	xorlw	253	; case 152
  6691  0019E4  B4D8               	btfsc	status,2,c
  6692  0019E6  D7C8               	goto	l5604
  6693  0019E8  0A6C               	xorlw	108	; case 244
  6694  0019EA  B4D8               	btfsc	status,2,c
  6695  0019EC  D7CC               	goto	l5606
  6696  0019EE  D793               	goto	l3020
  6697  0019F0                     l5620:
  6698                           
  6699                           ; Switch size 1, requested type "space"
  6700                           ; Number of cases is 3, Range of values is 49 to 232
  6701                           ; switch strategies available:
  6702                           ; Name         Instructions Cycles
  6703                           ; simple_byte           10     6 (average)
  6704                           ;	Chosen strategy is simple_byte
  6705  0019F0  501A               	movf	??_Config_ADC+2,w,c
  6706  0019F2  0A31               	xorlw	49	; case 49
  6707  0019F4  B4D8               	btfsc	status,2,c
  6708  0019F6  D7CC               	goto	l5608
  6709  0019F8  0A5F               	xorlw	95	; case 110
  6710  0019FA  B4D8               	btfsc	status,2,c
  6711  0019FC  D7D1               	goto	l5610
  6712  0019FE  0A86               	xorlw	134	; case 232
  6713  001A00  B4D8               	btfsc	status,2,c
  6714  001A02  D7D1               	goto	l5612
  6715  001A04  D788               	goto	l3020
  6716  001A06                     l5622:
  6717                           
  6718                           ; Switch size 1, requested type "space"
  6719                           ; Number of cases is 2, Range of values is 98 to 220
  6720                           ; switch strategies available:
  6721                           ; Name         Instructions Cycles
  6722                           ; simple_byte            7     4 (average)
  6723                           ;	Chosen strategy is simple_byte
  6724  001A06  501A               	movf	??_Config_ADC+2,w,c
  6725  001A08  0A62               	xorlw	98	; case 98
  6726  001A0A  B4D8               	btfsc	status,2,c
  6727  001A0C  D7D4               	goto	l5614
  6728  001A0E  0ABE               	xorlw	190	; case 220
  6729  001A10  B4D8               	btfsc	status,2,c
  6730  001A12  D7D6               	goto	l5616
  6731  001A14  D780               	goto	l3020
  6732  001A16                     l3028:
  6733  001A16  50C0               	movf	4032,w,c	;volatile
  6734  001A18  0930               	iorlw	48
  6735  001A1A  D014               	goto	L11
  6736  001A1C                     l3030:
  6737  001A1C  50C0               	movf	4032,w,c	;volatile
  6738  001A1E  0928               	iorlw	40
  6739  001A20  D011               	goto	L11
  6740  001A22                     l3032:
  6741  001A22  50C0               	movf	4032,w,c	;volatile
  6742  001A24  0920               	iorlw	32
  6743  001A26  D00E               	goto	L11
  6744  001A28                     l3034:
  6745  001A28  50C0               	movf	4032,w,c	;volatile
  6746  001A2A  0918               	iorlw	24
  6747  001A2C  D00B               	goto	L11
  6748  001A2E                     l3036:
  6749  001A2E  50C0               	movf	4032,w,c	;volatile
  6750  001A30  0910               	iorlw	16
  6751  001A32  D008               	goto	L11
  6752  001A34                     l3038:
  6753  001A34  50C0               	movf	4032,w,c	;volatile
  6754  001A36  0908               	iorlw	8
  6755  001A38  D005               	goto	L11
  6756  001A3A                     l126:
  6757  001A3A  CFC0 FFC0          	movff	4032,4032	;volatile
  6758                           
  6759                           ;adconv.h: 59: break;
  6760  001A3E  D01C               	goto	l3046
  6761  001A40                     l3040:
  6762  001A40  50C0               	movf	4032,w,c	;volatile
  6763  001A42  0938               	iorlw	56
  6764  001A44                     L11:
  6765  001A44  6EC0               	movwf	4032,c	;volatile
  6766                           
  6767                           ;adconv.h: 62: }
  6768                           
  6769                           ;adconv.h: 61: break;
  6770  001A46  D018               	goto	l3046
  6771  001A48                     l3044:
  6772  001A48  5016               	movf	Config_ADC@TAD,w,c
  6773                           
  6774                           ; Switch size 1, requested type "space"
  6775                           ; Number of cases is 8, Range of values is 0 to 20
  6776                           ; switch strategies available:
  6777                           ; Name         Instructions Cycles
  6778                           ; simple_byte           25    13 (average)
  6779                           ;	Chosen strategy is simple_byte
  6780  001A4A  0A00               	xorlw	0	; case 0
  6781  001A4C  B4D8               	btfsc	status,2,c
  6782  001A4E  D7F5               	goto	l126
  6783  001A50  0A02               	xorlw	2	; case 2
  6784  001A52  B4D8               	btfsc	status,2,c
  6785  001A54  D7EF               	goto	l3038
  6786  001A56  0A06               	xorlw	6	; case 4
  6787  001A58  B4D8               	btfsc	status,2,c
  6788  001A5A  D7E9               	goto	l3036
  6789  001A5C  0A02               	xorlw	2	; case 6
  6790  001A5E  B4D8               	btfsc	status,2,c
  6791  001A60  D7E3               	goto	l3034
  6792  001A62  0A0E               	xorlw	14	; case 8
  6793  001A64  B4D8               	btfsc	status,2,c
  6794  001A66  D7DD               	goto	l3032
  6795  001A68  0A04               	xorlw	4	; case 12
  6796  001A6A  B4D8               	btfsc	status,2,c
  6797  001A6C  D7D7               	goto	l3030
  6798  001A6E  0A1C               	xorlw	28	; case 16
  6799  001A70  B4D8               	btfsc	status,2,c
  6800  001A72  D7D1               	goto	l3028
  6801  001A74  0A04               	xorlw	4	; case 20
  6802  001A76  D7E4               	goto	l3040
  6803  001A78                     l3046:
  6804                           
  6805                           ;adconv.h: 63: ADCON1=14-CanalesA;
  6806  001A78  5017               	movf	Config_ADC@CanalesA,w,c
  6807  001A7A  0800               	sublw	0
  6808  001A7C  0F0E               	addlw	14
  6809  001A7E  6EC1               	movwf	4033,c	;volatile
  6810                           
  6811                           ;adconv.h: 64: ADCON0=1;
  6812  001A80  0E01               	movlw	1
  6813  001A82  6EC2               	movwf	4034,c	;volatile
  6814                           
  6815                           ;adconv.h: 65: PIR1bits.ADIF=0;
  6816  001A84  9C9E               	bcf	3998,6,c	;volatile
  6817  001A86  0012               	return		;funcret
  6818  001A88                     __end_of_Config_ADC:
  6819                           	opt stack 0
  6820                           tblptru	equ	0xFF8
  6821                           tblptrh	equ	0xFF7
  6822                           tblptrl	equ	0xFF6
  6823                           tablat	equ	0xFF5
  6824                           prodh	equ	0xFF4
  6825                           prodl	equ	0xFF3
  6826                           intcon	equ	0xFF2
  6827                           intcon2	equ	0xFF1
  6828                           wreg	equ	0xFE8
  6829                           indf1	equ	0xFE7
  6830                           fsr1h	equ	0xFE2
  6831                           fsr1l	equ	0xFE1
  6832                           indf2	equ	0xFDF
  6833                           postinc2	equ	0xFDE
  6834                           postdec2	equ	0xFDD
  6835                           fsr2h	equ	0xFDA
  6836                           fsr2l	equ	0xFD9
  6837                           status	equ	0xFD8
  6838                           
  6839 ;; *************** function _isr *****************
  6840 ;; Defined at:
  6841 ;;		line 76 in file "proyecto.c"
  6842 ;; Parameters:    Size  Location     Type
  6843 ;;		None
  6844 ;; Auto vars:     Size  Location     Type
  6845 ;;		None
  6846 ;; Return value:  Size  Location     Type
  6847 ;;		None               void
  6848 ;; Registers used:
  6849 ;;		wreg, status,2, status,0, cstack
  6850 ;; Tracked objects:
  6851 ;;		On entry : 0/0
  6852 ;;		On exit  : 0/0
  6853 ;;		Unchanged: 0/0
  6854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6855 ;;      Params:         0       0       0       0       0       0       0       0       0
  6856 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6857 ;;      Temps:         14       0       0       0       0       0       0       0       0
  6858 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6859 ;;Total ram usage:       14 bytes
  6860 ;; Hardware stack levels used:    1
  6861 ;; Hardware stack levels required when called:    1
  6862 ;; This function calls:
  6863 ;;		_leer_tecla_d
  6864 ;; This function is called by:
  6865 ;;		Interrupt level 2
  6866 ;; This function uses a non-reentrant model
  6867 ;;
  6868                           
  6869                           	psect	intcode
  6870  000008                     __pintcode:
  6871                           	opt stack 0
  6872  000008                     _isr:
  6873                           	opt stack 26
  6874                           
  6875                           ;incstack = 0
  6876  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6877  00000A  CFFA F008          	movff	pclath,??_isr
  6878  00000E  CFFB F009          	movff	pclatu,??_isr+1
  6879  000012  ED80  F010         	call	int_func,f	;refresh shadow registers
  6880                           pclatu	equ	0xFFB
  6881                           pclath	equ	0xFFA
  6882                           tblptru	equ	0xFF8
  6883                           tblptrh	equ	0xFF7
  6884                           tblptrl	equ	0xFF6
  6885                           tablat	equ	0xFF5
  6886                           prodh	equ	0xFF4
  6887                           prodl	equ	0xFF3
  6888                           intcon	equ	0xFF2
  6889                           intcon2	equ	0xFF1
  6890                           wreg	equ	0xFE8
  6891                           indf1	equ	0xFE7
  6892                           fsr1h	equ	0xFE2
  6893                           fsr1l	equ	0xFE1
  6894                           indf2	equ	0xFDF
  6895                           postinc2	equ	0xFDE
  6896                           postdec2	equ	0xFDD
  6897                           fsr2h	equ	0xFDA
  6898                           fsr2l	equ	0xFD9
  6899                           status	equ	0xFD8
  6900                           
  6901                           	psect	intcode_body
  6902  002100                     __pintcode_body:
  6903                           	opt stack 26
  6904  002100                     int_func:
  6905                           	opt stack 26
  6906  002100  0006               	pop		; remove dummy address from shadow register refresh
  6907  002102  CFE9 F00A          	movff	fsr0l,??_isr+2
  6908  002106  CFEA F00B          	movff	fsr0h,??_isr+3
  6909  00210A  CFE1 F00C          	movff	fsr1l,??_isr+4
  6910  00210E  CFE2 F00D          	movff	fsr1h,??_isr+5
  6911  002112  CFD9 F00E          	movff	fsr2l,??_isr+6
  6912  002116  CFDA F00F          	movff	fsr2h,??_isr+7
  6913  00211A  CFF3 F010          	movff	prodl,??_isr+8
  6914  00211E  CFF4 F011          	movff	prodh,??_isr+9
  6915  002122  CFF6 F012          	movff	tblptrl,??_isr+10
  6916  002126  CFF7 F013          	movff	tblptrh,??_isr+11
  6917  00212A  CFF8 F014          	movff	tblptru,??_isr+12
  6918  00212E  CFF5 F015          	movff	tablat,??_isr+13
  6919                           
  6920                           ;proyecto.c: 77: if(TMR0IF==1){
  6921  002132  A4F2               	btfss	intcon,2,c	;volatile
  6922  002134  D011               	goto	i2l3570
  6923                           
  6924                           ;proyecto.c: 78: menu++;
  6925  002136  0100               	movlb	0	; () banked
  6926  002138  4BA3               	infsnz	_menu& (0+255),f,b
  6927  00213A  2BA4               	incf	(_menu+1)& (0+255),f,b
  6928                           
  6929                           ; BSR set to: 0
  6930                           ;proyecto.c: 79: if(tecla==16){
  6931  00213C  0E10               	movlw	16
  6932  00213E  1848               	xorwf	_tecla,w,c
  6933  002140  1049               	iorwf	_tecla+1,w,c
  6934  002142  A4D8               	btfss	status,2,c
  6935  002144  D004               	goto	i2l3566
  6936                           
  6937                           ; BSR set to: 0
  6938                           ;proyecto.c: 80: tiempo--;
  6939  002146  0100               	movlb	0	; () banked
  6940  002148  07A5               	decf	_tiempo& (0+255),f,b
  6941  00214A  A0D8               	btfss	status,0,c
  6942  00214C  07A6               	decf	(_tiempo+1)& (0+255),f,b
  6943  00214E                     i2l3566:
  6944                           
  6945                           ; BSR set to: 0
  6946                           ;proyecto.c: 81: }
  6947                           ;proyecto.c: 82: TMR0=46005;
  6948  00214E  0EB3               	movlw	179
  6949  002150  6ED7               	movwf	4055,c	;volatile
  6950  002152  0EB5               	movlw	181
  6951  002154  6ED6               	movwf	4054,c	;volatile
  6952                           
  6953                           ; BSR set to: 0
  6954                           ;proyecto.c: 83: TMR0IF=0;
  6955  002156  94F2               	bcf	intcon,2,c	;volatile
  6956  002158                     i2l3570:
  6957                           
  6958                           ;proyecto.c: 84: }
  6959                           ;proyecto.c: 85: if(RBIF==1){
  6960  002158  A0F2               	btfss	intcon,0,c	;volatile
  6961  00215A  D00B               	goto	i2l168
  6962                           
  6963                           ;proyecto.c: 86: tecla=leer_tecla_d();
  6964  00215C  ECB1  F00E         	call	_leer_tecla_d	;wreg free
  6965  002160  C001  F048         	movff	?_leer_tecla_d,_tecla
  6966  002164  C002  F049         	movff	?_leer_tecla_d+1,_tecla+1
  6967                           
  6968                           ;proyecto.c: 87: PORTB=PORTB;
  6969  002168  CF81 FF81          	movff	3969,3969	;volatile
  6970                           
  6971                           ;proyecto.c: 88: PORTB=0;
  6972  00216C  0E00               	movlw	0
  6973  00216E  6E81               	movwf	3969,c	;volatile
  6974                           
  6975                           ;proyecto.c: 89: RBIF=0;
  6976  002170  90F2               	bcf	intcon,0,c	;volatile
  6977  002172                     i2l168:
  6978  002172  C015  FFF5         	movff	??_isr+13,tablat
  6979  002176  C014  FFF8         	movff	??_isr+12,tblptru
  6980  00217A  C013  FFF7         	movff	??_isr+11,tblptrh
  6981  00217E  C012  FFF6         	movff	??_isr+10,tblptrl
  6982  002182  C011  FFF4         	movff	??_isr+9,prodh
  6983  002186  C010  FFF3         	movff	??_isr+8,prodl
  6984  00218A  C00F  FFDA         	movff	??_isr+7,fsr2h
  6985  00218E  C00E  FFD9         	movff	??_isr+6,fsr2l
  6986  002192  C00D  FFE2         	movff	??_isr+5,fsr1h
  6987  002196  C00C  FFE1         	movff	??_isr+4,fsr1l
  6988  00219A  C00B  FFEA         	movff	??_isr+3,fsr0h
  6989  00219E  C00A  FFE9         	movff	??_isr+2,fsr0l
  6990  0021A2  C009  FFFB         	movff	??_isr+1,pclatu
  6991  0021A6  C008  FFFA         	movff	??_isr,pclath
  6992  0021AA  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6993  0021AC  0011               	retfie		f
  6994  0021AE                     __end_of_isr:
  6995                           	opt stack 0
  6996                           pclatu	equ	0xFFB
  6997                           pclath	equ	0xFFA
  6998                           tblptru	equ	0xFF8
  6999                           tblptrh	equ	0xFF7
  7000                           tblptrl	equ	0xFF6
  7001                           tablat	equ	0xFF5
  7002                           prodh	equ	0xFF4
  7003                           prodl	equ	0xFF3
  7004                           intcon	equ	0xFF2
  7005                           intcon2	equ	0xFF1
  7006                           fsr0h	equ	0xFEA
  7007                           fsr0l	equ	0xFE9
  7008                           wreg	equ	0xFE8
  7009                           indf1	equ	0xFE7
  7010                           fsr1h	equ	0xFE2
  7011                           fsr1l	equ	0xFE1
  7012                           indf2	equ	0xFDF
  7013                           postinc2	equ	0xFDE
  7014                           postdec2	equ	0xFDD
  7015                           fsr2h	equ	0xFDA
  7016                           fsr2l	equ	0xFD9
  7017                           status	equ	0xFD8
  7018                           
  7019 ;; *************** function _leer_tecla_d *****************
  7020 ;; Defined at:
  7021 ;;		line 20 in file "proyecto.c"
  7022 ;; Parameters:    Size  Location     Type
  7023 ;;		None
  7024 ;; Auto vars:     Size  Location     Type
  7025 ;;  t               2    3[COMRAM] int 
  7026 ;;  tecla_teclad    2    5[COMRAM] int 
  7027 ;; Return value:  Size  Location     Type
  7028 ;;                  2    0[COMRAM] int 
  7029 ;; Registers used:
  7030 ;;		wreg, status,2, status,0
  7031 ;; Tracked objects:
  7032 ;;		On entry : 0/0
  7033 ;;		On exit  : 0/0
  7034 ;;		Unchanged: 0/0
  7035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7036 ;;      Params:         2       0       0       0       0       0       0       0       0
  7037 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7038 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7039 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7040 ;;Total ram usage:        7 bytes
  7041 ;; Hardware stack levels used:    1
  7042 ;; This function calls:
  7043 ;;		Nothing
  7044 ;; This function is called by:
  7045 ;;		_isr
  7046 ;; This function uses a non-reentrant model
  7047 ;;
  7048                           
  7049                           	psect	text27
  7050  001D62                     __ptext27:
  7051                           	opt stack 0
  7052  001D62                     _leer_tecla_d:
  7053                           	opt stack 26
  7054                           
  7055                           ;proyecto.c: 22: int tecla_teclado;
  7056                           ;proyecto.c: 24: tecla_teclado=255;
  7057                           
  7058                           ;incstack = 0
  7059  001D62  0E00               	movlw	0
  7060  001D64  6E07               	movwf	leer_tecla_d@tecla_teclado+1,c
  7061  001D66  6806               	setf	leer_tecla_d@tecla_teclado,c
  7062                           
  7063                           ;proyecto.c: 26: PORTB=0X0E;
  7064  001D68  0E0E               	movlw	14
  7065  001D6A  6E81               	movwf	3969,c	;volatile
  7066                           
  7067                           ;proyecto.c: 27: if (PORTBbits.RB4==0)
  7068  001D6C  B881               	btfsc	3969,4,c	;volatile
  7069  001D6E  D004               	goto	i2l3166
  7070                           
  7071                           ;proyecto.c: 28: tecla_teclado=1;
  7072  001D70  0E00               	movlw	0
  7073  001D72  6E07               	movwf	leer_tecla_d@tecla_teclado+1,c
  7074  001D74  0E01               	movlw	1
  7075  001D76  6E06               	movwf	leer_tecla_d@tecla_teclado,c
  7076  001D78                     i2l3166:
  7077                           
  7078                           ;proyecto.c: 29: if (PORTBbits.RB5==0)
  7079  001D78  BA81               	btfsc	3969,5,c	;volatile
  7080  001D7A  D004               	goto	i2l3170
  7081                           
  7082                           ;proyecto.c: 30: tecla_teclado=2;
  7083  001D7C  0E00               	movlw	0
  7084  001D7E  6E07               	movwf	leer_tecla_d@tecla_teclado+1,c
  7085  001D80  0E02               	movlw	2
  7086  001D82  6E06               	movwf	leer_tecla_d@tecla_teclado,c
  7087  001D84                     i2l3170:
  7088                           
  7089                           ;proyecto.c: 31: if (PORTBbits.RB6==0)
  7090  001D84  BC81               	btfsc	3969,6,c	;volatile
  7091  001D86  D004               	goto	i2l3174
  7092                           
  7093                           ;proyecto.c: 32: tecla_teclado=3;
  7094  001D88  0E00               	movlw	0
  7095  001D8A  6E07               	movwf	leer_tecla_d@tecla_teclado+1,c
  7096  001D8C  0E03               	movlw	3
  7097  001D8E  6E06               	movwf	leer_tecla_d@tecla_teclado,c
  7098  001D90                     i2l3174:
  7099                           
  7100                           ;proyecto.c: 33: if (PORTBbits.RB7==0)
  7101  001D90  BE81               	btfsc	3969,7,c	;volatile
  7102  001D92  D004               	goto	i2l146
  7103                           
  7104                           ;proyecto.c: 34: tecla_teclado=10;
  7105  001D94  0E00               	movlw	0
  7106  001D96  6E07               	movwf	leer_tecla_d@tecla_teclado+1,c
  7107  001D98  0E0A               	movlw	10
  7108  001D9A  6E06               	movwf	leer_tecla_d@tecla_teclado,c
  7109  001D9C                     i2l146:
  7110                           
  7111                           ;proyecto.c: 36: PORTB=0X0D;
  7112  001D9C  0E0D               	movlw	13
  7113  001D9E  6E81               	movwf	3969,c	;volatile
  7114                           
  7115                           ;proyecto.c: 37: if (PORTBbits.RB4==0)
  7116  001DA0  B881               	btfsc	3969,4,c	;volatile
  7117  001DA2  D004               	goto	i2l3182
  7118                           
  7119                           ;proyecto.c: 38: tecla_teclado=4;
  7120  001DA4  0E00               	movlw	0
  7121  001DA6  6E07               	movwf	leer_tecla_d@tecla_teclado+1,c
  7122  001DA8  0E04               	movlw	4
  7123  001DAA  6E06               	movwf	leer_tecla_d@tecla_teclado,c
  7124  001DAC                     i2l3182:
  7125                           
  7126                           ;proyecto.c: 39: if (PORTBbits.RB5==0)
  7127  001DAC  BA81               	btfsc	3969,5,c	;volatile
  7128  001DAE  D004               	goto	i2l3186
  7129                           
  7130                           ;proyecto.c: 40: tecla_teclado=5;
  7131  001DB0  0E00               	movlw	0
  7132  001DB2  6E07               	movwf	leer_tecla_d@tecla_teclado+1,c
  7133  001DB4  0E05               	movlw	5
  7134  001DB6  6E06               	movwf	leer_tecla_d@tecla_teclado,c
  7135  001DB8                     i2l3186:
  7136                           
  7137                           ;proyecto.c: 41: if (PORTBbits.RB6==0)
  7138  001DB8  BC81               	btfsc	3969,6,c	;volatile
  7139  001DBA  D004               	goto	i2l3190
  7140                           
  7141                           ;proyecto.c: 42: tecla_teclado=6;
  7142  001DBC  0E00               	movlw	0
  7143  001DBE  6E07               	movwf	leer_tecla_d@tecla_teclado+1,c
  7144  001DC0  0E06               	movlw	6
  7145  001DC2  6E06               	movwf	leer_tecla_d@tecla_teclado,c
  7146  001DC4                     i2l3190:
  7147                           
  7148                           ;proyecto.c: 43: if (PORTBbits.RB7==0)
  7149  001DC4  BE81               	btfsc	3969,7,c	;volatile
  7150  001DC6  D004               	goto	i2l150
  7151                           
  7152                           ;proyecto.c: 44: tecla_teclado=11;
  7153  001DC8  0E00               	movlw	0
  7154  001DCA  6E07               	movwf	leer_tecla_d@tecla_teclado+1,c
  7155  001DCC  0E0B               	movlw	11
  7156  001DCE  6E06               	movwf	leer_tecla_d@tecla_teclado,c
  7157  001DD0                     i2l150:
  7158                           
  7159                           ;proyecto.c: 46: PORTB=0X0B;
  7160  001DD0  0E0B               	movlw	11
  7161  001DD2  6E81               	movwf	3969,c	;volatile
  7162                           
  7163                           ;proyecto.c: 47: if (PORTBbits.RB4==0)
  7164  001DD4  B881               	btfsc	3969,4,c	;volatile
  7165  001DD6  D004               	goto	i2l3198
  7166                           
  7167                           ;proyecto.c: 48: tecla_teclado=7;
  7168  001DD8  0E00               	movlw	0
  7169  001DDA  6E07               	movwf	leer_tecla_d@tecla_teclado+1,c
  7170  001DDC  0E07               	movlw	7
  7171  001DDE  6E06               	movwf	leer_tecla_d@tecla_teclado,c
  7172  001DE0                     i2l3198:
  7173                           
  7174                           ;proyecto.c: 49: if (PORTBbits.RB5==0)
  7175  001DE0  BA81               	btfsc	3969,5,c	;volatile
  7176  001DE2  D004               	goto	i2l3202
  7177                           
  7178                           ;proyecto.c: 50: tecla_teclado=8;
  7179  001DE4  0E00               	movlw	0
  7180  001DE6  6E07               	movwf	leer_tecla_d@tecla_teclado+1,c
  7181  001DE8  0E08               	movlw	8
  7182  001DEA  6E06               	movwf	leer_tecla_d@tecla_teclado,c
  7183  001DEC                     i2l3202:
  7184                           
  7185                           ;proyecto.c: 51: if (PORTBbits.RB6==0)
  7186  001DEC  BC81               	btfsc	3969,6,c	;volatile
  7187  001DEE  D004               	goto	i2l3206
  7188                           
  7189                           ;proyecto.c: 52: tecla_teclado=9;
  7190  001DF0  0E00               	movlw	0
  7191  001DF2  6E07               	movwf	leer_tecla_d@tecla_teclado+1,c
  7192  001DF4  0E09               	movlw	9
  7193  001DF6  6E06               	movwf	leer_tecla_d@tecla_teclado,c
  7194  001DF8                     i2l3206:
  7195                           
  7196                           ;proyecto.c: 53: if (PORTBbits.RB7==0)
  7197  001DF8  BE81               	btfsc	3969,7,c	;volatile
  7198  001DFA  D004               	goto	i2l154
  7199                           
  7200                           ;proyecto.c: 54: tecla_teclado=12;
  7201  001DFC  0E00               	movlw	0
  7202  001DFE  6E07               	movwf	leer_tecla_d@tecla_teclado+1,c
  7203  001E00  0E0C               	movlw	12
  7204  001E02  6E06               	movwf	leer_tecla_d@tecla_teclado,c
  7205  001E04                     i2l154:
  7206                           
  7207                           ;proyecto.c: 56: PORTB=0X07;
  7208  001E04  0E07               	movlw	7
  7209  001E06  6E81               	movwf	3969,c	;volatile
  7210                           
  7211                           ;proyecto.c: 57: if (PORTBbits.RB4==0)
  7212  001E08  B881               	btfsc	3969,4,c	;volatile
  7213  001E0A  D004               	goto	i2l3214
  7214                           
  7215                           ;proyecto.c: 58: tecla_teclado=14;
  7216  001E0C  0E00               	movlw	0
  7217  001E0E  6E07               	movwf	leer_tecla_d@tecla_teclado+1,c
  7218  001E10  0E0E               	movlw	14
  7219  001E12  6E06               	movwf	leer_tecla_d@tecla_teclado,c
  7220  001E14                     i2l3214:
  7221                           
  7222                           ;proyecto.c: 59: if (PORTBbits.RB5==0)
  7223  001E14  BA81               	btfsc	3969,5,c	;volatile
  7224  001E16  D004               	goto	i2l3218
  7225                           
  7226                           ;proyecto.c: 60: tecla_teclado=0;
  7227  001E18  0E00               	movlw	0
  7228  001E1A  6E07               	movwf	leer_tecla_d@tecla_teclado+1,c
  7229  001E1C  0E00               	movlw	0
  7230  001E1E  6E06               	movwf	leer_tecla_d@tecla_teclado,c
  7231  001E20                     i2l3218:
  7232                           
  7233                           ;proyecto.c: 61: if (PORTBbits.RB6==0)
  7234  001E20  BC81               	btfsc	3969,6,c	;volatile
  7235  001E22  D004               	goto	i2l3222
  7236                           
  7237                           ;proyecto.c: 62: tecla_teclado=15;
  7238  001E24  0E00               	movlw	0
  7239  001E26  6E07               	movwf	leer_tecla_d@tecla_teclado+1,c
  7240  001E28  0E0F               	movlw	15
  7241  001E2A  6E06               	movwf	leer_tecla_d@tecla_teclado,c
  7242  001E2C                     i2l3222:
  7243                           
  7244                           ;proyecto.c: 63: if (PORTBbits.RB7==0)
  7245  001E2C  BE81               	btfsc	3969,7,c	;volatile
  7246  001E2E  D004               	goto	i2l3226
  7247                           
  7248                           ;proyecto.c: 64: tecla_teclado=13;
  7249  001E30  0E00               	movlw	0
  7250  001E32  6E07               	movwf	leer_tecla_d@tecla_teclado+1,c
  7251  001E34  0E0D               	movlw	13
  7252  001E36  6E06               	movwf	leer_tecla_d@tecla_teclado,c
  7253  001E38                     i2l3226:
  7254                           
  7255                           ;proyecto.c: 67: if (tecla_teclado != 255)
  7256  001E38  2806               	incf	leer_tecla_d@tecla_teclado,w,c
  7257  001E3A  1007               	iorwf	leer_tecla_d@tecla_teclado+1,w,c
  7258  001E3C  B4D8               	btfsc	status,2,c
  7259  001E3E  D017               	goto	i2l159
  7260                           
  7261                           ;proyecto.c: 68: {
  7262                           ;proyecto.c: 69: for (int t=0;t<300;t++)
  7263  001E40  0E00               	movlw	0
  7264  001E42  6E05               	movwf	leer_tecla_d@t+1,c
  7265  001E44  0E00               	movlw	0
  7266  001E46  6E04               	movwf	leer_tecla_d@t,c
  7267  001E48                     i2l3230:
  7268  001E48  BE05               	btfsc	leer_tecla_d@t+1,7,c
  7269  001E4A  D006               	goto	i2l3234
  7270  001E4C  0E2C               	movlw	44
  7271  001E4E  5C04               	subwf	leer_tecla_d@t,w,c
  7272  001E50  0E01               	movlw	1
  7273  001E52  5805               	subwfb	leer_tecla_d@t+1,w,c
  7274  001E54  B0D8               	btfsc	status,0,c
  7275  001E56  D00B               	goto	i2l159
  7276  001E58                     i2l3234:
  7277                           
  7278                           ;proyecto.c: 70: _delay((unsigned long)((1)*(20000000/4000.0)));
  7279  001E58  0E07               	movlw	7
  7280  001E5A  6E03               	movwf	??_leer_tecla_d& (0+255),c
  7281  001E5C  0E7D               	movlw	125
  7282  001E5E                     i2u496_47:
  7283  001E5E  2EE8               	decfsz	wreg,f,c
  7284  001E60  D7FE               	goto	i2u496_47
  7285  001E62  2E03               	decfsz	??_leer_tecla_d& (0+255),f,c
  7286  001E64  D7FC               	goto	i2u496_47
  7287  001E66  F000               	nop	
  7288  001E68  4A04               	infsnz	leer_tecla_d@t,f,c
  7289  001E6A  2A05               	incf	leer_tecla_d@t+1,f,c
  7290  001E6C  D7ED               	goto	i2l3230
  7291  001E6E                     i2l159:
  7292                           
  7293                           ;proyecto.c: 71: }
  7294                           ;proyecto.c: 73: return tecla_teclado;
  7295  001E6E  C006  F001         	movff	leer_tecla_d@tecla_teclado,?_leer_tecla_d
  7296  001E72  C007  F002         	movff	leer_tecla_d@tecla_teclado+1,?_leer_tecla_d+1
  7297  001E76  0012               	return		;funcret
  7298  001E78                     __end_of_leer_tecla_d:
  7299                           	opt stack 0
  7300                           pclatu	equ	0xFFB
  7301                           pclath	equ	0xFFA
  7302                           tblptru	equ	0xFF8
  7303                           tblptrh	equ	0xFF7
  7304                           tblptrl	equ	0xFF6
  7305                           tablat	equ	0xFF5
  7306                           prodh	equ	0xFF4
  7307                           prodl	equ	0xFF3
  7308                           intcon	equ	0xFF2
  7309                           intcon2	equ	0xFF1
  7310                           fsr0h	equ	0xFEA
  7311                           fsr0l	equ	0xFE9
  7312                           wreg	equ	0xFE8
  7313                           indf1	equ	0xFE7
  7314                           fsr1h	equ	0xFE2
  7315                           fsr1l	equ	0xFE1
  7316                           indf2	equ	0xFDF
  7317                           postinc2	equ	0xFDE
  7318                           postdec2	equ	0xFDD
  7319                           fsr2h	equ	0xFDA
  7320                           fsr2l	equ	0xFD9
  7321                           status	equ	0xFD8
  7322                           pclatu	equ	0xFFB
  7323                           pclath	equ	0xFFA
  7324                           tblptru	equ	0xFF8
  7325                           tblptrh	equ	0xFF7
  7326                           tblptrl	equ	0xFF6
  7327                           tablat	equ	0xFF5
  7328                           prodh	equ	0xFF4
  7329                           prodl	equ	0xFF3
  7330                           intcon	equ	0xFF2
  7331                           intcon2	equ	0xFF1
  7332                           fsr0h	equ	0xFEA
  7333                           fsr0l	equ	0xFE9
  7334                           wreg	equ	0xFE8
  7335                           indf1	equ	0xFE7
  7336                           fsr1h	equ	0xFE2
  7337                           fsr1l	equ	0xFE1
  7338                           indf2	equ	0xFDF
  7339                           postinc2	equ	0xFDE
  7340                           postdec2	equ	0xFDD
  7341                           fsr2h	equ	0xFDA
  7342                           fsr2l	equ	0xFD9
  7343                           status	equ	0xFD8
  7344                           
  7345                           	psect	rparam
  7346  0000                     pclatu	equ	0xFFB
  7347                           pclath	equ	0xFFA
  7348                           tblptru	equ	0xFF8
  7349                           tblptrh	equ	0xFF7
  7350                           tblptrl	equ	0xFF6
  7351                           tablat	equ	0xFF5
  7352                           prodh	equ	0xFF4
  7353                           prodl	equ	0xFF3
  7354                           intcon	equ	0xFF2
  7355                           intcon2	equ	0xFF1
  7356                           fsr0h	equ	0xFEA
  7357                           fsr0l	equ	0xFE9
  7358                           wreg	equ	0xFE8
  7359                           indf1	equ	0xFE7
  7360                           fsr1h	equ	0xFE2
  7361                           fsr1l	equ	0xFE1
  7362                           indf2	equ	0xFDF
  7363                           postinc2	equ	0xFDE
  7364                           postdec2	equ	0xFDD
  7365                           fsr2h	equ	0xFDA
  7366                           fsr2l	equ	0xFD9
  7367                           status	equ	0xFD8
  7368                           
  7369                           	psect	temp
  7370  00004A                     btemp:
  7371                           	opt stack 0
  7372  00004A                     	ds	1
  7373  0000                     int$flags	set	btemp
  7374                           pclatu	equ	0xFFB
  7375                           pclath	equ	0xFFA
  7376                           tblptru	equ	0xFF8
  7377                           tblptrh	equ	0xFF7
  7378                           tblptrl	equ	0xFF6
  7379                           tablat	equ	0xFF5
  7380                           prodh	equ	0xFF4
  7381                           prodl	equ	0xFF3
  7382                           intcon	equ	0xFF2
  7383                           intcon2	equ	0xFF1
  7384                           fsr0h	equ	0xFEA
  7385                           fsr0l	equ	0xFE9
  7386                           wreg	equ	0xFE8
  7387                           indf1	equ	0xFE7
  7388                           fsr1h	equ	0xFE2
  7389                           fsr1l	equ	0xFE1
  7390                           indf2	equ	0xFDF
  7391                           postinc2	equ	0xFDE
  7392                           postdec2	equ	0xFDD
  7393                           fsr2h	equ	0xFDA
  7394                           fsr2l	equ	0xFD9
  7395                           status	equ	0xFD8


Data Sizes:
    Strings     182
    Constant    10
    Data        2
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     71      73
    BANK0           160     67      71
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> sprintf@c(COMRAM[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[7]), STR_15(CODE[3]), STR_14(CODE[3]), STR_13(CODE[17]), 
		 -> STR_12(CODE[18]), STR_11(CODE[18]), STR_10(CODE[17]), STR_9(CODE[17]), 
		 -> STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[18]), STR_5(CODE[18]), 
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 16
		 -> main@linea2(BANK0[16]), main@linea(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_escribir@cadena	PTR unsigned char  size(2) Largest target is 16
		 -> main@linea2(BANK0[16]), main@linea(BANK0[16]), 


Critical Paths under _main in COMRAM

    _main->_duty_cycle_pwm
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_posicion->_lcd_comando
    _lcd_inicializar->_lcd_comando
    _lcd_escribir->_lcd_dato
    _lcd_cursor->_lcd_comando
    _lcd_borrar->_lcd_comando
    _duty_cycle_pwm->___fttol
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___awtoft->___ftpack
    ___ftdiv->___awtoft
    ___ftadd->___ftpack

Critical Paths under _isr in COMRAM

    _isr->_leer_tecla_d

Critical Paths under _main in BANK0

    _main->_duty_cycle_pwm
    _duty_cycle_pwm->___fttol

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                54    54      0   35915
                                             13 BANK0     54    54      0
                         _Config_ADC
                          _Valor_ADC
                            ___awdiv
                            ___awmod
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                             ___wmul
                     _configurar_pwm
                     _duty_cycle_pwm
                         _lcd_borrar
                         _lcd_cursor
                       _lcd_escribir
                    _lcd_inicializar
                       _lcd_posicion
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             29    21      8    4472
                                             33 COMRAM    25    17      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                             21 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     799
                                             21 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     287
                                             28 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                             21 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _lcd_posicion                                         3     2      1    1310
                                             23 COMRAM     3     2      1
                        _lcd_comando
 ---------------------------------------------------------------------------------
 (1) _lcd_inicializar                                      3     3      0      90
                                             23 COMRAM     3     3      0
                        _lcd_comando
 ---------------------------------------------------------------------------------
 (1) _lcd_escribir                                         4     2      2    1136
                                             22 COMRAM     4     2      2
                           _lcd_dato
 ---------------------------------------------------------------------------------
 (2) _lcd_dato                                             1     1      0      22
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_cursor                                           2     1      1     345
                                             23 COMRAM     2     1      1
                        _lcd_comando
 ---------------------------------------------------------------------------------
 (1) _lcd_borrar                                           0     0      0      44
                        _lcd_comando
 ---------------------------------------------------------------------------------
 (2) _lcd_comando                                          2     2      0      44
                                             21 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _duty_cycle_pwm                                       6     4      2    7716
                                             67 COMRAM     4     4      0
                                             11 BANK0      2     0      2
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     679
                                             63 COMRAM     4     0      4
                                              0 BANK0     11    11      0
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3682
                                             48 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    2905
                                             29 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _configurar_pwm                                       2     1      1     130
                                             21 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     237
                                             21 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    3460
                                             33 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             12     6      6    4379
                                             29 COMRAM    12     6      6
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2464
                                             21 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     552
                                             21 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     556
                                             21 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Valor_ADC                                            5     3      2      92
                                             21 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Config_ADC                                           7     5      2     216
                                             21 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                 14    14      0     107
                                              7 COMRAM    14    14      0
                       _leer_tecla_d
 ---------------------------------------------------------------------------------
 (5) _leer_tecla_d                                         7     5      2     107
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config_ADC
   _Valor_ADC
   ___awdiv
   ___awmod
   ___awtoft
     ___ftpack
   ___ftadd
     ___ftneg (ARG)
     ___ftpack (ARG)
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftneg
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftadd (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
   ___wmul
   _configurar_pwm
   _duty_cycle_pwm
     ___awtoft
       ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
   _lcd_borrar
     _lcd_comando
   _lcd_cursor
     _lcd_comando
   _lcd_escribir
     _lcd_dato
   _lcd_inicializar
     _lcd_comando
   _lcd_posicion
     _lcd_comando
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _isr (ROOT)
   _leer_tecla_d

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     43      47       5       44.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     47      49       1       77.7%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      90      20        0.0%
DATA                 0      0      90       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Dec 13 13:11:29 2016

                       l92 24F4                         l84 255C               ___awdiv@sign 001B  
      ___wmul@multiplicand 0018                __CFG_BORV$0 000000              ?_lcd_posicion 0018  
             __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000  
             __CFG_CP3$OFF 000000               ___ftadd@exp1 0029               ___ftadd@exp2 0028  
             ___ftadd@sign 0027                        l115 1910                        l131 23F2  
                      l221 15B2                        l126 1A3A                        l208 12E8  
                      l219 1564                        l502 20E0                        l190 0DBA  
                      l540 1BA6                        l525 1ACC                        l198 0FE4  
                      l560 2020                        l529 1AF6                        l549 1BC2  
                      l582 25B4                        l685 23C8                        l695 244E  
             __CFG_CPB$OFF 000000                        _PR2 000FCB               __CFG_CPD$OFF 000000  
             __CFG_BOR$OFF 000000                        _isr 0008               ___awmod@sign 001B  
            lcd_dato@dato2 0016                        wreg 000FE8            ?_configurar_pwm 0016  
             __CFG_FOSC$HS 000000                main@decenas 0093           lcd_cursor@cursor 0018  
             __CFG_LVP$OFF 000000               ___ftdiv@cntr 002B               ___ftdiv@sign 0030  
             __CFG_WDT$OFF 000000                       l3020 1916                       l3030 1A1C  
                     l3014 1904                       l3006 18F8                       l3040 1A40  
                     l3032 1A22                       l3008 18FE                       l3024 191C  
                     l3034 1A28                       l3018 190A                       l3036 1A2E  
                     l3028 1A16                       l3044 1A48                       l3038 1A34  
                     l3046 1A78                       l3302 1790                       l3304 1794  
                     l3240 1606                       l3330 180E                       l3322 17DA  
                     l5002 1106                       l5010 114E                       l3316 17C0  
                     l3260 16A6                       l3252 1648                       l3510 221A  
                     l3350 18A0                       l3342 1848                       l3326 17FE  
                     l3270 16D6                       l3246 1620                       l5102 14C4  
                     l5110 14FC                       l3344 184E                       l3336 182C  
                     l3328 1806                       l3280 1716                       l3272 16E8  
                     l3264 16BC                       l3352 18A8                       l5032 11E8  
                     l5024 11B8                       l3514 2228                       l3506 2210  
                     l3530 22D2                       l3266 16C6                       l3354 18C0  
                     l3290 173C                       l5122 1574                       l5042 1224  
                     l3284 172A                       l3292 1768                       l5132 15D6  
                     l5044 122E                       l3550 2318                       l3542 2300  
                     l3534 22E0                       l3526 22C6                       l2902 2444  
                     l3278 1704                       l5134 15E0                       l5062 135E  
                     l5038 120E                       l5070 138A                       l3536 22E8  
                     l4504 1EC8                       l2728 24BC                       l2752 25F8  
                     l5128 15C2                       l5056 1298                       l3482 21C2  
                     l3538 22EC                       l3546 230A                       l2914 253A  
                     l4522 1F0A                       l5066 1372                       l4460 2062  
                     l4620 1B04                       l4532 1F32                       l2940 2254  
                     l5076 13AA                       l5068 137C                       l3494 21E8  
                     l4614 1ADA                       l2918 2546                       l4518 1EFA  
                     l5600 1954                       l3496 21F0                       l3488 21D2  
                     l4472 20AE                       l4464 2070                       l4528 1F22  
                     l2944 2268                       l2936 2244                       l5096 1462  
                     l5610 19A0                       l5602 1966                       l3498 21F4  
                     l4474 20CC                       l4466 207A                       l4642 1B56  
                     l2970 256E                       l2874 2396                       l4802 0A2C  
                     l5612 19A6                       l5604 1978                       l5620 19F0  
                     l4476 20D6                       l4468 2098                       l4644 1B60  
                     l4636 1B34                       l4708 1FFA                       l4548 246C  
                     l4580 1D00                       l2980 24DC                       l2876 239E  
                     l5614 19B6                       l5606 1986                       l5622 1A06  
                     l4662 1BDE                       l4654 1B94                       l4646 1B6A  
                     l4590 1D34                       l4558 1C6A                       l2886 23BE  
                     l2878 23A2                       l2894 2424                       l4822 0AC8  
                     l4806 0A58                       l5616 19C0                       l5608 1990  
                     l4672 1C0E                       l4656 1B9E                       l4648 1B72  
                     l4576 1CEC                       l2976 24CC                       l2968 2568  
                     l2896 242C                       l4912 0D32                       l4816 0A9A  
                     l5634 1996                       l5618 19CE                       l4682 1F94  
                     l4498 1EA0                       l4594 1D50                       l4586 1D1A  
                     l2898 2430                       l4906 0D14                       l4842 0B48  
                     l4588 1D2A                       l4932 0E74                       l4852 0B86  
                     l5638 19AC                       l2998 18E8                       l4942 0ECA  
                     l4926 0E4A                       l4918 0D6A                       l4688 1FBC  
                     l4936 0EA0                       l4856 0B9A                       l4864 0BE2  
                     l4848 0B64                       l4792 09D6                       l4776 095A  
                     l4962 0F5C                       l4946 0EF6                       l4786 09AC  
                     l4956 0F38                       l4892 0CAC                       l4796 0A02  
                     ?_isr 0001                       l5598 1942                       l4886 0C7C  
                     l4878 0C4C                       l4894 0CBA                       l4968 0F94  
                     l4896 0CC4                       l4994 10D0                       l4988 10B4  
                     l4998 10F2                       STR_1 0884                       STR_2 082F  
                     STR_3 0840                       STR_4 0851                       STR_5 080B  
                     STR_6 080B                       STR_7 0873                       STR_8 0895  
                     STR_9 0840                       u4230 09EC                       u4250 0A42  
                     u4171 1F7C                       u4191 1FA4                       u3811 1E88  
                     u3900 1C90                       u4470 0E8A                       u3831 1EB0  
                     _RBIF 007F90                       u3905 1C86                       u4490 0EE0  
                     u4820 15A8                       u3961 1A98                       u3881 1C48  
                     u3971 1AAC                       u4907 2286                       u4917 25D0  
                     u4927 25DA                       u4937 249E                       u4947 24B2  
                     u4867 0B16                       u4957 24BE                       u4877 1082  
                     u4887 225A                       u4897 2274                       _TMR0 000FD6  
             __CFG_WDTPS$1 000000               __CFG_PWRT$ON 000000             ??_lcd_escribir 0019  
                     _main 08C2               ___ftpack@arg 0016                       _menu 00A3  
             ___ftpack@exp 0019                       fsr0h 000FEA                       fsr1h 000FE2  
              main@tiempo1 009B                       fsr0l 000FE9                       fsr2h 000FDA  
                     indf1 000FE7                       fsr1l 000FE1                       indf2 000FDF  
                     fsr2l 000FD9                       btemp 004A                       pclat 000FFA  
                     prodh 000FF4                       prodl 000FF3                       start 0016  
            __CFG_IESO$OFF 000000               ___ftmul@cntr 003E               ___param_bank 000010  
             ___ftmul@sign 003F               ___fttol@exp1 006A               ___fttol@lval 0066  
                    ??_isr 0008             ??_lcd_posicion 0019              __CFG_PLLDIV$5 000000  
           __CFG_CCP2MX$ON 000000                      ?_main 0001            __end_of___awdiv 2232  
          __end_of___ftadd 1C34                      STR_10 0862                      STR_11 081D  
                    STR_12 081D                      STR_13 08A6                      STR_14 08BE  
                    STR_15 08BE                      STR_16 08B7            __end_of___awmod 2322  
          __end_of___ftdiv 2052            __end_of___ftneg 25C2            __end_of___ftmul 1F6C  
          ___awdiv@divisor 0018            __end_of___fttol 1D62                      _T2CON 000FCA  
           __CFG_DEBUG$OFF 000000            __end_of___lwdiv 23D2                 _Config_ADC 18CE  
          __end_of___lwmod 2458                      i2l150 1DD0                      i2l154 1E04  
                    i2l146 1D9C                      i2l159 1E6E                      i2l168 2172  
          ___awdiv@counter 001A                      _PORTB 000F81                      _PORTD 000F83  
            __CFG_USBDIV$2 000000                      _TRISB 000F93                      _TRISC 000F94  
                    _TRISD 000F95              __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000  
            __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000              ?_leer_tecla_d 0001  
           __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000             __CFG_EBTR1$OFF 000000  
           __CFG_EBTR2$OFF 000000             __CFG_EBTR3$OFF 000000              __CFG_WRTB$OFF 000000  
            __CFG_WRTC$OFF 000000              __CFG_WRTD$OFF 000000              lcd_escribir@i 0019  
           __CFG_EBTRB$OFF 000000              ___awtoft@sign 0021            __end_of_dpowers 080B  
          __end_of_isdigit 2600                      _tecla 0048              ___ftpack@sign 001A  
                    main@i 009F                      main@j 009D                      main@k 0095  
                    tablat 000FF5               main@unidades 00A1                      status 000FD8  
          __end_of_sprintf 18CE             __CFG_ICPRT$OFF 000000             __CFG_MCLRE$OFF 000000  
          __initialization 24F6         lcd_cursor@blinking 0019               __end_of_main 15FC  
                   ??_main 006D              ___fttol@sign1 0065              __activetblptr 000002  
           ??_leer_tecla_d 0003                     _ADCON0 000FC2                     _ADCON1 000FC1  
                   _ADCON2 000FC0                     _ADRESH 000FC4                     _ADRESL 000FC3  
                   _CCPR2L 000FBB           ___awdiv@dividend 0016           __end_of___awtoft 2490  
         __end_of___ftpack 2100                     i2l3202 1DEC                     i2l3230 1E48  
                   i2l3222 1E2C                     i2l3214 1E14                     i2l3206 1DF8  
                   i2l3234 1E58                     i2l3226 1E38                     i2l3218 1E20  
                   i2l3170 1D84                     i2l3190 1DC4                     i2l3182 1DAC  
                   i2l3174 1D90                     i2l3166 1D78                     i2l3186 1DB8  
                   i2l3198 1DE0                     i2l3570 2158                     i2l3566 214E  
                   _TMR0IF 007F92             __CFG_VREGEN$ON 000000             __CFG_XINST$OFF 000000  
         __end_of_lcd_dato 25E2       __size_of_lcd_comando 0034              lcd_posicion@a 0019  
            lcd_posicion@b 0018                     ___wmul 2578                  ??___awdiv 001A  
                ??___ftadd 0024                  ??___awmod 001A                  ??___ftdiv 0028  
                ??___ftneg 0019                  ??___ftmul 0037                  ??___fttol 0060  
                ??___lwdiv 001A                  ??___lwmod 0021      Valor_ADC@ResultadoAdc 0019  
         ___awdiv@quotient 001C            ___awmod@divisor 0018         __size_of_Valor_ADC 0044  
                   _tiempo 00A5            ___awmod@counter 001A      ___ftmul@f3_as_product 003B  
     __end_of_lcd_escribir 24F6                ?_Config_ADC 0016               __pdataCOMRAM 0048  
                ??_isdigit 0016               __mediumconst 0000                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8                  ??_sprintf 002A  
         ??_duty_cycle_pwm 0044       __end_of_lcd_posicion 2578                 __accesstop 0060  
  __end_of__initialization 2518            __CFG_PBADEN$OFF 000000                 ___ftadd@f1 001E  
               ___ftadd@f2 0021              ___rparam_used 000001                 ___ftdiv@f1 0022  
               ___ftdiv@f2 0025                 ___ftdiv@f3 002C                 ___ftneg@f1 0016  
               ___awtoft@c 001E                 ___ftmul@f1 0031                 ___ftmul@f2 0034  
               ___fttol@f1 0040             __pcstackCOMRAM 0001         lcd_escribir@cadena 0017  
         ??_configurar_pwm 0017   __size_of_lcd_inicializar 0080            lcd_comando@dato 0017  
             sprintf@width 0038                 __pbssBANK0 00A3          __end_of_Valor_ADC 2416  
      __size_of_Config_ADC 01BA       __end_of_leer_tecla_d 1E78  leer_tecla_d@tecla_teclado 0006  
                  ?___wmul 0016                    _CCP2CON 000FBA                  ?___awtoft 001E  
                ?___ftpack 0016                 _lcd_borrar 260E                 _lcd_cursor 2600  
                ?_lcd_dato 0001                    __Hparam 0000                    __Lparam 0000  
    duty_cycle_pwm@val_pwm 0046                    ___awdiv 21AE                    ___ftadd 1A88  
                  ___awmod 22B2                    ___ftdiv 1F6C                    ___ftneg 259E  
          __size_of___wmul 0026                    ___ftmul 1E78                    ___fttol 1C34  
    __size_of_lcd_escribir 0032                    ___lwdiv 2380                    ___lwmod 2416  
             __psmallconst 0800            __CFG_STVREN$OFF 000000                    __pcinit 24F6  
               ??___awtoft 0021                 ??___ftpack 001B                    __ramtop 0800  
                  __ptext0 08C2                    __ptext1 15FC                    __ptext2 25E2  
                  __ptext3 2578                    __ptext4 2416                    __ptext5 2380  
                  __ptext6 2550                    __ptext7 2232                    __ptext8 24C4  
                  __ptext9 25C2                  _T0CONbits 000FD5                    _dpowers 0801  
                  _isdigit 25E2               __size_of_isr 21A6           ___awmod@dividend 0016  
    __size_of_lcd_posicion 0028                 ??_lcd_dato 0016                    main@led 0090  
                  _sprintf 15FC                    main@pwm 008E             __pintcode_body 2100  
        ??_lcd_inicializar 0018       end_of_initialization 2518              __Lmediumconst 0000  
                  int_func 2100               _lcd_escribir 24C4          Valor_ADC@canalAdc 0018  
                  postdec2 000FDD                    postinc2 000FDE               _lcd_posicion 2550  
                _PORTBbits 000F81                  _PORTEbits 000F84               ??_Config_ADC 0018  
              ?_lcd_borrar 0001                ?_lcd_cursor 0018                  _TRISEbits 000F96  
    __size_of_leer_tecla_d 0116                ___ftdiv@exp 002F                _CCP2CONbits 000FBA  
               main@linea2 007E              ??_lcd_comando 0016                 main@tecla2 0099  
               main@luzext 0097         __end_of_Config_ADC 1A88                ___ftmul@exp 003A  
            leer_tecla_d@t 0004             __end_of___wmul 259E              __pidataCOMRAM 2616  
      start_initialization 24F6               _leer_tecla_d 1D62                __end_of_isr 21AE  
                _Valor_ADC 23D2        __size_of_lcd_borrar 0008        __size_of_lcd_cursor 000E  
                 ??___wmul 001A        __end_of_lcd_comando 24C4           __CFG_LPT1OSC$OFF 000000  
        __size_of___awtoft 0038          __size_of___ftpack 00AE              __pcstackBANK0 0060  
       Config_ADC@CanalesA 0017          __size_of_lcd_dato 0020                sprintf@flag 0033  
              sprintf@prec 0030           ___lwdiv@dividend 0016                 ?_Valor_ADC 0016  
  __size_of_duty_cycle_pwm 005E                  __pintcode 0008                   ?___awdiv 0016  
                 ?___ftadd 001E                   ?___awmod 0016                   ?___ftdiv 0022  
                 ?___ftneg 0016                   ?___ftmul 0031                   ?___fttol 0040  
                 ?___lwdiv 0016                   ?___lwmod 001D            _lcd_inicializar 2232  
              __smallconst 0800                   ?_isdigit 0001            configurar_pwm@a 0017  
          configurar_pwm@b 0016           ___lwdiv@quotient 001A              Config_ADC@TAD 0016  
                 ?_sprintf 0022    __size_of_configurar_pwm 002A    Config_ADC@Justificacion 001C  
           ___wmul@product 001A                _lcd_comando 2490                   _PIR1bits 000F9E  
                 i2u496_47 1E5E      lcd_posicion@direccion 001A                 _ADCON0bits 000FC2  
               _ADCON2bits 000FC0          ___wmul@multiplier 0016                  main@linea 006E  
             ??_lcd_borrar 0018               ??_lcd_cursor 0019                _INTCON2bits 000FF1  
                 __Hrparam 0000                ??_Valor_ADC 0018                   __Lrparam 0000  
  __end_of_lcd_inicializar 22B2     duty_cycle_pwm@porc_pwm 006B         __end_of_lcd_borrar 2616  
       __end_of_lcd_cursor 260E           __size_of___awdiv 0084           __size_of___ftadd 01AC  
         __size_of___awmod 0070           __size_of___ftdiv 00E6           __size_of___ftneg 0024  
         __size_of___ftmul 00F4           __size_of___fttol 012E           __size_of___lwdiv 0052  
         __size_of___lwmod 0042                   ___awtoft 2458                   ___ftpack 2052  
              _isdigit$997 0017                 sprintf@len 0034                 sprintf@val 0036  
         __size_of_isdigit 001E            ___lwdiv@divisor 0018            ___lwdiv@counter 001C  
                 __ptext10 2600                   __ptext11 260E                   __ptext20 1A88  
                 __ptext12 2490                   __ptext21 2052                   __ptext13 2322  
                 __ptext22 22B2                   __ptext14 1C34                   __ptext23 21AE  
                 __ptext15 1E78                   __ptext24 23D2                   __ptext16 2458  
                 __ptext25 18CE                   __ptext17 2526                   __ptext18 259E  
                 __ptext27 1D62                   __ptext19 1F6C                   _lcd_dato 25C2  
         __size_of_sprintf 02D2              __size_of_main 0D3A             _duty_cycle_pwm 2322  
                 int$flags 004A      __CFG_CPUDIV$OSC1_PLL2 000000                 _INTCONbits 000FF2  
                 isdigit@c 0018             _configurar_pwm 2526           lcd_inicializar@i 0019  
                 intlevel2 0000                  sprintf@ap 0031                  sprintf@cp 002E  
                sprintf@sp 0022           ___lwmod@dividend 001D     __end_of_duty_cycle_pwm 2380  
         ?_lcd_inicializar 0001                   sprintf@c 003A                   sprintf@f 0024  
          ___lwmod@divisor 001F            ___lwmod@counter 0021     __end_of_configurar_pwm 2550  
            ?_lcd_escribir 0017            ?_duty_cycle_pwm 006B               ?_lcd_comando 0001  
